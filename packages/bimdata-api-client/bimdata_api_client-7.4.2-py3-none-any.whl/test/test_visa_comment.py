# coding: utf-8

"""
    BIMData API

    BIMData API is a tool to interact with your models stored on BIMDataâ€™s servers.     Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: support@bimdata.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import bimdata_api_client
from bimdata_api_client.models.visa_comment import VisaComment  # noqa: E501
from bimdata_api_client.rest import ApiException

class TestVisaComment(unittest.TestCase):
    """VisaComment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test VisaComment
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = bimdata_api_client.models.visa_comment.VisaComment()  # noqa: E501
        if include_optional :
            return VisaComment(
                id = 56, 
                author = bimdata_api_client.models.user_project.UserProject(
                    id = 56, 
                    user_id = 56, 
                    invitation_id = 56, 
                    email = '0', 
                    firstname = '0', 
                    lastname = '0', 
                    profile_picture = '0', 
                    role = 56, ), 
                author_id = 56, 
                visa_id = '0', 
                content = '0', 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else :
            return VisaComment(
        )

    def testVisaComment(self):
        """Test VisaComment"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
