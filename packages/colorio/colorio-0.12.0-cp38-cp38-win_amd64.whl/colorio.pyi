# This file was generated by Nuitka and describes the types of the
# created shared library.

# At this time it lists only the imports made and can be used by the
# tools that bundle libraries, including Nuitka itself. For instance
# standalone mode usage of the created library will need it.

# In the future, this will also contain type information for values
# in the module, so IDEs will use this. Therefore please include it
# when you make software releases of the extension module that it
# describes.

import datetime
import __about__
import _exceptions
import _helpers
import _rgb_gamut
import _surface_gamut
import _tools
import _visible_gamut
import kgt
import rich
import importlib_metadata
import numpy
import numpy.typing
import cs
import meshio
import meshzoo
import pyvista
import vtk
import scipy.spatial
import matplotlib
import matplotlib.pyplot
import illuminants
import optimesh
import pygmsh
import bianco_schettini
import bradford
import cat02
import cat16
import cmccat2000
import sharp
import von_kries
import _cam16
import _ciecam02
import _ciehcl
import _cielab
import _cielch
import _cieluv
import _color_coordinates
import _color_space
import _din99
import _hdr
import _hsl
import _hsv
import _ictcp
import _ipt
import _jzazbz
import _oklab
import _osa_ucs
import _prolab
import _rlab
import _srgb
import _srlab2
import _xyy
import _xyz
import npx
import cat
import copy
import re
import cat.cat02
import bfd_p
import combvd
import ebner_fairchild
import fairchild_chen
import hung_berns
import leeds
import luo_rigg
import macadam_1942
import macadam_1974
import munsell
import rit_dupont
import witt
import xiao
import json
import pathlib
import helpers
import hue_linearity
import matplotlib.patches
import scipy.optimize
import inspect
import color_distance
import ellipse
import _cie76
import _cie94
import _ciede2000
import _cmc
import scipyx
import scipy.interpolate

# This is not Python source even if it looks so. Make it clear for
# now. This was decided by PEP 484 designers.
__name__ = ...

