{"version":3,"sources":["StreamlitDimensions.tsx","index.tsx"],"names":["withStreamlitConnection","props","useState","prevWidth","setprevWidth","console","log","width","useEffect","timeout","setTimeout","Streamlit","setComponentValue","clearTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAqCeA,eArBa,SAACC,GAC3B,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAiBA,OAhBAC,QAAQC,IAAIL,EAAMM,MAAOJ,GAEzBK,qBAAU,WAGN,IAAIC,EADN,GAAIR,EAAMM,QAAUJ,EAQlB,OALAM,EAAUC,YAAW,WACnBC,IAAUC,kBAAkB,CAACL,MAAON,EAAMM,QAC1CH,EAAaH,EAAMM,SAClB,KAEI,WAAQM,aAAaJ,OAIzB,QC9BTK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b48797e6.chunk.js","sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport { \n  useEffect,\n  useState \n} from \"react\"\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\n\n\nconst StreamlitDimensions = (props: ComponentProps) => {\n  const [prevWidth, setprevWidth] = useState(0);\n  console.log(props.width, prevWidth)\n\n  useEffect(() => {\n\n    if (props.width !== prevWidth) {\n      let timeout: ReturnType<typeof setTimeout>;\n      \n      timeout = setTimeout(() => {\n        Streamlit.setComponentValue({width: props.width})\n        setprevWidth(props.width);\n      }, 100);\n\n      return () => { clearTimeout(timeout) };\n    }\n  })\n\n  return null;\n}\n\nexport default withStreamlitConnection(StreamlitDimensions);\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StreamlitDimensions from \"./StreamlitDimensions\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitDimensions />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}