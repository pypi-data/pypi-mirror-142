[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=3.5.0"]
build-backend = "setuptools.build_meta"

[tools.setuptools_scm]
local_scheme = "no-local-version"

[tool.coverage.run]
branch = true
parallel = true
source = ["py7zr"]

[tool.coverage.report]
show_missing = true
exclude_lines = ["if __name__ == .__main__.:", "pragma: no-cover", "@abstract", "def __repr__"]

[tool.black]
line-length = 125
target-version = ['py38']

[tool.isort]
known_first_party = ['py7zr']
known_third_party = ["docutils", "flake8", "pyannotate_runtime", "pytest", "pytz", "setuptools", "sphinx", "yaml"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 125

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = true
show_column_numbers = true

[tool.check-manifest]
ignore = ["py7zr/version.py", "azure-pipelines.yml", ".readthedocs.yml", "codecov.yml"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = "test*.py"
norecursedirs = [".git", "_build", "tmp", ".eggs"]
timeout = 480
markers = [
    "asyncio: mark a atest as an asyncio test.",
    "basic: mark a test as a basic feature test.",
    "files: mark a test as a test with actual files.",
    "api: mark a test as an interface test.",
    "unit: mark a test as an unit test.",
    "cli: mark a test as a cli test.",
    "benchmark: mark a test as a benchmarking.",
    "misc: misc tests",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = mypy, check, pypy3, py{36,37,38,39,310}, py39d, docs, mprof

[testenv]
basepython =
    py36:   python3.6
    py37:   python3.7
    py38:   python3.8
    py39:   python3.9
    py39d:  python3.9-dbg
    py310:  python3.10
    pypy3:  pypy3
    docs:   python3.8
    check:  python3.8
    mprof:  python3.8
    mypy:   python3.8
passenv = GITHUB_* PYTEST_ADDOPTS COVERALLS_* LIBARCHIVE
extras = test
commands =
    python -m pytest -vv
depends =
    pypy3,py{36,37,38,39,310}: clean, check

[testenv:py38]
extras = test, test_compat

[testenv:pypy3]
extras = test, test_compat

[testenv:mprof]
extras = test, debug
commands =
    mprof run --multiprocess pytest
    mprof plot --output memory-profile.png
deps =
    memory_profiler
    matplotlib

[testenv:py39d]
extras = test, debug
commands =
    python3.9d -m pytest -v --no-cov -R : -k "extract_lzma_1 or extract_encrypted_2 or compress_simple_file_0 or encrypt_simple_file_0"
deps =
    pytest-leaks

[testenv:mypy]
extras = check
commands = mypy py7zr
deps =
    pyzstd

[testenv:check]
extras = check
ignore_errors=true
commands =
    flake8 py7zr tests setup.py
    isort --quiet --check-only --diff py7zr/*.py tests setup.py
    python setup.py sdist
    twine check dist/*
    check-manifest {toxinidir}

[testenv:clean]
deps = coverage[toml]>=5.2
skip_install = true
commands = coverage erase

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[testenv:docs]
extras = docs
commands =
    sphinx-build {posargs:-E} -b html docs build/docs
    sphinx-build -b linkcheck docs build/docs

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38, check, mypy, docs
    3.9: py39
    3.10: py310
    pypy-3: pypy3
"""
