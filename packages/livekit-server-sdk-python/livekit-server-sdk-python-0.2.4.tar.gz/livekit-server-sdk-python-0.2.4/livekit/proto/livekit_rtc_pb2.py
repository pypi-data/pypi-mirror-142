# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: livekit_rtc.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import enum_type_wrapper

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import livekit_models_pb2 as livekit__models__pb2

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x11livekit_rtc.proto\x12\x07livekit\x1a\x14livekit_models.proto"\xe3\x04\n\rSignalRequest\x12,\n\x05offer\x18\x01 \x01(\x0b\x32\x1b.livekit.SessionDescriptionH\x00\x12-\n\x06\x61nswer\x18\x02 \x01(\x0b\x32\x1b.livekit.SessionDescriptionH\x00\x12*\n\x07trickle\x18\x03 \x01(\x0b\x32\x17.livekit.TrickleRequestH\x00\x12-\n\tadd_track\x18\x04 \x01(\x0b\x32\x18.livekit.AddTrackRequestH\x00\x12)\n\x04mute\x18\x05 \x01(\x0b\x32\x19.livekit.MuteTrackRequestH\x00\x12\x33\n\x0csubscription\x18\x06 \x01(\x0b\x32\x1b.livekit.UpdateSubscriptionH\x00\x12\x35\n\rtrack_setting\x18\x07 \x01(\x0b\x32\x1c.livekit.UpdateTrackSettingsH\x00\x12&\n\x05leave\x18\x08 \x01(\x0b\x32\x15.livekit.LeaveRequestH\x00\x12\x33\n\rupdate_layers\x18\n \x01(\x0b\x32\x1a.livekit.UpdateVideoLayersH\x00\x12\x42\n\x17subscription_permission\x18\x0b \x01(\x0b\x32\x1f.livekit.SubscriptionPermissionH\x00\x12(\n\nsync_state\x18\x0c \x01(\x0b\x32\x12.livekit.SyncStateH\x00\x12-\n\x08simulate\x18\r \x01(\x0b\x32\x19.livekit.SimulateScenarioH\x00\x42\t\n\x07message"\x96\x06\n\x0eSignalResponse\x12%\n\x04join\x18\x01 \x01(\x0b\x32\x15.livekit.JoinResponseH\x00\x12-\n\x06\x61nswer\x18\x02 \x01(\x0b\x32\x1b.livekit.SessionDescriptionH\x00\x12,\n\x05offer\x18\x03 \x01(\x0b\x32\x1b.livekit.SessionDescriptionH\x00\x12*\n\x07trickle\x18\x04 \x01(\x0b\x32\x17.livekit.TrickleRequestH\x00\x12,\n\x06update\x18\x05 \x01(\x0b\x32\x1a.livekit.ParticipantUpdateH\x00\x12:\n\x0ftrack_published\x18\x06 \x01(\x0b\x32\x1f.livekit.TrackPublishedResponseH\x00\x12&\n\x05leave\x18\x08 \x01(\x0b\x32\x15.livekit.LeaveRequestH\x00\x12)\n\x04mute\x18\t \x01(\x0b\x32\x19.livekit.MuteTrackRequestH\x00\x12\x34\n\x10speakers_changed\x18\n \x01(\x0b\x32\x18.livekit.SpeakersChangedH\x00\x12*\n\x0broom_update\x18\x0b \x01(\x0b\x32\x13.livekit.RoomUpdateH\x00\x12>\n\x12\x63onnection_quality\x18\x0c \x01(\x0b\x32 .livekit.ConnectionQualityUpdateH\x00\x12\x39\n\x13stream_state_update\x18\r \x01(\x0b\x32\x1a.livekit.StreamStateUpdateH\x00\x12\x45\n\x19subscribed_quality_update\x18\x0e \x01(\x0b\x32 .livekit.SubscribedQualityUpdateH\x00\x12O\n\x1esubscription_permission_update\x18\x0f \x01(\x0b\x32%.livekit.SubscriptionPermissionUpdateH\x00\x12\x17\n\rrefresh_token\x18\x10 \x01(\tH\x00\x42\t\n\x07message"\xdc\x01\n\x0f\x41\x64\x64TrackRequest\x12\x0b\n\x03\x63id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12 \n\x04type\x18\x03 \x01(\x0e\x32\x12.livekit.TrackType\x12\r\n\x05width\x18\x04 \x01(\r\x12\x0e\n\x06height\x18\x05 \x01(\r\x12\r\n\x05muted\x18\x06 \x01(\x08\x12\x13\n\x0b\x64isable_dtx\x18\x07 \x01(\x08\x12$\n\x06source\x18\x08 \x01(\x0e\x32\x14.livekit.TrackSource\x12#\n\x06layers\x18\t \x03(\x0b\x32\x13.livekit.VideoLayer"N\n\x0eTrickleRequest\x12\x15\n\rcandidateInit\x18\x01 \x01(\t\x12%\n\x06target\x18\x02 \x01(\x0e\x32\x15.livekit.SignalTarget".\n\x10MuteTrackRequest\x12\x0b\n\x03sid\x18\x01 \x01(\t\x12\r\n\x05muted\x18\x02 \x01(\x08"\x86\x02\n\x0cJoinResponse\x12\x1b\n\x04room\x18\x01 \x01(\x0b\x32\r.livekit.Room\x12-\n\x0bparticipant\x18\x02 \x01(\x0b\x32\x18.livekit.ParticipantInfo\x12\x34\n\x12other_participants\x18\x03 \x03(\x0b\x32\x18.livekit.ParticipantInfo\x12\x16\n\x0eserver_version\x18\x04 \x01(\t\x12\'\n\x0bice_servers\x18\x05 \x03(\x0b\x32\x12.livekit.ICEServer\x12\x1a\n\x12subscriber_primary\x18\x06 \x01(\x08\x12\x17\n\x0f\x61lternative_url\x18\x07 \x01(\t"H\n\x16TrackPublishedResponse\x12\x0b\n\x03\x63id\x18\x01 \x01(\t\x12!\n\x05track\x18\x02 \x01(\x0b\x32\x12.livekit.TrackInfo"/\n\x12SessionDescription\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0b\n\x03sdp\x18\x02 \x01(\t"C\n\x11ParticipantUpdate\x12.\n\x0cparticipants\x18\x01 \x03(\x0b\x32\x18.livekit.ParticipantInfo"s\n\x12UpdateSubscription\x12\x12\n\ntrack_sids\x18\x01 \x03(\t\x12\x11\n\tsubscribe\x18\x02 \x01(\x08\x12\x36\n\x12participant_tracks\x18\x03 \x03(\x0b\x32\x1a.livekit.ParticipantTracks"\x82\x01\n\x13UpdateTrackSettings\x12\x12\n\ntrack_sids\x18\x01 \x03(\t\x12\x10\n\x08\x64isabled\x18\x03 \x01(\x08\x12&\n\x07quality\x18\x04 \x01(\x0e\x32\x15.livekit.VideoQuality\x12\r\n\x05width\x18\x05 \x01(\r\x12\x0e\n\x06height\x18\x06 \x01(\r"%\n\x0cLeaveRequest\x12\x15\n\rcan_reconnect\x18\x01 \x01(\x08"K\n\x11UpdateVideoLayers\x12\x11\n\ttrack_sid\x18\x01 \x01(\t\x12#\n\x06layers\x18\x02 \x03(\x0b\x32\x13.livekit.VideoLayer"?\n\tICEServer\x12\x0c\n\x04urls\x18\x01 \x03(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x12\n\ncredential\x18\x03 \x01(\t"9\n\x0fSpeakersChanged\x12&\n\x08speakers\x18\x01 \x03(\x0b\x32\x14.livekit.SpeakerInfo")\n\nRoomUpdate\x12\x1b\n\x04room\x18\x01 \x01(\x0b\x32\r.livekit.Room"l\n\x15\x43onnectionQualityInfo\x12\x17\n\x0fparticipant_sid\x18\x01 \x01(\t\x12+\n\x07quality\x18\x02 \x01(\x0e\x32\x1a.livekit.ConnectionQuality\x12\r\n\x05score\x18\x03 \x01(\x02"J\n\x17\x43onnectionQualityUpdate\x12/\n\x07updates\x18\x01 \x03(\x0b\x32\x1e.livekit.ConnectionQualityInfo"b\n\x0fStreamStateInfo\x12\x17\n\x0fparticipant_sid\x18\x01 \x01(\t\x12\x11\n\ttrack_sid\x18\x02 \x01(\t\x12#\n\x05state\x18\x03 \x01(\x0e\x32\x14.livekit.StreamState"D\n\x11StreamStateUpdate\x12/\n\rstream_states\x18\x01 \x03(\x0b\x32\x18.livekit.StreamStateInfo"L\n\x11SubscribedQuality\x12&\n\x07quality\x18\x01 \x01(\x0e\x32\x15.livekit.VideoQuality\x12\x0f\n\x07\x65nabled\x18\x02 \x01(\x08"f\n\x17SubscribedQualityUpdate\x12\x11\n\ttrack_sid\x18\x01 \x01(\t\x12\x38\n\x14subscribed_qualities\x18\x02 \x03(\x0b\x32\x1a.livekit.SubscribedQuality"R\n\x0fTrackPermission\x12\x17\n\x0fparticipant_sid\x18\x01 \x01(\t\x12\x12\n\nall_tracks\x18\x02 \x01(\x08\x12\x12\n\ntrack_sids\x18\x03 \x03(\t"g\n\x16SubscriptionPermission\x12\x18\n\x10\x61ll_participants\x18\x01 \x01(\x08\x12\x33\n\x11track_permissions\x18\x02 \x03(\x0b\x32\x18.livekit.TrackPermission"[\n\x1cSubscriptionPermissionUpdate\x12\x17\n\x0fparticipant_sid\x18\x01 \x01(\t\x12\x11\n\ttrack_sid\x18\x02 \x01(\t\x12\x0f\n\x07\x61llowed\x18\x03 \x01(\x08"\xa4\x01\n\tSyncState\x12+\n\x06\x61nswer\x18\x01 \x01(\x0b\x32\x1b.livekit.SessionDescription\x12\x31\n\x0csubscription\x18\x02 \x01(\x0b\x32\x1b.livekit.UpdateSubscription\x12\x37\n\x0epublish_tracks\x18\x03 \x03(\x0b\x32\x1f.livekit.TrackPublishedResponse"}\n\x10SimulateScenario\x12\x18\n\x0espeaker_update\x18\x01 \x01(\x05H\x00\x12\x16\n\x0cnode_failure\x18\x02 \x01(\x08H\x00\x12\x13\n\tmigration\x18\x03 \x01(\x08H\x00\x12\x16\n\x0cserver_leave\x18\x04 \x01(\x08H\x00\x42\n\n\x08scenario*-\n\x0cSignalTarget\x12\r\n\tPUBLISHER\x10\x00\x12\x0e\n\nSUBSCRIBER\x10\x01*%\n\x0bStreamState\x12\n\n\x06\x41\x43TIVE\x10\x00\x12\n\n\x06PAUSED\x10\x01\x42\x46Z#github.com/livekit/protocol/livekit\xaa\x02\rLiveKit.Proto\xea\x02\x0eLiveKit::Protob\x06proto3'
)

_SIGNALTARGET = DESCRIPTOR.enum_types_by_name["SignalTarget"]
SignalTarget = enum_type_wrapper.EnumTypeWrapper(_SIGNALTARGET)
_STREAMSTATE = DESCRIPTOR.enum_types_by_name["StreamState"]
StreamState = enum_type_wrapper.EnumTypeWrapper(_STREAMSTATE)
PUBLISHER = 0
SUBSCRIBER = 1
ACTIVE = 0
PAUSED = 1


_SIGNALREQUEST = DESCRIPTOR.message_types_by_name["SignalRequest"]
_SIGNALRESPONSE = DESCRIPTOR.message_types_by_name["SignalResponse"]
_ADDTRACKREQUEST = DESCRIPTOR.message_types_by_name["AddTrackRequest"]
_TRICKLEREQUEST = DESCRIPTOR.message_types_by_name["TrickleRequest"]
_MUTETRACKREQUEST = DESCRIPTOR.message_types_by_name["MuteTrackRequest"]
_JOINRESPONSE = DESCRIPTOR.message_types_by_name["JoinResponse"]
_TRACKPUBLISHEDRESPONSE = DESCRIPTOR.message_types_by_name["TrackPublishedResponse"]
_SESSIONDESCRIPTION = DESCRIPTOR.message_types_by_name["SessionDescription"]
_PARTICIPANTUPDATE = DESCRIPTOR.message_types_by_name["ParticipantUpdate"]
_UPDATESUBSCRIPTION = DESCRIPTOR.message_types_by_name["UpdateSubscription"]
_UPDATETRACKSETTINGS = DESCRIPTOR.message_types_by_name["UpdateTrackSettings"]
_LEAVEREQUEST = DESCRIPTOR.message_types_by_name["LeaveRequest"]
_UPDATEVIDEOLAYERS = DESCRIPTOR.message_types_by_name["UpdateVideoLayers"]
_ICESERVER = DESCRIPTOR.message_types_by_name["ICEServer"]
_SPEAKERSCHANGED = DESCRIPTOR.message_types_by_name["SpeakersChanged"]
_ROOMUPDATE = DESCRIPTOR.message_types_by_name["RoomUpdate"]
_CONNECTIONQUALITYINFO = DESCRIPTOR.message_types_by_name["ConnectionQualityInfo"]
_CONNECTIONQUALITYUPDATE = DESCRIPTOR.message_types_by_name["ConnectionQualityUpdate"]
_STREAMSTATEINFO = DESCRIPTOR.message_types_by_name["StreamStateInfo"]
_STREAMSTATEUPDATE = DESCRIPTOR.message_types_by_name["StreamStateUpdate"]
_SUBSCRIBEDQUALITY = DESCRIPTOR.message_types_by_name["SubscribedQuality"]
_SUBSCRIBEDQUALITYUPDATE = DESCRIPTOR.message_types_by_name["SubscribedQualityUpdate"]
_TRACKPERMISSION = DESCRIPTOR.message_types_by_name["TrackPermission"]
_SUBSCRIPTIONPERMISSION = DESCRIPTOR.message_types_by_name["SubscriptionPermission"]
_SUBSCRIPTIONPERMISSIONUPDATE = DESCRIPTOR.message_types_by_name[
    "SubscriptionPermissionUpdate"
]
_SYNCSTATE = DESCRIPTOR.message_types_by_name["SyncState"]
_SIMULATESCENARIO = DESCRIPTOR.message_types_by_name["SimulateScenario"]
SignalRequest = _reflection.GeneratedProtocolMessageType(
    "SignalRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _SIGNALREQUEST,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SignalRequest)
    },
)
_sym_db.RegisterMessage(SignalRequest)

SignalResponse = _reflection.GeneratedProtocolMessageType(
    "SignalResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _SIGNALRESPONSE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SignalResponse)
    },
)
_sym_db.RegisterMessage(SignalResponse)

AddTrackRequest = _reflection.GeneratedProtocolMessageType(
    "AddTrackRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _ADDTRACKREQUEST,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.AddTrackRequest)
    },
)
_sym_db.RegisterMessage(AddTrackRequest)

TrickleRequest = _reflection.GeneratedProtocolMessageType(
    "TrickleRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _TRICKLEREQUEST,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.TrickleRequest)
    },
)
_sym_db.RegisterMessage(TrickleRequest)

MuteTrackRequest = _reflection.GeneratedProtocolMessageType(
    "MuteTrackRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _MUTETRACKREQUEST,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.MuteTrackRequest)
    },
)
_sym_db.RegisterMessage(MuteTrackRequest)

JoinResponse = _reflection.GeneratedProtocolMessageType(
    "JoinResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _JOINRESPONSE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.JoinResponse)
    },
)
_sym_db.RegisterMessage(JoinResponse)

TrackPublishedResponse = _reflection.GeneratedProtocolMessageType(
    "TrackPublishedResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _TRACKPUBLISHEDRESPONSE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.TrackPublishedResponse)
    },
)
_sym_db.RegisterMessage(TrackPublishedResponse)

SessionDescription = _reflection.GeneratedProtocolMessageType(
    "SessionDescription",
    (_message.Message,),
    {
        "DESCRIPTOR": _SESSIONDESCRIPTION,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SessionDescription)
    },
)
_sym_db.RegisterMessage(SessionDescription)

ParticipantUpdate = _reflection.GeneratedProtocolMessageType(
    "ParticipantUpdate",
    (_message.Message,),
    {
        "DESCRIPTOR": _PARTICIPANTUPDATE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.ParticipantUpdate)
    },
)
_sym_db.RegisterMessage(ParticipantUpdate)

UpdateSubscription = _reflection.GeneratedProtocolMessageType(
    "UpdateSubscription",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPDATESUBSCRIPTION,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.UpdateSubscription)
    },
)
_sym_db.RegisterMessage(UpdateSubscription)

UpdateTrackSettings = _reflection.GeneratedProtocolMessageType(
    "UpdateTrackSettings",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPDATETRACKSETTINGS,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.UpdateTrackSettings)
    },
)
_sym_db.RegisterMessage(UpdateTrackSettings)

LeaveRequest = _reflection.GeneratedProtocolMessageType(
    "LeaveRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _LEAVEREQUEST,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.LeaveRequest)
    },
)
_sym_db.RegisterMessage(LeaveRequest)

UpdateVideoLayers = _reflection.GeneratedProtocolMessageType(
    "UpdateVideoLayers",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPDATEVIDEOLAYERS,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.UpdateVideoLayers)
    },
)
_sym_db.RegisterMessage(UpdateVideoLayers)

ICEServer = _reflection.GeneratedProtocolMessageType(
    "ICEServer",
    (_message.Message,),
    {
        "DESCRIPTOR": _ICESERVER,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.ICEServer)
    },
)
_sym_db.RegisterMessage(ICEServer)

SpeakersChanged = _reflection.GeneratedProtocolMessageType(
    "SpeakersChanged",
    (_message.Message,),
    {
        "DESCRIPTOR": _SPEAKERSCHANGED,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SpeakersChanged)
    },
)
_sym_db.RegisterMessage(SpeakersChanged)

RoomUpdate = _reflection.GeneratedProtocolMessageType(
    "RoomUpdate",
    (_message.Message,),
    {
        "DESCRIPTOR": _ROOMUPDATE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.RoomUpdate)
    },
)
_sym_db.RegisterMessage(RoomUpdate)

ConnectionQualityInfo = _reflection.GeneratedProtocolMessageType(
    "ConnectionQualityInfo",
    (_message.Message,),
    {
        "DESCRIPTOR": _CONNECTIONQUALITYINFO,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.ConnectionQualityInfo)
    },
)
_sym_db.RegisterMessage(ConnectionQualityInfo)

ConnectionQualityUpdate = _reflection.GeneratedProtocolMessageType(
    "ConnectionQualityUpdate",
    (_message.Message,),
    {
        "DESCRIPTOR": _CONNECTIONQUALITYUPDATE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.ConnectionQualityUpdate)
    },
)
_sym_db.RegisterMessage(ConnectionQualityUpdate)

StreamStateInfo = _reflection.GeneratedProtocolMessageType(
    "StreamStateInfo",
    (_message.Message,),
    {
        "DESCRIPTOR": _STREAMSTATEINFO,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.StreamStateInfo)
    },
)
_sym_db.RegisterMessage(StreamStateInfo)

StreamStateUpdate = _reflection.GeneratedProtocolMessageType(
    "StreamStateUpdate",
    (_message.Message,),
    {
        "DESCRIPTOR": _STREAMSTATEUPDATE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.StreamStateUpdate)
    },
)
_sym_db.RegisterMessage(StreamStateUpdate)

SubscribedQuality = _reflection.GeneratedProtocolMessageType(
    "SubscribedQuality",
    (_message.Message,),
    {
        "DESCRIPTOR": _SUBSCRIBEDQUALITY,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SubscribedQuality)
    },
)
_sym_db.RegisterMessage(SubscribedQuality)

SubscribedQualityUpdate = _reflection.GeneratedProtocolMessageType(
    "SubscribedQualityUpdate",
    (_message.Message,),
    {
        "DESCRIPTOR": _SUBSCRIBEDQUALITYUPDATE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SubscribedQualityUpdate)
    },
)
_sym_db.RegisterMessage(SubscribedQualityUpdate)

TrackPermission = _reflection.GeneratedProtocolMessageType(
    "TrackPermission",
    (_message.Message,),
    {
        "DESCRIPTOR": _TRACKPERMISSION,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.TrackPermission)
    },
)
_sym_db.RegisterMessage(TrackPermission)

SubscriptionPermission = _reflection.GeneratedProtocolMessageType(
    "SubscriptionPermission",
    (_message.Message,),
    {
        "DESCRIPTOR": _SUBSCRIPTIONPERMISSION,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SubscriptionPermission)
    },
)
_sym_db.RegisterMessage(SubscriptionPermission)

SubscriptionPermissionUpdate = _reflection.GeneratedProtocolMessageType(
    "SubscriptionPermissionUpdate",
    (_message.Message,),
    {
        "DESCRIPTOR": _SUBSCRIPTIONPERMISSIONUPDATE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SubscriptionPermissionUpdate)
    },
)
_sym_db.RegisterMessage(SubscriptionPermissionUpdate)

SyncState = _reflection.GeneratedProtocolMessageType(
    "SyncState",
    (_message.Message,),
    {
        "DESCRIPTOR": _SYNCSTATE,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SyncState)
    },
)
_sym_db.RegisterMessage(SyncState)

SimulateScenario = _reflection.GeneratedProtocolMessageType(
    "SimulateScenario",
    (_message.Message,),
    {
        "DESCRIPTOR": _SIMULATESCENARIO,
        "__module__": "livekit_rtc_pb2"
        # @@protoc_insertion_point(class_scope:livekit.SimulateScenario)
    },
)
_sym_db.RegisterMessage(SimulateScenario)

if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"Z#github.com/livekit/protocol/livekit\252\002\rLiveKit.Proto\352\002\016LiveKit::Proto"
    _SIGNALTARGET._serialized_start = 3914
    _SIGNALTARGET._serialized_end = 3959
    _STREAMSTATE._serialized_start = 3961
    _STREAMSTATE._serialized_end = 3998
    _SIGNALREQUEST._serialized_start = 53
    _SIGNALREQUEST._serialized_end = 664
    _SIGNALRESPONSE._serialized_start = 667
    _SIGNALRESPONSE._serialized_end = 1457
    _ADDTRACKREQUEST._serialized_start = 1460
    _ADDTRACKREQUEST._serialized_end = 1680
    _TRICKLEREQUEST._serialized_start = 1682
    _TRICKLEREQUEST._serialized_end = 1760
    _MUTETRACKREQUEST._serialized_start = 1762
    _MUTETRACKREQUEST._serialized_end = 1808
    _JOINRESPONSE._serialized_start = 1811
    _JOINRESPONSE._serialized_end = 2073
    _TRACKPUBLISHEDRESPONSE._serialized_start = 2075
    _TRACKPUBLISHEDRESPONSE._serialized_end = 2147
    _SESSIONDESCRIPTION._serialized_start = 2149
    _SESSIONDESCRIPTION._serialized_end = 2196
    _PARTICIPANTUPDATE._serialized_start = 2198
    _PARTICIPANTUPDATE._serialized_end = 2265
    _UPDATESUBSCRIPTION._serialized_start = 2267
    _UPDATESUBSCRIPTION._serialized_end = 2382
    _UPDATETRACKSETTINGS._serialized_start = 2385
    _UPDATETRACKSETTINGS._serialized_end = 2515
    _LEAVEREQUEST._serialized_start = 2517
    _LEAVEREQUEST._serialized_end = 2554
    _UPDATEVIDEOLAYERS._serialized_start = 2556
    _UPDATEVIDEOLAYERS._serialized_end = 2631
    _ICESERVER._serialized_start = 2633
    _ICESERVER._serialized_end = 2696
    _SPEAKERSCHANGED._serialized_start = 2698
    _SPEAKERSCHANGED._serialized_end = 2755
    _ROOMUPDATE._serialized_start = 2757
    _ROOMUPDATE._serialized_end = 2798
    _CONNECTIONQUALITYINFO._serialized_start = 2800
    _CONNECTIONQUALITYINFO._serialized_end = 2908
    _CONNECTIONQUALITYUPDATE._serialized_start = 2910
    _CONNECTIONQUALITYUPDATE._serialized_end = 2984
    _STREAMSTATEINFO._serialized_start = 2986
    _STREAMSTATEINFO._serialized_end = 3084
    _STREAMSTATEUPDATE._serialized_start = 3086
    _STREAMSTATEUPDATE._serialized_end = 3154
    _SUBSCRIBEDQUALITY._serialized_start = 3156
    _SUBSCRIBEDQUALITY._serialized_end = 3232
    _SUBSCRIBEDQUALITYUPDATE._serialized_start = 3234
    _SUBSCRIBEDQUALITYUPDATE._serialized_end = 3336
    _TRACKPERMISSION._serialized_start = 3338
    _TRACKPERMISSION._serialized_end = 3420
    _SUBSCRIPTIONPERMISSION._serialized_start = 3422
    _SUBSCRIPTIONPERMISSION._serialized_end = 3525
    _SUBSCRIPTIONPERMISSIONUPDATE._serialized_start = 3527
    _SUBSCRIPTIONPERMISSIONUPDATE._serialized_end = 3618
    _SYNCSTATE._serialized_start = 3621
    _SYNCSTATE._serialized_end = 3785
    _SIMULATESCENARIO._serialized_start = 3787
    _SIMULATESCENARIO._serialized_end = 3912
# @@protoc_insertion_point(module_scope)
