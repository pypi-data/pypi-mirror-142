# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: livekit_recording.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import enum_type_wrapper

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x17livekit_recording.proto\x12\x07livekit\x1a\x1bgoogle/protobuf/empty.proto"\xce\x01\n\x15StartRecordingRequest\x12\r\n\x03url\x18\x01 \x01(\tH\x00\x12.\n\x08template\x18\x02 \x01(\x0b\x32\x1a.livekit.RecordingTemplateH\x00\x12#\n\x04rtmp\x18\x03 \x01(\x0b\x32\x13.livekit.RtmpOutputH\x01\x12\x12\n\x08\x66ilepath\x18\x04 \x01(\tH\x01\x12*\n\x07options\x18\x05 \x01(\x0b\x32\x19.livekit.RecordingOptionsB\x07\n\x05inputB\x08\n\x06output"H\n\x11RecordingTemplate\x12\x0e\n\x06layout\x18\x01 \x01(\t\x12\x11\n\troom_name\x18\x02 \x01(\t\x12\x10\n\x08\x62\x61se_url\x18\x03 \x01(\t"\x1a\n\nRtmpOutput\x12\x0c\n\x04urls\x18\x01 \x03(\t"\xd5\x01\n\x10RecordingOptions\x12(\n\x06preset\x18\x01 \x01(\x0e\x32\x18.livekit.RecordingPreset\x12\r\n\x05width\x18\x02 \x01(\x05\x12\x0e\n\x06height\x18\x03 \x01(\x05\x12\r\n\x05\x64\x65pth\x18\x04 \x01(\x05\x12\x11\n\tframerate\x18\x05 \x01(\x05\x12\x15\n\raudio_bitrate\x18\x06 \x01(\x05\x12\x17\n\x0f\x61udio_frequency\x18\x07 \x01(\x05\x12\x15\n\rvideo_bitrate\x18\x08 \x01(\x05\x12\x0f\n\x07profile\x18\t \x01(\t".\n\x16StartRecordingResponse\x12\x14\n\x0crecording_id\x18\x01 \x01(\t":\n\x10\x41\x64\x64OutputRequest\x12\x14\n\x0crecording_id\x18\x01 \x01(\t\x12\x10\n\x08rtmp_url\x18\x02 \x01(\t"=\n\x13RemoveOutputRequest\x12\x14\n\x0crecording_id\x18\x01 \x01(\t\x12\x10\n\x08rtmp_url\x18\x02 \x01(\t"+\n\x13\x45ndRecordingRequest\x12\x14\n\x0crecording_id\x18\x01 \x01(\t"\x93\x01\n\rRecordingInfo\x12\n\n\x02id\x18\x01 \x01(\t\x12\x11\n\troom_name\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tive\x18\x03 \x01(\x08\x12\r\n\x05\x65rror\x18\x04 \x01(\t\x12!\n\x04\x66ile\x18\x05 \x01(\x0b\x32\x13.livekit.FileResult\x12!\n\x04rtmp\x18\x06 \x03(\x0b\x32\x13.livekit.RtmpResult"4\n\nFileResult\x12\x14\n\x0c\x64ownload_url\x18\x01 \x01(\t\x12\x10\n\x08\x64uration\x18\x02 \x01(\x03"2\n\nRtmpResult\x12\x12\n\nstream_url\x18\x01 \x01(\t\x12\x10\n\x08\x64uration\x18\x02 \x01(\x03*Q\n\x0fRecordingPreset\x12\x08\n\x04NONE\x10\x00\x12\t\n\x05HD_30\x10\x01\x12\t\n\x05HD_60\x10\x02\x12\x0e\n\nFULL_HD_30\x10\x03\x12\x0e\n\nFULL_HD_60\x10\x04\x32\xb1\x02\n\x10RecordingService\x12Q\n\x0eStartRecording\x12\x1e.livekit.StartRecordingRequest\x1a\x1f.livekit.StartRecordingResponse\x12>\n\tAddOutput\x12\x19.livekit.AddOutputRequest\x1a\x16.google.protobuf.Empty\x12\x44\n\x0cRemoveOutput\x12\x1c.livekit.RemoveOutputRequest\x1a\x16.google.protobuf.Empty\x12\x44\n\x0c\x45ndRecording\x12\x1c.livekit.EndRecordingRequest\x1a\x16.google.protobuf.EmptyBFZ#github.com/livekit/protocol/livekit\xaa\x02\rLiveKit.Proto\xea\x02\x0eLiveKit::Protob\x06proto3'
)

_RECORDINGPRESET = DESCRIPTOR.enum_types_by_name["RecordingPreset"]
RecordingPreset = enum_type_wrapper.EnumTypeWrapper(_RECORDINGPRESET)
NONE = 0
HD_30 = 1
HD_60 = 2
FULL_HD_30 = 3
FULL_HD_60 = 4


_STARTRECORDINGREQUEST = DESCRIPTOR.message_types_by_name["StartRecordingRequest"]
_RECORDINGTEMPLATE = DESCRIPTOR.message_types_by_name["RecordingTemplate"]
_RTMPOUTPUT = DESCRIPTOR.message_types_by_name["RtmpOutput"]
_RECORDINGOPTIONS = DESCRIPTOR.message_types_by_name["RecordingOptions"]
_STARTRECORDINGRESPONSE = DESCRIPTOR.message_types_by_name["StartRecordingResponse"]
_ADDOUTPUTREQUEST = DESCRIPTOR.message_types_by_name["AddOutputRequest"]
_REMOVEOUTPUTREQUEST = DESCRIPTOR.message_types_by_name["RemoveOutputRequest"]
_ENDRECORDINGREQUEST = DESCRIPTOR.message_types_by_name["EndRecordingRequest"]
_RECORDINGINFO = DESCRIPTOR.message_types_by_name["RecordingInfo"]
_FILERESULT = DESCRIPTOR.message_types_by_name["FileResult"]
_RTMPRESULT = DESCRIPTOR.message_types_by_name["RtmpResult"]
StartRecordingRequest = _reflection.GeneratedProtocolMessageType(
    "StartRecordingRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _STARTRECORDINGREQUEST,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.StartRecordingRequest)
    },
)
_sym_db.RegisterMessage(StartRecordingRequest)

RecordingTemplate = _reflection.GeneratedProtocolMessageType(
    "RecordingTemplate",
    (_message.Message,),
    {
        "DESCRIPTOR": _RECORDINGTEMPLATE,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.RecordingTemplate)
    },
)
_sym_db.RegisterMessage(RecordingTemplate)

RtmpOutput = _reflection.GeneratedProtocolMessageType(
    "RtmpOutput",
    (_message.Message,),
    {
        "DESCRIPTOR": _RTMPOUTPUT,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.RtmpOutput)
    },
)
_sym_db.RegisterMessage(RtmpOutput)

RecordingOptions = _reflection.GeneratedProtocolMessageType(
    "RecordingOptions",
    (_message.Message,),
    {
        "DESCRIPTOR": _RECORDINGOPTIONS,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.RecordingOptions)
    },
)
_sym_db.RegisterMessage(RecordingOptions)

StartRecordingResponse = _reflection.GeneratedProtocolMessageType(
    "StartRecordingResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _STARTRECORDINGRESPONSE,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.StartRecordingResponse)
    },
)
_sym_db.RegisterMessage(StartRecordingResponse)

AddOutputRequest = _reflection.GeneratedProtocolMessageType(
    "AddOutputRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _ADDOUTPUTREQUEST,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.AddOutputRequest)
    },
)
_sym_db.RegisterMessage(AddOutputRequest)

RemoveOutputRequest = _reflection.GeneratedProtocolMessageType(
    "RemoveOutputRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _REMOVEOUTPUTREQUEST,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.RemoveOutputRequest)
    },
)
_sym_db.RegisterMessage(RemoveOutputRequest)

EndRecordingRequest = _reflection.GeneratedProtocolMessageType(
    "EndRecordingRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _ENDRECORDINGREQUEST,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.EndRecordingRequest)
    },
)
_sym_db.RegisterMessage(EndRecordingRequest)

RecordingInfo = _reflection.GeneratedProtocolMessageType(
    "RecordingInfo",
    (_message.Message,),
    {
        "DESCRIPTOR": _RECORDINGINFO,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.RecordingInfo)
    },
)
_sym_db.RegisterMessage(RecordingInfo)

FileResult = _reflection.GeneratedProtocolMessageType(
    "FileResult",
    (_message.Message,),
    {
        "DESCRIPTOR": _FILERESULT,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.FileResult)
    },
)
_sym_db.RegisterMessage(FileResult)

RtmpResult = _reflection.GeneratedProtocolMessageType(
    "RtmpResult",
    (_message.Message,),
    {
        "DESCRIPTOR": _RTMPRESULT,
        "__module__": "livekit_recording_pb2"
        # @@protoc_insertion_point(class_scope:livekit.RtmpResult)
    },
)
_sym_db.RegisterMessage(RtmpResult)

_RECORDINGSERVICE = DESCRIPTOR.services_by_name["RecordingService"]
if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = b"Z#github.com/livekit/protocol/livekit\252\002\rLiveKit.Proto\352\002\016LiveKit::Proto"
    _RECORDINGPRESET._serialized_start = 1064
    _RECORDINGPRESET._serialized_end = 1145
    _STARTRECORDINGREQUEST._serialized_start = 66
    _STARTRECORDINGREQUEST._serialized_end = 272
    _RECORDINGTEMPLATE._serialized_start = 274
    _RECORDINGTEMPLATE._serialized_end = 346
    _RTMPOUTPUT._serialized_start = 348
    _RTMPOUTPUT._serialized_end = 374
    _RECORDINGOPTIONS._serialized_start = 377
    _RECORDINGOPTIONS._serialized_end = 590
    _STARTRECORDINGRESPONSE._serialized_start = 592
    _STARTRECORDINGRESPONSE._serialized_end = 638
    _ADDOUTPUTREQUEST._serialized_start = 640
    _ADDOUTPUTREQUEST._serialized_end = 698
    _REMOVEOUTPUTREQUEST._serialized_start = 700
    _REMOVEOUTPUTREQUEST._serialized_end = 761
    _ENDRECORDINGREQUEST._serialized_start = 763
    _ENDRECORDINGREQUEST._serialized_end = 806
    _RECORDINGINFO._serialized_start = 809
    _RECORDINGINFO._serialized_end = 956
    _FILERESULT._serialized_start = 958
    _FILERESULT._serialized_end = 1010
    _RTMPRESULT._serialized_start = 1012
    _RTMPRESULT._serialized_end = 1062
    _RECORDINGSERVICE._serialized_start = 1148
    _RECORDINGSERVICE._serialized_end = 1453
# @@protoc_insertion_point(module_scope)
