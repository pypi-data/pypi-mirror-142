Metadata-Version: 2.1
Name: kamzik3
Version: 0.7.9
Summary: Device controlling framework
Home-page: https://gitlab.desy.de/cfel-sc/kamzik3
Author: Martin Domaracky
Author-email: sc@cfel.de
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Natural Language :: English
Classifier: Intended Audience :: Science/Research
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy (>=1.16)
Requires-Dist: pyzmq (>=18.0)
Requires-Dist: pint (>=0.16.0)
Requires-Dist: bidict (>=0.18)
Requires-Dist: pyqt5 (>=5.15.0)
Requires-Dist: pyqtgraph (>=0.11.0)
Requires-Dist: pyserial (>=3.4)
Requires-Dist: oyaml (>=0.9)
Requires-Dist: psutil (>=5.6.0)
Requires-Dist: natsort (>=7.0.1)
Requires-Dist: reportlab (>=3.5.42)
Requires-Dist: pandas (>=1.0.4)
Requires-Dist: tables (>=3.6.1)
Requires-Dist: h5py (>=3.2.1)

Kamzik3 is a modular and lightweight experiment control framework written in Python3.

It is focused on minimalist yet unified way to control and orchestrate wide range of
devices used in experimental setup.

It uses ZeroMQ to exchange messages between server and clients. Qt5 is used for the
graphical interface. Kamzik3 provides tools for logging, visualizing and evaluation
of experimental data. Users can create and execute custom macros and scans using the
built-in macro-server.

The experimental setup is defined in one configuration file written in YAML,
human-readable data serialization standard.

The framework can be downloaded from PyPI (https://pypi.org/project/kamzik3/).

Documentation
=============

The documentation is available at: https://cfel-sc-public.pages.desy.de/kamzik3/

Requirements
============

  * Python: 3.7 and higher

  **Python Modules: Backend**

  * numpy
  * pyzmq
  * pint
  * bidict
  * pyqt5
  * pyqtgraph
  * pyserial
  * oyaml
  * psutil
  * natsort
  * reportlab
  * pandas
  * tables

  **Python Modules: Optional**

  * pytango
  * pyopengl
  * sysutil
  * pydaqmx
  * pypiwin32
  * rocketchat-API
  * pytest
  * pytest-cov
  * pytest-lazy-fixture
  * pytest-mock

Changelog
=========

.. include:: HISTORY.rst
  :end-before: EOF


