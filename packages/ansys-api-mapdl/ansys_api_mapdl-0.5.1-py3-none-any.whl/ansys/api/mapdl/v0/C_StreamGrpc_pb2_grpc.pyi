"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.mapdl.v0.C_StreamGrpc_pb2
import ansys.api.mapdl.v0.ansys_kernel_pb2
import grpc
import typing

class C_StreamGrpcServiceStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    Open: grpc.UnaryUnaryMultiCallable[
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.OpenRequest,
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.OpenResponse] = ...

    Close: grpc.UnaryUnaryMultiCallable[
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.CloseRequest,
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.CloseResponse] = ...

    Seek: grpc.UnaryUnaryMultiCallable[
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.SeekRequest,
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.SeekResponse] = ...

    Tell: grpc.UnaryUnaryMultiCallable[
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.TellRequest,
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.TellResponse] = ...

    Read: grpc.UnaryStreamMultiCallable[
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.ReadRequest,
        ansys.api.mapdl.v0.ansys_kernel_pb2.Chunk] = ...

    Write: grpc.StreamUnaryMultiCallable[
        ansys.api.mapdl.v0.ansys_kernel_pb2.Chunk,
        ansys.api.mapdl.v0.C_StreamGrpc_pb2.WriteResponse] = ...


class C_StreamGrpcServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Open(self,
        request: ansys.api.mapdl.v0.C_StreamGrpc_pb2.OpenRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.mapdl.v0.C_StreamGrpc_pb2.OpenResponse: ...

    @abc.abstractmethod
    def Close(self,
        request: ansys.api.mapdl.v0.C_StreamGrpc_pb2.CloseRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.mapdl.v0.C_StreamGrpc_pb2.CloseResponse: ...

    @abc.abstractmethod
    def Seek(self,
        request: ansys.api.mapdl.v0.C_StreamGrpc_pb2.SeekRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.mapdl.v0.C_StreamGrpc_pb2.SeekResponse: ...

    @abc.abstractmethod
    def Tell(self,
        request: ansys.api.mapdl.v0.C_StreamGrpc_pb2.TellRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.mapdl.v0.C_StreamGrpc_pb2.TellResponse: ...

    @abc.abstractmethod
    def Read(self,
        request: ansys.api.mapdl.v0.C_StreamGrpc_pb2.ReadRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ansys.api.mapdl.v0.ansys_kernel_pb2.Chunk]: ...

    @abc.abstractmethod
    def Write(self,
        request: typing.Iterator[ansys.api.mapdl.v0.ansys_kernel_pb2.Chunk],
        context: grpc.ServicerContext,
    ) -> ansys.api.mapdl.v0.C_StreamGrpc_pb2.WriteResponse: ...


def add_C_StreamGrpcServiceServicer_to_server(servicer: C_StreamGrpcServiceServicer, server: grpc.Server) -> None: ...
