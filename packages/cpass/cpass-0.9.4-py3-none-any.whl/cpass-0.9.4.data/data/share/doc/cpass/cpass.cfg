# The configuration file for cpass, the TUI for pass, the standard unix password manager
# Author: Lu Xu <oliver_lew at outlook dot com>
# License: MIT License Copyright (c) 2021 Lu Xu

# This example configuration file list all the available options and their
# default values. That means commenting out (with `#') any or all of the
# options of even remove this file won't change the default behaviour.

[ui]
# Layout of preview window, which shows content of the current highlighted
# folder or decrypted password.
#   side or horizontal: the preview is split to right
#   bottom or vertical: the preview is split to bottom
preview_layout = side

[pass]
# Pass related options, the default values below are also pass's defaults.
#
# Since pass command can be customized with a lot of environment variables,
# the options down here are only those that can not be customized otherwise.
#
# Whether to use --no-symbols option in `pass generate`, true or false.
no_symbols = false

[keys]
# Key bindings configuration. Each action can be assigned with multiple keys or
# key combinations, for the key format, see
#   http://urwid.org/manual/userinput.html#keyboard-input
#
# Each key can be assigned to only one action, the last one override the
# previous ones. (This actually depends on how configparser module works)
#
# Down here lists all defined actions and their default key bindings:
dir_down = l, right
dir_up = h, left
down = j, down, ctrl n
up = k, up, ctrl p
down_screen = page down, ctrl f
up_screen = page up, ctrl b
down_half_screen = ctrl d
up_half_screen = ctrl u
end = G, end
home = g, home
cancel = esc
confirm = enter
search = /
search_back = ?
search_next = n
search_prev = N
insert = i
generate = a
edit = e
delete = d
copy = y
toggle_preview = z
quit = q

[copy_fields]
# Specify which key can be used to copy a specific field. The key will be pressed
# after the 'copy' key in [keys] section, which defaults to 'y'.
#
# The key-value pair corresponding to the field and keybinding, respectively.
# The field string is customizable. It can be any string that appears before a
# colon ':' in the password content.
#
# E.g. if there is a line in the password content as
#   email: foo@bar.com
# then you can copy the email address after the colon with 'y' + 'm' if you have
#   email = m
# in this section.
login = l

[color]
# The configuration of a color palette item is ([] means optional):
#   name = fg, bg[, mono[, fg_high, bg_high]]
# The colors/attributes are the same as those in an urwid palette:
#   (name, fg, bg[, mono[, fg_high, bg_high]]),
#
# For definition, see
#   http://urwid.org/reference/display_modules.html#urwid.BaseScreen.register_palette_entry
# For an palette example, see
#   http://urwid.org/manual/displaymodules.html#setting-a-palette
# For available colors, see
#   http://urwid.org/reference/constants.html#foreground-and-background-colors
#
# For convenience, the 16 named colors are:
#   Standard background and foreground colors
#     black, dark red, dark green, brown, dark blue, dark magenta, dark cyan, light gray
#   Standard foreground colors (not safe to use as background)
#     dark gray, light red, light green, yellow, light blue, light magenta, light cyan, white
#
# Note:
# The palette attributes *should* support comma separated color and settings:
#   foreground = red, bold, underline
# But, since the comma is already used to seperate fg, bg and so on, it cannot
# be used within any one of those attributes, otherwise the commas will be
# confusing.
# This then limits what can be customized for the colors. I decided to leave it
# instead of trying to support multiple settings, a single color or setting is
# enough.
normal   = default, default
border   = light green, default
dir      = light blue, default
alert    = light red, default
bright   = white, default
focus    = standout, default
focusdir = black, light blue, bold

[icon]
# Icons in front of the file/folder name, similar to those in ranger or lf.
dir     = "/"
file    = " "
