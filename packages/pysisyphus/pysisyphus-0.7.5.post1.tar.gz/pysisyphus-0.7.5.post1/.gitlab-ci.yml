variables:
  GIT_SUBMODULE_STRATEGY: recursive
  NIXQC_SRCURL: http://kashyyyk:8888/nix-src
  NIXQC_AVX: 0
  NIXPKGS_ALLOW_UNFREE: 1

stages:
  - build
  - test
  - distribute

nix build:
  stage: build
  before_script:
    - nix-env -f ./nix/pkgs.nix -iA bash cachix
  tags:
    - nix
  script:
    - |
      nix-build -E "(import ./nix/default.nix).pysisyphus.overrideAttrs (oldAttrs: {
        doCheck = false;
        doInstallCheck = false;
      })"
  after_script:
    - |
      if [ -n "$CACHIX_AUTH_TOKEN" ]; then
        realpath result | cachix push pysisyphus
      fi


nix shell:
  stage: build
  tags:
    - nix
  before_script:
    - nix-env -f ./nix/pkgs.nix -iA bash cachix
  script:
    - nix-shell ./nix/shell.nix --run ""
  after_script:
    - |
      if [ -n "$CACHIX_AUTH_TOKEN" ]; then
        nix-build ./nix/shell.nix -A inputDerivation | cachix push pysisyphus
      fi

nix test:
  stage: test
  tags:
    - nix
    - turbomole
    - orca
    - gamess
  script:
    - |
      nix-build -E "(import ./nix/default.nix).pysisyphus.override {
        enableOrca = true;
        enableTurbomole = true;
        enableGamess = true;
        enableMultiwfn = true;
      }"

#container:
  #stage: distribute
  #tags:
    #- nix
  #before_script:
    #- unset NIXPKGS_ALLOW_UNFREE
  #script:
    #- nix-build ./nix/container.nix
  #after_script:
    #- cp result pysisyphus.tar.gz
    #- cp result-2 pysisyphus.sif
  #artifacts:
    #paths:
      #- pysisyphus.tar.gz
      #- pysisyphus.sif
