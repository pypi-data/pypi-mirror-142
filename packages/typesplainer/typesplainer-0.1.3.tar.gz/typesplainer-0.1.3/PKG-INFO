Metadata-Version: 2.1
Name: typesplainer
Version: 0.1.3
Summary: Python typehint explainer
Home-page: https://github.com/wasi-master/typesplainer
Author: Wasi Master
Author-email: arianmollik323@gmail.com
License: MIT
Project-URL: Bug Tracker, https://github.com/wasi-master/typesplainer/issues
Project-URL: Source, https://github.com/wasi-master/typesplainer
Project-URL: Say Thanks, https://saythanks.io/to/wasi-master
Keywords: type,typehint,type explainer,typehint explainer,typesplainer
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Terminals
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# typesplainer
 A Python type explainer!

Available [as a cli](https://pypi.org/project/typesplainer), [as a website](https://typesplainer.herokuapp.com), [as a vscode extension (WIP)](#)

## Usage

First, install the package with `pip install typesplainer`

Then like any other tool such a `black`, `isort`. run typesplainer on your desired files or directory. It will automatically find all types and then explain them for you. e.g.

```sh
python -m typesplainer my_file.py
python -m typesplainer my_directory
```

### Features

- Very performant! Takes 1.7 seconds to explain the entire [python rich library source code](https://github.com/Textualize/rich) consisting of around 50,000 lines!
- Colorized output. Output with colors is going to make sure your eyes feel refreshed.
- Intelligent explanation. Takes pluralization, pronoun usage, article usage, correct grammar into account.
- Best in class parser. It does not rely on some substandard AI based description generator, instead it parses the file using [mypy](https://github.com/mypy/mypy)'s custom parser and shows the most accurate description


