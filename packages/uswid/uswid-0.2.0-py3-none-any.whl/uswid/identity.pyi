from .entity import uSwidEntity as uSwidEntity, uSwidEntityRole as uSwidEntityRole
from .enums import USWID_HEADER_MAGIC as USWID_HEADER_MAGIC, USWID_HEADER_SIZE as USWID_HEADER_SIZE, USWID_HEADER_VERSION as USWID_HEADER_VERSION, uSwidGlobalMap as uSwidGlobalMap
from .errors import NotSupportedError as NotSupportedError
from .link import uSwidLink as uSwidLink
from typing import Any, List, Optional

class uSwidIdentity:
    tag_id: Any
    tag_version: Any
    software_name: Any
    software_version: Any
    summary: Any
    product: Any
    colloquial_version: Any
    revision: Any
    edition: Any
    generator: str
    def __init__(self, tag_id: Optional[str] = ..., tag_version: int = ..., software_name: Optional[str] = ..., software_version: Optional[str] = ...) -> None: ...
    def add_entity(self, entity: uSwidEntity) -> None: ...
    def add_link(self, link: uSwidLink) -> None: ...
    @property
    def links(self) -> List[uSwidLink]: ...
    @property
    def entities(self) -> List[uSwidEntity]: ...
    def import_bytes(self, blob: bytes, use_header: bool = ...) -> None: ...
    def import_xml(self, xml: bytes) -> None: ...
    def import_ini(self, ini: str) -> None: ...
    def export_xml(self) -> bytes: ...
    def export_ini(self) -> str: ...
    def export_bytes(self, use_header: bool = ...) -> bytes: ...
