project:
    name: PROJECT_NAME
    description: Training a chip classifier that classifies NAIP images in to one of 4 classes.
    tags: 
    - example
    platform: arche
    data:
        name: DATASET_NAME
        paths:
            dataset_path: DATASET_PATH
            nfs_data_path: NFS_DATA_PATH
            local_artifacts_path: ../local_artifacts/
        transforms: 
            'inp1': ${project.input.heads.inp1.transforms}
        load: full
        ratio: 0.7
        distributed: false
        batch_size: 20
        num_workers: 8
    input:
        heads:
            '1':
                sensor: NAIP
                resolution: 1
                shape: 
                    D: 1
                    C: 4
                    H: 28
                    W: 28
                bands: 
                    Red:
                        min: 0.0
                        max: 1.0
                        std: 0.229
                        mean: 0.485
                    Green:
                        min: 0.0
                        max: 1.0
                        std: 0.224
                        mean: 0.456
                    Blue:
                        min: 0.0
                        max: 1.0
                        std: 0.225
                        mean: 0.406
                    NIR:
                        min: 0.0
                        max: 1.0
                        std: 0.248
                        mean: 0.502
                transforms:
                    train:
                        normalize: null
                        verticalflip:
                            p: 0.5
                        horizontalflip:
                            p: 0.5
                    val:
                        normalize: null
    output:
        heads:
            '1':
                logits: true
                multilabel: false
                num_classes: 10
                metrics:
                    precision:
                        average: macro 
                    recall:
                        average: macro
                loss:
                    crossentropyloss: null
    model:
        name: dummy
        args:
            n_channels: 4
            n_classes: ${project.output.heads.out1.num_classes}
            path: models.model.Dummy
        num_gpus: ${project.run.num_gpus}
        distributed: ${project.data.distributed}
        weights_dir: weights/
        resume_checkpoint: null
        pretrained_checkpoint: null
    run:
        mode: batch
        num_gpus: 1
        frequency: 10
        max_iters: 1000
        verbose: true
        distributed: ${project.data.distributed}
        optimizer:
            name: sgd
            args:
                lr: 0.1
        scheduler:
            name: steplr
            args:
                gamma: 0.1
                step_size: 30
deployment:
    url: https://arche.granular.ai
    name: ${project.name}
    distributed: ${project.run.distributed}
    run: 
        kind: #defaults to job for single node training and pytorchjob for distributed training
        replicas: #to be populated for distributed training
            master: 1
            worker: 1
        connections:
        - artifacts-store
        nodepool: v100-pool
        container:
            image: gcr.io/granular-ai/phobos:latest
            resources:
                limits: ${project.run.num_gpus}
                requests: ${project.run.num_gpus}