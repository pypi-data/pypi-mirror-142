{"version":3,"file":"chunks/app_components_menuItem_tsx-app_utils_events_tsx-app_utils_performance_constants_tsx-app_view-4fa308.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/menuItem.tsx","webpack:///./app/utils/events.tsx","webpack:///./app/utils/performance/constants.tsx","webpack:///./app/utils/platform.tsx","webpack:///./app/views/dashboardsV2/types.tsx","webpack:///./app/views/eventsV2/data.tsx","webpack:///../node_modules/lodash/cloneDeep.js","webpack:///../node_modules/lodash/pick.js"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport space from 'sentry/styles/space';\nimport {callIfFunction} from 'sentry/utils/callIfFunction';\nimport {Theme} from 'sentry/utils/theme';\n\ntype MenuItemProps = {\n  /**\n   * Enable to allow default event on click\n   */\n  allowDefaultEvent?: boolean;\n  'aria-label'?: string;\n  className?: string;\n  /**\n   * Is the item disabled?\n   */\n  disabled?: boolean;\n  /**\n   * Should this item act as a divider\n   */\n  divider?: boolean;\n  /**\n   * Provided to the onSelect callback when this item is selected\n   */\n  eventKey?: any;\n  /**\n   * Should this item act as a header\n   */\n  header?: boolean;\n  /**\n   * A server rendered URL.\n   */\n  href?: string;\n  /**\n   * Renders an icon next to the item\n   */\n  icon?: React.ReactNode;\n  /**\n   * Is the item actively seleted?\n   */\n  isActive?: boolean;\n  /**\n   * Enable to provide custom button/contents via children\n   */\n  noAnchor?: boolean;\n  /**\n   * Triggered when the item is clicked\n   */\n  onSelect?: (eventKey: any) => void;\n  /**\n   * Enable to stop event propagation on click\n   */\n  stopPropagation?: boolean;\n  /**\n   * The title/tooltipe of the item\n   */\n  title?: string;\n\n  /**\n   * A router target destination\n   */\n  to?: React.ComponentProps<typeof Link>['to'];\n\n  /**\n   * Renders a bottom border (excludes the last item)\n   */\n  withBorder?: boolean;\n};\n\ntype Props = MenuItemProps & Omit<React.HTMLProps<HTMLLIElement>, keyof MenuItemProps>;\n\nconst MenuItem = ({\n  header,\n  icon,\n  divider,\n  isActive,\n  noAnchor,\n  className,\n  children,\n  ...props\n}: Props) => {\n  const {\n    to,\n    href,\n    title,\n    withBorder,\n    disabled,\n    onSelect,\n    eventKey,\n    allowDefaultEvent,\n    stopPropagation,\n  } = props;\n\n  const handleClick = (e: React.MouseEvent): void => {\n    if (disabled) {\n      return;\n    }\n    if (onSelect) {\n      if (allowDefaultEvent !== true) {\n        e.preventDefault();\n      }\n      if (stopPropagation) {\n        e.stopPropagation();\n      }\n      callIfFunction(onSelect, eventKey);\n    }\n  };\n\n  const renderAnchor = (): React.ReactNode => {\n    const linkProps = {\n      onClick: handleClick,\n      tabIndex: -1,\n      isActive,\n      disabled,\n      withBorder,\n    };\n\n    if (to) {\n      return (\n        <MenuLink to={to} {...linkProps} title={title}>\n          {icon && <MenuIcon>{icon}</MenuIcon>}\n          {children}\n        </MenuLink>\n      );\n    }\n\n    if (href) {\n      return (\n        <MenuAnchor {...linkProps} href={href}>\n          {icon && <MenuIcon>{icon}</MenuIcon>}\n          {children}\n        </MenuAnchor>\n      );\n    }\n\n    return (\n      <MenuTarget role=\"button\" {...linkProps} title={title}>\n        {icon && <MenuIcon>{icon}</MenuIcon>}\n        {children}\n      </MenuTarget>\n    );\n  };\n\n  let renderChildren: React.ReactNode | null = null;\n  if (noAnchor) {\n    renderChildren = children;\n  } else if (header) {\n    renderChildren = children;\n  } else if (!divider) {\n    renderChildren = renderAnchor();\n  }\n\n  return (\n    <MenuListItem\n      className={className}\n      role=\"presentation\"\n      isActive={isActive}\n      divider={divider}\n      noAnchor={noAnchor}\n      header={header}\n      {...omit(props, ['href', 'title', 'onSelect', 'eventKey', 'to', 'as'])}\n    >\n      {renderChildren}\n    </MenuListItem>\n  );\n};\n\ntype MenuListItemProps = {\n  disabled?: boolean;\n  divider?: boolean;\n  header?: boolean;\n  isActive?: boolean;\n  noAnchor?: boolean;\n  withBorder?: boolean;\n} & React.HTMLProps<HTMLLIElement>;\n\nfunction getListItemStyles(props: MenuListItemProps & {theme: Theme}) {\n  const common = `\n    display: block;\n    padding: ${space(0.5)} ${space(2)};\n    &:focus {\n      outline: none;\n    }\n  `;\n\n  if (props.disabled) {\n    return `\n      ${common}\n      color: ${props.theme.disabled};\n      background: transparent;\n      cursor: not-allowed;\n    `;\n  }\n\n  if (props.isActive) {\n    return `\n      ${common}\n      color: ${props.theme.white};\n      background: ${props.theme.active};\n\n      &:hover {\n        background: ${props.theme.activeHover};\n      }\n    `;\n  }\n\n  return `\n    ${common}\n\n    &:hover {\n      background: ${props.theme.hover};\n    }\n  `;\n}\n\nfunction getChildStyles(props: MenuListItemProps & {theme: Theme}) {\n  if (!props.noAnchor) {\n    return '';\n  }\n\n  return `\n    & a {\n      ${getListItemStyles(props)}\n    }\n  `;\n}\n\nconst shouldForwardProp = (p: PropertyKey) =>\n  typeof p === 'string' && ['isActive', 'disabled', 'withBorder'].includes(p) === false;\n\nconst MenuAnchor = styled('a', {shouldForwardProp})<MenuListItemProps>`\n  ${getListItemStyles}\n`;\n\nconst MenuListItem = styled('li')<MenuListItemProps>`\n  display: block;\n\n  ${p =>\n    p.withBorder &&\n    `\n    border-bottom: 1px solid ${p.theme.innerBorder};\n\n    &:last-child {\n      border-bottom: none;\n    }\n  `};\n  ${p =>\n    p.divider &&\n    `\n    height: 1px;\n    margin: ${space(0.5)} 0;\n    overflow: hidden;\n    background-color: ${p.theme.innerBorder};\n  `}\n  ${p =>\n    p.header &&\n    `\n    padding: ${space(0.25)} ${space(0.5)};\n    font-size: ${p.theme.fontSizeSmall};\n    line-height: 1.4;\n    color: ${p.theme.gray300};\n  `}\n\n  ${getChildStyles}\n`;\n\nconst MenuTarget = styled('span')<MenuListItemProps>`\n  ${getListItemStyles}\n  display: flex;\n  align-items: center;\n`;\n\nconst MenuIcon = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-right: ${space(1)};\n`;\n\nconst MenuLink = styled(Link, {shouldForwardProp})<MenuListItemProps>`\n  ${getListItemStyles}\n`;\n\nexport default MenuItem;\n","import {\n  BaseGroup,\n  EventMetadata,\n  EventOrGroupType,\n  GroupTombstone,\n  TreeLabelPart,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {isMobilePlatform, isNativePlatform} from 'sentry/utils/platform';\n\nfunction isTombstone(maybe: BaseGroup | Event | GroupTombstone): maybe is GroupTombstone {\n  return !maybe.hasOwnProperty('type');\n}\n\n/**\n * Extract the display message from an event.\n */\nexport function getMessage(\n  event: Event | BaseGroup | GroupTombstone\n): string | undefined {\n  if (isTombstone(event)) {\n    return event.culprit || '';\n  }\n\n  const {metadata, type, culprit} = event;\n\n  switch (type) {\n    case EventOrGroupType.ERROR:\n      return metadata.value;\n    case EventOrGroupType.CSP:\n      return metadata.message;\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      return '';\n    default:\n      return culprit || '';\n  }\n}\n\n/**\n * Get the location from an event.\n */\nexport function getLocation(event: Event | BaseGroup | GroupTombstone) {\n  if (isTombstone(event)) {\n    return undefined;\n  }\n\n  if (event.type === EventOrGroupType.ERROR && isNativePlatform(event.platform)) {\n    return event.metadata.filename || undefined;\n  }\n\n  return undefined;\n}\n\nexport function getTreeLabelPartDetails(part: TreeLabelPart) {\n  // Note: This function also exists in Python in eventtypes/base.py, to make\n  // porting efforts simpler it's recommended to keep both variants\n  // structurally similar.\n  if (typeof part === 'string') {\n    return part;\n  }\n\n  const label = part?.function || part?.package || part?.filebase || part?.type;\n  const classbase = part?.classbase;\n\n  if (classbase) {\n    return label ? `${classbase}.${label}` : classbase;\n  }\n\n  return label || '<unknown>';\n}\n\nfunction computeTitleWithTreeLabel(metadata: EventMetadata) {\n  const {type, current_tree_label, finest_tree_label} = metadata;\n\n  const treeLabel = current_tree_label || finest_tree_label;\n\n  const formattedTreeLabel = treeLabel\n    ? treeLabel.map(labelPart => getTreeLabelPartDetails(labelPart)).join(' | ')\n    : undefined;\n\n  if (!type) {\n    return {\n      title: formattedTreeLabel || metadata.function || '<unknown>',\n      treeLabel,\n    };\n  }\n\n  if (!formattedTreeLabel) {\n    return {title: type, treeLabel: undefined};\n  }\n\n  return {\n    title: `${type} | ${formattedTreeLabel}`,\n    treeLabel: [{type}, ...(treeLabel ?? [])],\n  };\n}\n\nexport function getTitle(\n  event: Event | BaseGroup,\n  features: string[] = [],\n  grouping = false\n) {\n  const {metadata, type, culprit} = event;\n\n  const customTitle =\n    features.includes('custom-event-title') && metadata?.title\n      ? metadata.title\n      : undefined;\n\n  switch (type) {\n    case EventOrGroupType.ERROR: {\n      if (customTitle) {\n        return {\n          title: customTitle,\n          subtitle: culprit,\n          treeLabel: undefined,\n        };\n      }\n\n      const displayTitleWithTreeLabel =\n        features.includes('grouping-title-ui') &&\n        (grouping ||\n          isNativePlatform(event.platform) ||\n          isMobilePlatform(event.platform));\n\n      if (displayTitleWithTreeLabel) {\n        return {\n          subtitle: culprit,\n          ...computeTitleWithTreeLabel(metadata),\n        };\n      }\n\n      return {\n        subtitle: culprit,\n        title: metadata.type || metadata.function || '<unknown>',\n        treeLabel: undefined,\n      };\n    }\n    case EventOrGroupType.CSP:\n      return {\n        title: customTitle ?? metadata.directive ?? '',\n        subtitle: metadata.uri ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      // Due to a regression some reports did not have message persisted\n      // (https://github.com/getsentry/sentry/pull/19794) so we need to fall\n      // back to the computed title for these.\n      return {\n        title: customTitle ?? (metadata.message || event.title),\n        subtitle: metadata.origin ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.DEFAULT:\n      return {\n        title: customTitle ?? metadata.title ?? '',\n        subtitle: '',\n        treeLabel: undefined,\n      };\n    default:\n      return {\n        title: customTitle ?? event.title,\n        subtitle: '',\n        treeLabel: undefined,\n      };\n  }\n}\n\n/**\n * Returns a short eventId with only 8 characters\n */\nexport function getShortEventId(eventId: string) {\n  return eventId.substring(0, 8);\n}\n","import {URL_PARAM} from 'sentry/constants/pageFilters';\n\nexport const MAX_TEAM_KEY_TRANSACTIONS = 100;\n\nexport const PERFORMANCE_URL_PARAM = ['team', ...Object.values(URL_PARAM)];\n","import {mobile} from 'sentry/data/platformCategories';\n\nexport function isNativePlatform(platform: string | undefined) {\n  switch (platform) {\n    case 'cocoa':\n    case 'objc':\n    case 'native':\n    case 'swift':\n    case 'c':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isMobilePlatform(platform: string | undefined) {\n  if (!platform) {\n    return false;\n  }\n\n  return ([...mobile] as string[]).includes(platform);\n}\n","import {Layout} from 'react-grid-layout';\n\nimport {User} from 'sentry/types';\n\n// Max widgets per dashboard we are currently willing\n// to allow to limit the load on snuba from the\n// parallel requests. Somewhat arbitrary\n// limit that can be changed if necessary.\nexport const MAX_WIDGETS = 30;\n\nexport const DEFAULT_TABLE_LIMIT = 5;\n\nexport enum DisplayType {\n  AREA = 'area',\n  BAR = 'bar',\n  LINE = 'line',\n  TABLE = 'table',\n  WORLD_MAP = 'world_map',\n  BIG_NUMBER = 'big_number',\n  STACKED_AREA = 'stacked_area',\n  TOP_N = 'top_n',\n}\n\nexport enum WidgetType {\n  DISCOVER = 'discover',\n  ISSUE = 'issue',\n  METRICS = 'metrics',\n}\n\nexport type WidgetQuery = {\n  aggregates: string[];\n  columns: string[];\n  conditions: string;\n  name: string;\n  orderby: string;\n  // Fields is replaced with aggregates + columns. It\n  // is currently used to track column order on table\n  // widgets.\n  fields?: string[];\n};\n\nexport type Widget = {\n  displayType: DisplayType;\n  interval: string;\n  queries: WidgetQuery[];\n  title: string;\n  id?: string;\n  layout?: WidgetLayout | null;\n  tempId?: string;\n  widgetType?: WidgetType;\n};\n\n// We store an explicit set of keys in the backend now\nexport type WidgetLayout = Pick<Layout, 'h' | 'w' | 'x' | 'y'> & {\n  minH: number;\n};\n\nexport type WidgetPreview = {\n  displayType: DisplayType;\n  layout: WidgetLayout | null;\n};\n\n/**\n * The response shape from dashboard list endpoint\n */\nexport type DashboardListItem = {\n  id: string;\n  title: string;\n  widgetDisplay: DisplayType[];\n  widgetPreview: WidgetPreview[];\n  createdBy?: User;\n  dateCreated?: string;\n};\n\n/**\n * Saved dashboard with widgets\n */\nexport type DashboardDetails = {\n  dateCreated: string;\n  id: string;\n  title: string;\n  widgets: Widget[];\n  createdBy?: User;\n};\n\nexport enum DashboardState {\n  VIEW = 'view',\n  EDIT = 'edit',\n  CREATE = 'create',\n  PENDING_DELETE = 'pending_delete',\n  PREVIEW = 'preview',\n}\n\n// where we launch the dashboard widget from\nexport enum DashboardWidgetSource {\n  DISCOVERV2 = 'discoverv2',\n  DASHBOARDS = 'dashboards',\n  LIBRARY = 'library',\n  ISSUE_DETAILS = 'issueDetail',\n}\n","import {t} from 'sentry/locale';\nimport {NewQuery} from 'sentry/types';\n\nexport const DEFAULT_EVENT_VIEW: Readonly<NewQuery> = {\n  id: undefined,\n  name: t('All Events'),\n  query: '',\n  projects: [],\n  fields: ['title', 'event.type', 'project', 'user.display', 'timestamp'],\n  orderby: '-timestamp',\n  version: 2,\n  range: '24h',\n};\n\nexport const TRANSACTION_VIEWS: Readonly<Array<NewQuery>> = [\n  {\n    id: undefined,\n    name: t('Transactions by Volume'),\n    fields: [\n      'transaction',\n      'project',\n      'count()',\n      'avg(transaction.duration)',\n      'p75()',\n      'p95()',\n    ],\n    orderby: '-count',\n    query: 'event.type:transaction',\n    projects: [],\n    version: 2,\n    range: '24h',\n  },\n];\n\nexport const WEB_VITALS_VIEWS: Readonly<Array<NewQuery>> = [\n  {\n    id: undefined,\n    name: t('Web Vitals'),\n    fields: [\n      'transaction',\n      'epm()',\n      'p75(measurements.fp)',\n      'p75(measurements.fcp)',\n      'p75(measurements.lcp)',\n      'p75(measurements.fid)',\n      'p75(measurements.cls)',\n    ],\n    orderby: '-epm',\n    query: 'event.type:transaction transaction.op:pageload',\n    projects: [],\n    version: 2,\n    range: '24h',\n  },\n];\n\nexport const ALL_VIEWS: Readonly<Array<NewQuery>> = [\n  DEFAULT_EVENT_VIEW,\n  {\n    id: undefined,\n    name: t('Errors by Title'),\n    fields: ['title', 'count()', 'count_unique(user)', 'project'],\n    orderby: '-count',\n    query: 'event.type:error',\n    projects: [],\n    version: 2,\n    range: '24h',\n    display: 'top5',\n  },\n  {\n    id: undefined,\n    name: t('Errors by URL'),\n    fields: ['url', 'count()', 'count_unique(issue)'],\n    orderby: '-count',\n    query: 'event.type:error has:url',\n    projects: [],\n    version: 2,\n    range: '24h',\n    display: 'top5',\n  },\n];\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n"],"names":["MenuItem","header","icon","divider","isActive","noAnchor","className","children","props","to","href","title","withBorder","disabled","onSelect","eventKey","allowDefaultEvent","stopPropagation","handleClick","e","preventDefault","callIfFunction","renderChildren","linkProps","onClick","tabIndex","MenuLink","MenuIcon","MenuAnchor","MenuTarget","role","renderAnchor","MenuListItem","omit","getListItemStyles","common","space","theme","white","active","activeHover","hover","getChildStyles","shouldForwardProp","p","includes","innerBorder","fontSizeSmall","gray300","Link","isTombstone","maybe","hasOwnProperty","getMessage","event","culprit","metadata","type","EventOrGroupType","value","message","getLocation","isNativePlatform","platform","filename","getTreeLabelPartDetails","part","label","function","package","filebase","classbase","computeTitleWithTreeLabel","current_tree_label","finest_tree_label","treeLabel","formattedTreeLabel","map","labelPart","join","undefined","getTitle","features","grouping","customTitle","subtitle","isMobilePlatform","directive","uri","origin","getShortEventId","eventId","substring","MAX_TEAM_KEY_TRANSACTIONS","PERFORMANCE_URL_PARAM","Object","values","URL_PARAM","mobile","MAX_WIDGETS","DEFAULT_TABLE_LIMIT","DisplayType","WidgetType","DashboardState","DashboardWidgetSource","DEFAULT_EVENT_VIEW","id","name","t","query","projects","fields","orderby","version","range","TRANSACTION_VIEWS","WEB_VITALS_VIEWS","ALL_VIEWS","display","baseClone","module","exports","CLONE_DEEP_FLAG","basePick","pick","flatRest","object","paths"],"sourceRoot":""}