{"version":3,"file":"chunks/app_views_organizationIntegrations_sentryAppDetailedView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/sentryAppInstallations.tsx","webpack:///./app/components/sentryAppIcon.tsx","webpack:///./app/utils/consolidatedScopes.tsx","webpack:///./app/views/organizationIntegrations/SplitInstallationIdModal.tsx","webpack:///./app/views/organizationIntegrations/sentryAppDetailedView.tsx","webpack:///../node_modules/lodash/invertBy.js"],"sourcesContent":["import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {SentryApp, SentryAppInstallation} from 'sentry/types';\n\n/**\n * Install a sentry application\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {Object} app SentryApp\n */\nexport function installSentryApp(\n  client: Client,\n  orgId: string,\n  app: SentryApp\n): Promise<SentryAppInstallation> {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/sentry-app-installations/`,\n    {\n      method: 'POST',\n      data: {slug: app.slug},\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t(`Unable to install ${app.name}`))\n  );\n  return promise;\n}\n\n/**\n * Uninstall a sentry application\n *\n * @param {Object} client ApiClient\n * @param {Object} install SentryAppInstallation\n */\nexport function uninstallSentryApp(\n  client: Client,\n  install: SentryAppInstallation\n): Promise<void> {\n  addLoadingMessage();\n  const promise = client.requestPromise(`/sentry-app-installations/${install.uuid}/`, {\n    method: 'DELETE',\n  });\n  promise.then(\n    () => {\n      addSuccessMessage(t(`${install.app.slug} successfully uninstalled.`));\n    },\n    () => clearIndicators()\n  );\n  return promise;\n}\n","import React from 'react';\n\nimport SentryAppAvatar from 'sentry/components/avatar/sentryAppAvatar';\nimport {AvatarSentryApp} from 'sentry/types';\n\ntype Props = {\n  sentryApp: AvatarSentryApp;\n  size: number;\n};\n\nconst SentryAppIcon = ({sentryApp, size}: Props) => {\n  return <SentryAppAvatar sentryApp={sentryApp} size={size} isColor />;\n};\n\nexport default SentryAppIcon;\n","import groupBy from 'lodash/groupBy';\nimport invertBy from 'lodash/invertBy';\nimport pick from 'lodash/pick';\n\nimport {Permissions} from 'sentry/types';\n\nconst PERMISSION_LEVELS = {\n  read: 0,\n  write: 1,\n  admin: 2,\n};\n\nconst HUMAN_RESOURCE_NAMES = {\n  project: 'Project',\n  team: 'Team',\n  release: 'Release',\n  event: 'Event',\n  org: 'Organization',\n  member: 'Member',\n};\n\nconst DEFAULT_RESOURCE_PERMISSIONS: Permissions = {\n  Project: 'no-access',\n  Team: 'no-access',\n  Release: 'no-access',\n  Event: 'no-access',\n  Organization: 'no-access',\n  Member: 'no-access',\n};\n\nconst PROJECT_RELEASES = 'project:releases';\n\ntype PermissionLevelResources = {\n  admin: string[];\n  read: string[];\n  write: string[];\n};\n/**\n * Numerical value of the scope where Admin is higher than Write,\n * which is higher than Read. Used to sort scopes by access.\n */\nconst permissionLevel = (scope: string): number => {\n  const permission = scope.split(':')[1];\n  return PERMISSION_LEVELS[permission];\n};\n\nconst compareScopes = (a: string, b: string) => permissionLevel(a) - permissionLevel(b);\n\n/**\n * Return the most permissive scope for each resource.\n *\n * Example:\n *    Given the full list of scopes:\n *      ['project:read', 'project:write', 'team:read', 'team:write', 'team:admin']\n *\n *    this would return:\n *      ['project:write', 'team:admin']\n */\nfunction topScopes(scopeList: string[]) {\n  return Object.values(groupBy(scopeList, scope => scope.split(':')[0]))\n    .map(scopes => scopes.sort(compareScopes))\n    .map(scopes => scopes.pop());\n}\n\n/**\n * Convert into a list of Permissions, grouped by resource.\n *\n * This is used in the new/edit Sentry App form. That page displays permissions\n * in a per-Resource manner, meaning one row for Project, one for Organization, etc.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      'Project': 'read',\n *      'Organization': 'write',\n *      'Team': 'no-access',\n *      ...\n *    }\n */\nfunction toResourcePermissions(scopes: string[]): Permissions {\n  const permissions = {...DEFAULT_RESOURCE_PERMISSIONS};\n  let filteredScopes = [...scopes];\n  // The scope for releases is `project:releases`, but instead of displaying\n  // it as a permission of Project, we want to separate it out into its own\n  // row for Releases.\n  if (scopes.includes(PROJECT_RELEASES)) {\n    permissions.Release = 'admin';\n    filteredScopes = scopes.filter((scope: string) => scope !== PROJECT_RELEASES); // remove project:releases\n  }\n\n  topScopes(filteredScopes).forEach((scope: string | undefined) => {\n    if (scope) {\n      const [resource, permission] = scope.split(':');\n      permissions[HUMAN_RESOURCE_NAMES[resource]] = permission;\n    }\n  });\n\n  return permissions;\n}\n\n/**\n * Convert into a list of Permissions, grouped by access and including a\n * list of resources per access level.\n *\n * This is used in the Permissions Modal when installing an App. It displays\n * scopes in a per-Permission way, meaning one row for Read, one for Write,\n * and one for Admin.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      read:  ['Project', 'Organization'],\n *      write: ['Member'],\n *      admin: ['Release']\n *    }\n */\nfunction toPermissions(scopes: string[]): PermissionLevelResources {\n  const defaultPermissions = {read: [], write: [], admin: []};\n  const resourcePermissions = toResourcePermissions(scopes);\n\n  // Filter out the 'no-access' permissions\n  const permissions = pick(invertBy(resourcePermissions), ['read', 'write', 'admin']);\n  return {...defaultPermissions, ...permissions};\n}\n\nexport {toPermissions, toResourcePermissions};\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport TextCopyInput from 'sentry/components/forms/textCopyInput';\n\ntype Props = {\n  closeModal: () => void;\n  installationId: string;\n};\n\n/**\n * This component is a hack for Split.\n * It will display the installation ID after installation so users can copy it and paste it in Split's website.\n * We also have a link for users to click so they can go to Split's website.\n */\nexport default class SplitInstallationIdModal extends Component<Props> {\n  onCopy = async () =>\n    // This hack is needed because the normal copying methods with TextCopyInput do not work correctly\n    await navigator.clipboard.writeText(this.props.installationId);\n\n  handleContinue = () => {\n    const delay = 2000;\n    this.onCopy();\n    addSuccessMessage('Copied to clipboard');\n    setTimeout(() => {\n      window.open('https://app.split.io/org/admin/integrations');\n    }, delay);\n  };\n\n  render() {\n    const {installationId, closeModal} = this.props;\n    // no need to translate this temporary component\n    return (\n      <div>\n        <ItemHolder>\n          Copy this Installation ID and click to continue. You will use it to finish setup\n          on Split.io.\n        </ItemHolder>\n        <ItemHolder>\n          <TextCopyInput onCopy={this.onCopy}>{installationId}</TextCopyInput>\n        </ItemHolder>\n        <ButtonHolder>\n          <Button size=\"small\" onClick={closeModal}>\n            Close\n          </Button>\n          <Button size=\"small\" priority=\"primary\" onClick={this.handleContinue}>\n            Copy and Open Link\n          </Button>\n        </ButtonHolder>\n      </div>\n    );\n  }\n}\n\nconst ItemHolder = styled('div')`\n  margin: 10px;\n`;\n\nconst ButtonHolder = styled(ItemHolder)`\n  text-align: right;\n  & button {\n    margin: 5px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {openModal} from 'sentry/actionCreators/modal';\nimport {\n  installSentryApp,\n  uninstallSentryApp,\n} from 'sentry/actionCreators/sentryAppInstallations';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport Confirm from 'sentry/components/confirm';\nimport SentryAppIcon from 'sentry/components/sentryAppIcon';\nimport {IconSubtract} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {IntegrationFeature, SentryApp, SentryAppInstallation} from 'sentry/types';\nimport {toPermissions} from 'sentry/utils/consolidatedScopes';\nimport {getSentryAppInstallStatus} from 'sentry/utils/integrationUtil';\nimport {addQueryParamsToExistingUrl} from 'sentry/utils/queryString';\nimport {recordInteraction} from 'sentry/utils/recordSentryAppInteraction';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport AbstractIntegrationDetailedView from './abstractIntegrationDetailedView';\nimport SplitInstallationIdModal from './SplitInstallationIdModal';\n\ntype State = {\n  appInstalls: SentryAppInstallation[];\n  featureData: IntegrationFeature[];\n  sentryApp: SentryApp;\n};\n\ntype Tab = AbstractIntegrationDetailedView['state']['tab'];\n\nclass SentryAppDetailedView extends AbstractIntegrationDetailedView<\n  AbstractIntegrationDetailedView['props'],\n  State & AbstractIntegrationDetailedView['state']\n> {\n  tabs: Tab[] = ['overview'];\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {\n      organization,\n      params: {integrationSlug},\n    } = this.props;\n    return [\n      ['sentryApp', `/sentry-apps/${integrationSlug}/`],\n      ['featureData', `/sentry-apps/${integrationSlug}/features/`],\n      ['appInstalls', `/organizations/${organization.slug}/sentry-app-installations/`],\n    ];\n  }\n\n  onLoadAllEndpointsSuccess() {\n    const {\n      organization,\n      params: {integrationSlug},\n      router,\n    } = this.props;\n\n    // redirect for internal integrations\n    if (this.sentryApp.status === 'internal') {\n      router.push(\n        `/settings/${organization.slug}/developer-settings/${integrationSlug}/`\n      );\n      return;\n    }\n\n    super.onLoadAllEndpointsSuccess();\n    recordInteraction(integrationSlug, 'sentry_app_viewed');\n  }\n\n  get integrationType() {\n    return 'sentry_app' as const;\n  }\n\n  get sentryApp() {\n    return this.state.sentryApp;\n  }\n\n  get description() {\n    return this.state.sentryApp.overview || '';\n  }\n\n  get author() {\n    return this.sentryApp.author;\n  }\n\n  get resourceLinks() {\n    // only show links for published sentry apps\n    if (this.sentryApp.status !== 'published') {\n      return [];\n    }\n    return [\n      {\n        title: 'Documentation',\n        url: `https://docs.sentry.io/product/integrations/${this.integrationSlug}/`,\n      },\n    ];\n  }\n\n  get permissions() {\n    return toPermissions(this.sentryApp.scopes);\n  }\n\n  get installationStatus() {\n    return getSentryAppInstallStatus(this.install);\n  }\n\n  get integrationName() {\n    return this.sentryApp.name;\n  }\n\n  get featureData() {\n    return this.state.featureData;\n  }\n\n  get install() {\n    return this.state.appInstalls.find(i => i.app.slug === this.sentryApp.slug);\n  }\n\n  redirectUser = (install: SentryAppInstallation) => {\n    const {organization} = this.props;\n    const {sentryApp} = this.state;\n    const queryParams = {\n      installationId: install.uuid,\n      code: install.code,\n      orgSlug: organization.slug,\n    };\n    if (sentryApp.redirectUrl) {\n      const redirectUrl = addQueryParamsToExistingUrl(sentryApp.redirectUrl, queryParams);\n      window.location.assign(redirectUrl);\n    }\n  };\n\n  handleInstall = async () => {\n    const {organization} = this.props;\n    const {sentryApp} = this.state;\n    this.trackIntegrationAnalytics('integrations.installation_start', {\n      integration_status: sentryApp.status,\n    });\n    // installSentryApp adds a message on failure\n    const install = await installSentryApp(this.api, organization.slug, sentryApp);\n\n    // installation is complete if the status is installed\n    if (install.status === 'installed') {\n      this.trackIntegrationAnalytics('integrations.installation_complete', {\n        integration_status: sentryApp.status,\n      });\n    }\n\n    if (!sentryApp.redirectUrl) {\n      addSuccessMessage(t(`${sentryApp.slug} successfully installed.`));\n      this.setState({appInstalls: [install, ...this.state.appInstalls]});\n\n      // hack for split so we can show the install ID to users for them to copy\n      // Will remove once the proper fix is in place\n      if (['split', 'split-dev', 'split-testing'].includes(sentryApp.slug)) {\n        openModal(({closeModal}) => (\n          <SplitInstallationIdModal\n            installationId={install.uuid}\n            closeModal={closeModal}\n          />\n        ));\n      }\n    } else {\n      this.redirectUser(install);\n    }\n  };\n\n  handleUninstall = async (install: SentryAppInstallation) => {\n    try {\n      await uninstallSentryApp(this.api, install);\n      this.trackIntegrationAnalytics('integrations.uninstall_completed', {\n        integration_status: this.sentryApp.status,\n      });\n      const appInstalls = this.state.appInstalls.filter(\n        i => i.app.slug !== this.sentryApp.slug\n      );\n      return this.setState({appInstalls});\n    } catch (error) {\n      return addErrorMessage(t(`Unable to uninstall ${this.sentryApp.name}`));\n    }\n  };\n\n  recordUninstallClicked = () => {\n    const sentryApp = this.sentryApp;\n    this.trackIntegrationAnalytics('integrations.uninstall_clicked', {\n      integration_status: sentryApp.status,\n    });\n  };\n\n  renderPermissions() {\n    const permissions = this.permissions;\n    if (!Object.keys(permissions).some(scope => permissions[scope].length > 0)) {\n      return null;\n    }\n\n    return (\n      <PermissionWrapper>\n        <Title>Permissions</Title>\n        {permissions.read.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"read\">\n              {tct('[read] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                resources: permissions.read.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.write.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"write\">\n              {tct('[read] and [write] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                write: <strong>Write</strong>,\n                resources: permissions.write.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.admin.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"admin\">\n              {tct('[admin] access to [resources] resources', {\n                admin: <strong>Admin</strong>,\n                resources: permissions.admin.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n      </PermissionWrapper>\n    );\n  }\n\n  renderTopButton(disabledFromFeatures: boolean, userHasAccess: boolean) {\n    const install = this.install;\n    if (install) {\n      return (\n        <Confirm\n          disabled={!userHasAccess}\n          message={tct('Are you sure you want to remove the [slug] installation?', {\n            slug: this.integrationSlug,\n          })}\n          onConfirm={() => this.handleUninstall(install)} // called when the user confirms the action\n          onConfirming={this.recordUninstallClicked} // called when the confirm modal opens\n          priority=\"danger\"\n        >\n          <StyledUninstallButton size=\"small\" data-test-id=\"sentry-app-uninstall\">\n            <IconSubtract isCircled style={{marginRight: space(0.75)}} />\n            {t('Uninstall')}\n          </StyledUninstallButton>\n        </Confirm>\n      );\n    }\n\n    if (userHasAccess) {\n      return (\n        <InstallButton\n          data-test-id=\"install-button\"\n          disabled={disabledFromFeatures}\n          onClick={() => this.handleInstall()}\n          priority=\"primary\"\n          size=\"small\"\n          style={{marginLeft: space(1)}}\n        >\n          {t('Accept & Install')}\n        </InstallButton>\n      );\n    }\n\n    return this.renderRequestIntegrationButton();\n  }\n\n  // no configurations for sentry apps\n  renderConfigurations() {\n    return null;\n  }\n\n  renderIntegrationIcon() {\n    return <SentryAppIcon sentryApp={this.sentryApp} size={50} />;\n  }\n}\n\nconst Text = styled('p')`\n  margin: 0px 6px;\n`;\n\nconst Permission = styled('div')`\n  display: flex;\n`;\n\nconst PermissionWrapper = styled('div')`\n  padding-bottom: ${space(2)};\n`;\n\nconst Title = styled('p')`\n  margin-bottom: ${space(1)};\n  font-weight: bold;\n`;\n\nconst Indicator = styled(p => <CircleIndicator size={7} {...p} />)`\n  margin-top: 3px;\n  color: ${p => p.theme.success};\n`;\n\nconst InstallButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst StyledUninstallButton = styled(Button)`\n  color: ${p => p.theme.gray300};\n  background: ${p => p.theme.background};\n\n  border: ${p => `1px solid ${p.theme.gray300}`};\n  box-sizing: border-box;\n  box-shadow: 0px 2px 1px rgba(0, 0, 0, 0.08);\n  border-radius: 4px;\n`;\n\nexport default withOrganization(SentryAppDetailedView);\n","var baseIteratee = require('./_baseIteratee'),\n    createInverter = require('./_createInverter');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * This method is like `_.invert` except that the inverted object is generated\n * from the results of running each element of `object` thru `iteratee`. The\n * corresponding inverted value of each inverted key is an array of keys\n * responsible for generating the inverted value. The iteratee is invoked\n * with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Object\n * @param {Object} object The object to invert.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invertBy(object);\n * // => { '1': ['a', 'c'], '2': ['b'] }\n *\n * _.invertBy(object, function(value) {\n *   return 'group' + value;\n * });\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n */\nvar invertBy = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  if (hasOwnProperty.call(result, value)) {\n    result[value].push(key);\n  } else {\n    result[value] = [key];\n  }\n}, baseIteratee);\n\nmodule.exports = invertBy;\n"],"names":["installSentryApp","client","orgId","app","addLoadingMessage","promise","requestPromise","method","data","slug","then","clearIndicators","addErrorMessage","t","name","uninstallSentryApp","install","uuid","addSuccessMessage","SentryAppIcon","sentryApp","size","isColor","PERMISSION_LEVELS","read","write","admin","HUMAN_RESOURCE_NAMES","project","team","release","event","org","member","DEFAULT_RESOURCE_PERMISSIONS","Project","Team","Release","Event","Organization","Member","PROJECT_RELEASES","permissionLevel","scope","permission","split","compareScopes","a","b","toResourcePermissions","scopes","permissions","filteredScopes","scopeList","includes","filter","Object","values","groupBy","map","sort","pop","forEach","resource","toPermissions","resourcePermissions","pick","invertBy","SplitInstallationIdModal","Component","async","navigator","clipboard","writeText","this","props","installationId","onCopy","setTimeout","window","open","render","closeModal","ItemHolder","ButtonHolder","onClick","priority","handleContinue","SentryAppDetailedView","AbstractIntegrationDetailedView","organization","state","queryParams","code","orgSlug","redirectUrl","addQueryParamsToExistingUrl","location","assign","trackIntegrationAnalytics","integration_status","status","api","redirectUser","setState","appInstalls","openModal","i","error","getEndpoints","params","integrationSlug","onLoadAllEndpointsSuccess","router","super","recordInteraction","push","overview","author","title","url","getSentryAppInstallStatus","featureData","find","renderPermissions","keys","some","length","PermissionWrapper","Title","Permission","Indicator","Text","tct","resources","join","renderTopButton","disabledFromFeatures","userHasAccess","disabled","message","onConfirm","handleUninstall","onConfirming","recordUninstallClicked","StyledUninstallButton","isCircled","style","marginRight","space","InstallButton","handleInstall","marginLeft","renderRequestIntegrationButton","renderConfigurations","renderIntegrationIcon","p","theme","success","Button","gray300","background","withOrganization","baseIteratee","createInverter","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","result","value","key","call","module","exports"],"sourceRoot":""}