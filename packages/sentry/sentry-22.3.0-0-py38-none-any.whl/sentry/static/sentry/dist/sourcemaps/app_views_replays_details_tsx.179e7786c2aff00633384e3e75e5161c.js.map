{"version":3,"file":"chunks/app_views_replays_details_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/components/events/rrwebIntegration.tsx","webpack:///./app/components/keyValueTable.tsx","webpack:///./app/components/tagsTable.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/replays/details.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport overflowEllipsis from 'sentry/styles/overflowEllipsis';\nimport space from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst BaseEventMessage = ({\n  className,\n  level,\n  levelIndicatorSize,\n  message,\n  annotations,\n}: Props) => (\n  <div className={className}>\n    {level && (\n      <StyledErrorLevel size={levelIndicatorSize} level={level}>\n        {level}\n      </StyledErrorLevel>\n    )}\n\n    {message && <Message>{message}</Message>}\n\n    {annotations}\n  </div>\n);\n\nconst EventMessage = styled(BaseEventMessage)`\n  display: flex;\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  margin-right: ${space(1)};\n`;\n\nconst Message = styled('span')`\n  ${overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import React from 'react';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport LazyLoad from 'sentry/components/lazyLoad';\nimport {IssueAttachment, Organization, Project} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  event: Event;\n  orgId: Organization['id'];\n  projectId: Project['id'];\n  renderer?: Function;\n} & AsyncComponent['props'];\n\ntype State = {\n  attachmentList: Array<IssueAttachment> | null;\n} & AsyncComponent['state'];\n\nclass RRWebIntegration extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId, event} = this.props;\n    return [\n      [\n        'attachmentList',\n        `/projects/${orgId}/${projectId}/events/${event.id}/attachments/`,\n        {query: {query: 'rrweb.json'}},\n      ],\n    ];\n  }\n\n  renderLoading() {\n    // hide loading indicator\n    return null;\n  }\n\n  renderBody() {\n    const {attachmentList} = this.state;\n    const renderer = this.props.renderer || (children => children);\n\n    if (!attachmentList?.length) {\n      return null;\n    }\n\n    const attachment = attachmentList[0];\n    const {orgId, projectId, event} = this.props;\n\n    return renderer(\n      <LazyLoad\n        component={() => import('./rrwebReplayer')}\n        url={`/api/0/projects/${orgId}/${projectId}/events/${event.id}/attachments/${attachment.id}/?download`}\n      />\n    );\n  }\n}\n\nexport default RRWebIntegration;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport overflowEllipsis from 'sentry/styles/overflowEllipsis';\nimport space from 'sentry/styles/space';\nimport {Theme} from 'sentry/utils/theme';\n\ntype Props = {\n  keyName: React.ReactNode;\n  value: React.ReactNode;\n};\n\nexport const KeyValueTable = styled('dl')`\n  display: grid;\n  grid-template-columns: 50% 50%;\n`;\n\nexport const KeyValueTableRow = ({keyName, value}: Props) => {\n  return (\n    <React.Fragment>\n      <Key>{keyName}</Key>\n      <Value>{value}</Value>\n    </React.Fragment>\n  );\n};\n\nconst commonStyles = ({theme}: {theme: Theme}) => `\nfont-size: ${theme.fontSizeMedium};\npadding: ${space(0.5)} ${space(1)};\nfont-weight: normal;\nline-height: inherit;\n${overflowEllipsis};\n&:nth-of-type(2n-1) {\n  background-color: ${theme.backgroundSecondary};\n}\n`;\n\nconst Key = styled('dt')`\n  ${commonStyles};\n  color: ${p => p.theme.textColor};\n`;\n\nconst Value = styled('dd')`\n  ${commonStyles};\n  color: ${p => p.theme.subText};\n  text-align: right;\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptor} from 'history';\nimport capitalize from 'lodash/capitalize';\n\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport {getMeta, withMeta} from 'sentry/components/events/meta/metaProxy';\nimport {KeyValueTable, KeyValueTableRow} from 'sentry/components/keyValueTable';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {MetaError} from 'sentry/types';\nimport {Event, EventTag} from 'sentry/types/event';\n\ntype Props = {\n  event: Event;\n  generateUrl: (tag: EventTag) => LocationDescriptor;\n  query: string;\n  title?: React.ReactNode;\n};\n\nconst TagsTable = ({event, query, generateUrl, title = t('Tag Details')}: Props) => {\n  const eventWithMeta = withMeta(event) as Event;\n  const tags = eventWithMeta.tags;\n\n  const formatErrorKind = (kind: string) => {\n    return capitalize(kind.replace(/_/g, ' '));\n  };\n\n  const getErrorMessage = (error: MetaError) => {\n    if (Array.isArray(error)) {\n      if (error[1]?.reason) {\n        return formatErrorKind(error[1].reason);\n      }\n      return formatErrorKind(error[0]);\n    }\n    return formatErrorKind(error);\n  };\n\n  const getTooltipTitle = (errors: Array<MetaError>) => {\n    return <TooltipTitle>{getErrorMessage(errors[0])}</TooltipTitle>;\n  };\n\n  return (\n    <StyledTagsTable>\n      <SectionHeading>{title}</SectionHeading>\n      <KeyValueTable>\n        {tags.map(tag => {\n          const tagInQuery = query.includes(`${tag.key}:`);\n          const target = tagInQuery ? undefined : generateUrl(tag);\n          const keyMetaData = getMeta(tag, 'key');\n          const valueMetaData = getMeta(tag, 'value');\n\n          const renderTagValue = () => {\n            switch (tag.key) {\n              case 'release':\n                return <Version version={tag.value} anchor={false} withPackage />;\n              default:\n                return tag.value;\n            }\n          };\n          return (\n            <KeyValueTableRow\n              key={tag.key}\n              keyName={\n                keyMetaData?.err?.length ? (\n                  <Tooltip title={getTooltipTitle(keyMetaData.err)}>\n                    <i>{`<${t('invalid')}>`}</i>\n                  </Tooltip>\n                ) : (\n                  tag.key\n                )\n              }\n              value={\n                valueMetaData?.err?.length ? (\n                  <Tooltip title={getTooltipTitle(valueMetaData.err)}>\n                    <i>{`<${t('invalid')}>`}</i>\n                  </Tooltip>\n                ) : keyMetaData?.err?.length ? (\n                  <span>{renderTagValue()}</span>\n                ) : tagInQuery ? (\n                  <Tooltip title={t('This tag is in the current filter conditions')}>\n                    <span>{renderTagValue()}</span>\n                  </Tooltip>\n                ) : (\n                  <Link to={target || ''}>{renderTagValue()}</Link>\n                )\n              }\n            />\n          );\n        })}\n      </KeyValueTable>\n    </StyledTagsTable>\n  );\n};\n\nexport default TagsTable;\n\nconst StyledTagsTable = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst TooltipTitle = styled('div')`\n  text-align: left;\n`;\n","import * as React from 'react';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Breadcrumbs from 'sentry/components/breadcrumbs';\nimport NotFound from 'sentry/components/errors/notFound';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport RRWebIntegration from 'sentry/components/events/rrwebIntegration';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport TagsTable from 'sentry/components/tagsTable';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Event} from 'sentry/types/event';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {getMessage} from 'sentry/utils/events';\nimport AsyncView from 'sentry/views/asyncView';\n\ntype Props = AsyncView['props'] &\n  RouteComponentProps<{eventSlug: string; orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  event: Event | undefined;\n  eventView: EventView;\n};\n\nconst EventHeader = ({event}: {event: Event}) => {\n  const message = getMessage(event);\n  return (\n    <EventHeaderContainer data-test-id=\"event-header\">\n      <TitleWrapper>\n        <EventOrGroupTitle data={event} />\n      </TitleWrapper>\n      {message && (\n        <MessageWrapper>\n          <EventMessage message={message} />\n        </MessageWrapper>\n      )}\n    </EventHeaderContainer>\n  );\n};\n\nclass ReplayDetails extends AsyncView<Props, State> {\n  state: State = {\n    eventView: EventView.fromLocation(this.props.location),\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: {},\n    event: undefined,\n  };\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params, location} = this.props;\n\n    const eventView = EventView.fromLocation(location);\n    const query = eventView.getEventsAPIPayload(location);\n\n    return [\n      ['event', `/organizations/${params.orgId}/events/${params.eventSlug}/`, {query}],\n    ];\n  }\n\n  getTitle() {\n    if (this.state.event) {\n      return `${this.state.event.id} - Replays - ${this.props.params.orgId}`;\n    }\n    return `Replays - ${this.props.params.orgId}`;\n  }\n\n  onUpdate = (data: Event) =>\n    this.setState(state => ({event: {...state.event, ...data}}));\n\n  generateTagUrl = () => {\n    return ''; // todo\n  };\n\n  getEventView = (): EventView => {\n    const {location} = this.props;\n\n    return EventView.fromLocation(location);\n  };\n\n  renderBody() {\n    const {event} = this.state;\n    const orgSlug = this.props.params.orgId;\n    if (!event) {\n      return <NotFound />;\n    }\n\n    const eventView = this.getEventView();\n    const projectSlug = event.projectSlug || event['project.name']; // seems janky\n\n    return (\n      <Fragment>\n        <Fragment>\n          <Layout.Header>\n            <Layout.HeaderContent>\n              <Breadcrumbs\n                crumbs={[\n                  {\n                    to: `/organizations/${orgSlug}/replays/`,\n                    label: t('Replays'),\n                  },\n                  {label: t('Replay Details')}, // TODO: put replay ID or something here\n                ]}\n              />\n              <EventHeader event={event} />\n            </Layout.HeaderContent>\n          </Layout.Header>\n        </Fragment>\n\n        <Layout.Body>\n          <Layout.Main>\n            <RRWebIntegration event={event} orgId={orgSlug} projectId={projectSlug} />\n          </Layout.Main>\n          <Layout.Side>\n            <TagsTable\n              generateUrl={this.generateTagUrl}\n              event={event}\n              query={eventView.query}\n            />\n          </Layout.Side>\n        </Layout.Body>\n      </Fragment>\n    );\n  }\n}\n\nconst EventHeaderContainer = styled('div')`\n  max-width: ${p => p.theme.breakpoints[0]};\n`;\n\nconst TitleWrapper = styled('div')`\n  font-size: ${p => p.theme.headerFontSize};\n  margin-top: 20px;\n`;\n\nconst MessageWrapper = styled('div')`\n  margin-top: ${space(1)};\n`;\n\nexport default ReplayDetails;\n"],"names":["DEFAULT_SIZE","p","size","level","theme","error","BaseEventMessage","className","levelIndicatorSize","message","annotations","StyledErrorLevel","Message","EventMessage","ErrorLevel","space","overflowEllipsis","RRWebIntegration","AsyncComponent","getEndpoints","orgId","projectId","event","this","props","id","query","renderLoading","renderBody","attachmentList","state","renderer","children","length","attachment","component","url","KeyValueTable","KeyValueTableRow","keyName","value","Key","Value","commonStyles","fontSizeMedium","backgroundSecondary","textColor","subText","TagsTable","generateUrl","title","t","tags","withMeta","formatErrorKind","kind","capitalize","replace","getTooltipTitle","errors","TooltipTitle","Array","isArray","reason","StyledTagsTable","map","tag","tagInQuery","includes","key","target","undefined","keyMetaData","getMeta","valueMetaData","renderTagValue","version","anchor","withPackage","err","to","AsyncView","getTitle","render","renderComponent","EventHeader","getMessage","EventHeaderContainer","TitleWrapper","data","MessageWrapper","ReplayDetails","eventView","EventView","location","loading","reloading","setState","params","getEventsAPIPayload","eventSlug","orgSlug","getEventView","projectSlug","Fragment","crumbs","label","generateTagUrl","breakpoints","headerFontSize"],"sourceRoot":""}