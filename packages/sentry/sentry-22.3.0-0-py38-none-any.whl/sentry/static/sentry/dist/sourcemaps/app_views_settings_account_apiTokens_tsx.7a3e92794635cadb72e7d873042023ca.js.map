{"version":3,"file":"chunks/app_views_settings_account_apiTokens_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/alertLink.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/apiTokenRow.tsx","webpack:///./app/views/settings/account/apiTokens.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {IconChevron} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  children?: React.ReactNode;\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  openInNewTab: boolean;\n  priority: Priority;\n  size: Size;\n  withoutMarginBottom: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & Partial<DefaultProps> & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nfunction AlertLink({\n  size = 'normal',\n  priority = 'warning',\n  icon,\n  children,\n  onClick,\n  withoutMarginBottom = false,\n  openInNewTab = false,\n  to,\n  href,\n  ['data-test-id']: dataTestId,\n}: Props) {\n  return (\n    <StyledLink\n      data-test-id={dataTestId}\n      to={to}\n      href={href}\n      onClick={onClick}\n      size={size}\n      priority={priority}\n      withoutMarginBottom={withoutMarginBottom}\n      openInNewTab={openInNewTab}\n    >\n      {icon && <IconWrapper>{icon}</IconWrapper>}\n      <AlertLinkText>{children}</AlertLinkText>\n      <IconLink>\n        <IconChevron direction=\"right\" />\n      </IconLink>\n    </StyledLink>\n  );\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import * as React from 'react';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport DateTime from 'sentry/components/dateTime';\nimport TextCopyInput from 'sentry/components/forms/textCopyInput';\nimport {PanelItem} from 'sentry/components/panels';\nimport {IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {InternalAppApiToken} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\ntype Props = {\n  onRemove: (token: InternalAppApiToken) => void;\n  token: InternalAppApiToken;\n};\n\nfunction ApiTokenRow({token, onRemove}: Props) {\n  return (\n    <StyledPanelItem>\n      <Controls>\n        <InputWrapper>\n          <TextCopyInput>\n            {getDynamicText({value: token.token, fixed: 'CI_AUTH_TOKEN'})}\n          </TextCopyInput>\n        </InputWrapper>\n        <Button\n          size=\"small\"\n          onClick={() => onRemove(token)}\n          icon={<IconSubtract isCircled size=\"xs\" />}\n        >\n          {t('Remove')}\n        </Button>\n      </Controls>\n\n      <Details>\n        <ScopesWrapper>\n          <Heading>{t('Scopes')}</Heading>\n          <ScopeList>{token.scopes.join(', ')}</ScopeList>\n        </ScopesWrapper>\n        <div>\n          <Heading>{t('Created')}</Heading>\n          <Time>\n            <DateTime\n              date={getDynamicText({\n                value: token.dateCreated,\n                fixed: new Date(1508208080000), // National Pasta Day\n              })}\n            />\n          </Time>\n        </div>\n      </Details>\n    </StyledPanelItem>\n  );\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  flex-direction: column;\n  padding: ${space(2)};\n`;\n\nconst Controls = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${space(1)};\n`;\n\nconst InputWrapper = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst Details = styled('div')`\n  display: flex;\n  margin-top: ${space(1)};\n`;\n\nconst ScopesWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst ScopeList = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Time = styled('time')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Heading = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-transform: uppercase;\n  color: ${p => p.theme.subText};\n  margin-bottom: ${space(1)};\n`;\n\nexport default ApiTokenRow;\n","import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport AlertLink from 'sentry/components/alertLink';\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {InternalAppApiToken, Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport ApiTokenRow from 'sentry/views/settings/account/apiTokenRow';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = {\n  organization: Organization;\n} & AsyncView['props'];\n\ntype State = {\n  tokenList: InternalAppApiToken[] | null;\n} & AsyncView['state'];\n\nexport class ApiTokens extends AsyncView<Props, State> {\n  getTitle() {\n    return t('API Tokens');\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      tokenList: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['tokenList', '/api-tokens/']];\n  }\n\n  handleRemoveToken = (token: InternalAppApiToken) => {\n    addLoadingMessage();\n    const oldTokenList = this.state.tokenList;\n\n    this.setState(\n      state => ({\n        tokenList: state.tokenList?.filter(tk => tk.token !== token.token) ?? [],\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-tokens/', {\n            method: 'DELETE',\n            data: {token: token.token},\n          });\n\n          addSuccessMessage(t('Removed token'));\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove token. Please try again.'));\n          this.setState({\n            tokenList: oldTokenList,\n          });\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    const {tokenList} = this.state;\n\n    const isEmpty = !Array.isArray(tokenList) || tokenList.length === 0;\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        to=\"/settings/account/api/auth-tokens/new-token/\"\n        data-test-id=\"create-token\"\n      >\n        {t('Create New Token')}\n      </Button>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Auth Tokens\" action={action} />\n        <AlertLink\n          to={`/settings/${organization?.slug ?? ''}/developer-settings/new-internal`}\n        >\n          {t(\n            \"Auth Tokens are tied to the logged in user, meaning they'll stop working if the user leaves the organization! We suggest using internal integrations to create/manage tokens tied to the organization instead.\"\n          )}\n        </AlertLink>\n        <TextBlock>\n          {t(\n            \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n          )}\n        </TextBlock>\n        <TextBlock>\n          {tct(\n            'For more information on how to use the web API, see our [link:documentation].',\n            {\n              link: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n            }\n          )}\n        </TextBlock>\n        <Panel>\n          <PanelHeader>{t('Auth Token')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't created any authentication tokens yet.\")}\n              </EmptyMessage>\n            )}\n\n            {tokenList?.map(token => (\n              <ApiTokenRow\n                key={token.token}\n                token={token}\n                onRemove={this.handleRemoveToken}\n              />\n            ))}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ApiTokens);\n"],"names":["AlertLink","size","priority","icon","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","IconWrapper","AlertLinkText","IconLink","direction","props","linkProps","omit","p","theme","alert","backgroundLight","textColor","border","space","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","ApiTokenRow","token","onRemove","StyledPanelItem","Controls","InputWrapper","getDynamicText","value","fixed","isCircled","t","Details","ScopesWrapper","Heading","ScopeList","scopes","join","Time","date","dateCreated","Date","PanelItem","fontSizeRelativeSmall","fontSizeMedium","subText","ApiTokens","addLoadingMessage","oldTokenList","state","tokenList","setState","filter","tk","async","api","requestPromise","method","data","addSuccessMessage","_err","addErrorMessage","getDefaultState","super","getEndpoints","renderBody","organization","isEmpty","Array","isArray","length","action","slug","tct","link","map","handleRemoveToken","withOrganization"],"sourceRoot":""}