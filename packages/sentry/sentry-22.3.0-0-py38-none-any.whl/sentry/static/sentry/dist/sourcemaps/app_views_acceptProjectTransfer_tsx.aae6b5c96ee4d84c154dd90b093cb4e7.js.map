{"version":3,"file":"chunks/app_views_acceptProjectTransfer_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"4oBAaA,MAAMA,UAAqBC,EAAAA,UAAiB,qDAU5B,IAAIC,EAAAA,KAVwB,4BAY3B,MACbC,EAAAA,EAAAA,IAAOC,KAAKC,KAAKC,MAAK,IAAMC,OAAOC,SAASC,OAAO,oBAZrDC,4BACEC,SAASC,KAAKC,UAAUC,IAAI,UAG9BC,uBACEX,KAAKC,IAAIW,QACTL,SAASC,KAAKC,UAAUI,OAAO,UASjCC,SACE,OACE,eAAKC,UAAU,MAAf,WACE,eAAKA,UAAU,gBACf,eAAKA,UAAU,YAAYC,MAAO,CAACC,SAAUjB,KAAKkB,MAAMD,UAAxD,UACE,eAAKF,UAAU,gBAAf,WACE,eAAKA,UAAU,aAAf,WACE,aAAGI,KAAK,IAAR,UACE,QAAC,KAAD,CAAYC,KAAK,SAElBpB,KAAKkB,MAAMG,aACV,aAAGN,UAAU,oBAAoBO,QAAStB,KAAKuB,aAA/C,UACE,QAACC,EAAD,WAASC,EAAAA,EAAAA,GAAE,oBAIjB,eAAKV,UAAU,2BAAf,SAA2Cf,KAAKkB,MAAMQ,oBAhC5D9B,EAAAA,YAAAA,eAwCN,MAAM4B,GAAS,OAAO,OAAP,qBAAH,0CAIZ,K,8lBCnCA,MAAMG,UAA8BC,EAAAA,EAAwB,qEACrC,IADqC,4BAY3CC,IACb7B,KAAKC,IAAI6B,QAAQ,oBAAqB,CACpCC,OAAQ,OACRC,KAAM,CACJA,KAAMhC,KAAKkB,MAAMd,SAAS6B,MAAMD,KAChCE,aAAcL,EAASK,cAEzBC,QAAS,KACP,MAAMC,EAAUP,EAASK,aAEzBlC,KAAKkB,MAAMmB,OAAOC,KAAM,IAAGF,MAC3BG,EAAAA,EAAAA,KAAkBd,EAAAA,EAAAA,GAAE,sCAEtBe,MAAOA,IACL,MAAMC,EACJD,GAASA,EAAME,cAAqD,iBAA9BF,EAAME,aAAaC,OACrDH,EAAME,aAAaC,OACnB,IAENC,EAAAA,EAAAA,KACEnB,EAAAA,EAAAA,GAAE,8BAAgCgB,EAAY,KAAIA,IAAa,UA7BvEI,eAEE,MAAO,CAAC,CAAC,kBAAmB,oBAAqB,CAACZ,MADpCjC,KAAKkB,MAAMd,SAAS6B,SAIpCa,WACE,OAAOrB,EAAAA,EAAAA,GAAE,2BA6BXsB,YAAYP,GACV,IAAIQ,GAAa,EAQjB,OALIR,GAASA,EAAME,cAAqD,iBAA9BF,EAAME,aAAaC,UAC3DC,EAAAA,EAAAA,IAAgBJ,EAAME,aAAaC,QACnCK,GAAa,GAGRC,MAAMF,YAAYP,EAAOQ,GAGlCE,aAAa,MACX,MAAM,gBAACC,GAAmBnD,KAAKoD,MACzBC,EAAUF,MAAAA,OAAH,EAAGA,EAAiBG,cAAcC,KAAIC,IAAO,CACxDC,MAAOD,EAAIE,KACXC,MAAOH,EAAIE,SAEPxB,EAAemB,MAAAA,GAAH,UAAGA,EAAU,UAAb,aAAG,EAAcM,MAEnC,OACE,QAAC,IAAD,YACE,QAAC,IAAD,CAAoBC,OAAOnC,EAAAA,EAAAA,GAAE,uCAC7B,uBACGoC,EAAAA,EAAAA,IACC,mQAIA,CACE3B,cAAc,4BAAST,EAAAA,EAAAA,GAAE,kBACzBqC,iBAAiB,4BAASrC,EAAAA,EAAAA,GAAE,0BAIjC0B,IACC,uBACGU,EAAAA,EAAAA,IACC,yEACA,CACE3B,cAAc,4BAAST,EAAAA,EAAAA,GAAE,kBACzBsC,QAASZ,EAAgBY,QAAQL,UAKzC,QAAC,IAAD,CACEM,SAAUhE,KAAKiE,aACfC,aAAazC,EAAAA,EAAAA,GAAE,oBACf0C,eAAe,SACfC,YAAalC,EAAe,CAACA,aAAAA,QAAgBmC,EAJ/C,UAME,QAAC,IAAD,CACEhB,QAASA,EACTI,OAAOhC,EAAAA,EAAAA,GAAE,gBACT6C,KAAK,eACLtD,MAAO,CAACuD,aAAc,gBAQlC,W,0RCpHe,MAAM3C,UAGX4C,EAAAA,EACR1B,WACE,MAAO,GAGThC,SACE,OACE,QAAC,IAAD,CAAqB8C,MAAO5D,KAAK8C,WAAjC,SACG9C,KAAKyE,qBAXO7C,EAAAA,YAAAA","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/views/acceptProjectTransfer.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {Client} from 'sentry/api';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nclass NarrowLayout extends Component<Props> {\n  UNSAFE_componentWillMount() {\n    document.body.classList.add('narrow');\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    document.body.classList.remove('narrow');\n  }\n\n  private api = new Client();\n\n  handleLogout = () => {\n    logout(this.api).then(() => window.location.assign('/auth/login'));\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"pattern-bg\" />\n        <div className=\"container\" style={{maxWidth: this.props.maxWidth}}>\n          <div className=\"box box-modal\">\n            <div className=\"box-header\">\n              <a href=\"/\">\n                <IconSentry size=\"lg\" />\n              </a>\n              {this.props.showLogout && (\n                <a className=\"logout pull-right\" onClick={this.handleLogout}>\n                  <Logout>{t('Sign out')}</Logout>\n                </a>\n              )}\n            </div>\n            <div className=\"box-content with-padding\">{this.props.children}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Logout = styled('span')`\n  font-size: 16px;\n`;\n\nexport default NarrowLayout;\n","import {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport Form from 'sentry/components/forms/form';\nimport SelectField from 'sentry/components/forms/selectField';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\ntype Props = RouteComponentProps<{}, {}>;\n\ntype TransferDetails = {\n  organizations: Organization[];\n  project: Project;\n};\n\ntype State = {\n  transferDetails: TransferDetails | null;\n} & AsyncView['state'];\n\nclass AcceptProjectTransfer extends AsyncView<Props, State> {\n  disableErrorReport = false;\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const query = this.props.location.query;\n    return [['transferDetails', '/accept-transfer/', {query}]];\n  }\n\n  getTitle() {\n    return t('Accept Project Transfer');\n  }\n\n  handleSubmit = formData => {\n    this.api.request('/accept-transfer/', {\n      method: 'POST',\n      data: {\n        data: this.props.location.query.data,\n        organization: formData.organization,\n      },\n      success: () => {\n        const orgSlug = formData.organization;\n\n        this.props.router.push(`/${orgSlug}`);\n        addSuccessMessage(t('Project successfully transferred'));\n      },\n      error: error => {\n        const errorMsg =\n          error && error.responseJSON && typeof error.responseJSON.detail === 'string'\n            ? error.responseJSON.detail\n            : '';\n\n        addErrorMessage(\n          t('Unable to transfer project') + errorMsg ? `: ${errorMsg}` : ''\n        );\n      },\n    });\n  };\n\n  renderError(error) {\n    let disableLog = false;\n    // Check if there is an error message with `transferDetails` endpoint\n    // If so, show as toast and ignore, otherwise log to sentry\n    if (error && error.responseJSON && typeof error.responseJSON.detail === 'string') {\n      addErrorMessage(error.responseJSON.detail);\n      disableLog = true;\n    }\n\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {transferDetails} = this.state;\n    const options = transferDetails?.organizations.map(org => ({\n      label: org.slug,\n      value: org.slug,\n    }));\n    const organization = options?.[0]?.value;\n\n    return (\n      <NarrowLayout>\n        <SettingsPageHeader title={t('Approve Transfer Project Request')} />\n        <p>\n          {tct(\n            'Projects must be transferred to a specific [organization]. ' +\n              'You can grant specific teams access to the project later under the [projectSettings]. ' +\n              '(Note that granting access to at least one team is necessary for the project to ' +\n              'appear in all parts of the UI.)',\n            {\n              organization: <strong>{t('Organization')}</strong>,\n              projectSettings: <strong>{t('Project Settings')}</strong>,\n            }\n          )}\n        </p>\n        {transferDetails && (\n          <p>\n            {tct(\n              'Please select which [organization] you want for the project [project].',\n              {\n                organization: <strong>{t('Organization')}</strong>,\n                project: transferDetails.project.slug,\n              }\n            )}\n          </p>\n        )}\n        <Form\n          onSubmit={this.handleSubmit}\n          submitLabel={t('Transfer Project')}\n          submitPriority=\"danger\"\n          initialData={organization ? {organization} : undefined}\n        >\n          <SelectField\n            options={options}\n            label={t('Organization')}\n            name=\"organization\"\n            style={{borderBottom: 'none'}}\n          />\n        </Form>\n      </NarrowLayout>\n    );\n  }\n}\n\nexport default AcceptProjectTransfer;\n","import * as React from 'react';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["NarrowLayout","Component","Client","logout","this","api","then","window","location","assign","UNSAFE_componentWillMount","document","body","classList","add","componentWillUnmount","clear","remove","render","className","style","maxWidth","props","href","size","showLogout","onClick","handleLogout","Logout","t","children","AcceptProjectTransfer","AsyncView","formData","request","method","data","query","organization","success","orgSlug","router","push","addSuccessMessage","error","errorMsg","responseJSON","detail","addErrorMessage","getEndpoints","getTitle","renderError","disableLog","super","renderBody","transferDetails","state","options","organizations","map","org","label","slug","value","title","tct","projectSettings","project","onSubmit","handleSubmit","submitLabel","submitPriority","initialData","undefined","name","borderBottom","AsyncComponent","renderComponent"],"sourceRoot":""}