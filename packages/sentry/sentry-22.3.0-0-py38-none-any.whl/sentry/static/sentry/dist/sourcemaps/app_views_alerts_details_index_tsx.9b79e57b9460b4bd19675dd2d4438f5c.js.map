{"version":3,"file":"chunks/app_views_alerts_details_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"yeAaA,SAASA,EAAT,GAAyD,IAA3B,SAACC,EAAD,OAAWC,GAAgB,EACvD,MAAMC,GAAeC,EAAAA,EAAAA,MACf,SAACC,EAAD,SAAWC,IAAYC,EAAAA,EAAAA,GAAY,CAACC,MAAO,CAACN,EAAOO,aAGzD,OAAIH,GACK,QAAC,IAAD,KAIP,QAAC,IAAD,CAASH,aAAcA,EAAcO,SAAU,CAAC,0BAAhD,SACGT,IAAYU,EAAAA,EAAAA,gBAAeV,IACxBW,EAAAA,EAAAA,cAAaX,EAAU,CACrBE,aAAAA,EACAU,QAASR,EAAS,KAEpB,OAhBDL,EAAAA,YAAAA,uBAqBT","sources":["webpack:///./app/views/alerts/details/index.tsx"],"sourcesContent":["import {cloneElement, isValidElement} from 'react';\nimport type {RouteComponentProps} from 'react-router';\n\nimport Feature from 'sentry/components/acl/feature';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\ninterface Props\n  extends RouteComponentProps<{orgId: string; projectId: string; ruleId: string}, {}> {\n  children?: React.ReactNode;\n}\n\nfunction RuleDetailsContainer({children, params}: Props) {\n  const organization = useOrganization();\n  const {projects, fetching} = useProjects({slugs: [params.projectId]});\n\n  // Should almost never need to fetch project\n  if (fetching) {\n    return <LoadingIndicator />;\n  }\n\n  return (\n    <Feature organization={organization} features={['alert-rule-status-page']}>\n      {children && isValidElement(children)\n        ? cloneElement(children, {\n            organization,\n            project: projects[0],\n          })\n        : null}\n    </Feature>\n  );\n}\n\nexport default RuleDetailsContainer;\n"],"names":["RuleDetailsContainer","children","params","organization","useOrganization","projects","fetching","useProjects","slugs","projectId","features","isValidElement","cloneElement","project"],"sourceRoot":""}