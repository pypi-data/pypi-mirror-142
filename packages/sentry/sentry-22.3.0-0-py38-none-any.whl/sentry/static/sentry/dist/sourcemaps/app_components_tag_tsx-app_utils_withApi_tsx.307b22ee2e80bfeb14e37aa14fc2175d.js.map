{"version":3,"file":"chunks/app_components_tag_tsx-app_utils_withApi_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/tag.tsx","webpack:///./app/utils/analytics/performanceAnalyticsEvents.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/analytics/growthAnalyticsEvents.tsx","webpack:///./app/utils/analytics/issueAnalyticsEvents.tsx","webpack:///./app/utils/analytics/dashboardsAnalyticsEvents.tsx","webpack:///./app/utils/analytics/discoverAnalyticsEvents.tsx","webpack:///./app/utils/analytics/workflowAnalyticsEvents.tsx","webpack:///./app/utils/analytics/searchAnalyticsEvents.tsx","webpack:///./app/utils/analytics/settingsAnalyticsEvents.tsx","webpack:///./app/utils/useApi.tsx","webpack:///./app/utils/withApi.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconClose, IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport theme, {Color, Theme} from 'sentry/utils/theme';\n\nconst TAG_HEIGHT = '20px';\n\ntype Props = React.HTMLAttributes<HTMLSpanElement> & {\n  /**\n   * Makes the tag clickable. Use for external links.\n   * If no icon is passed, it defaults to IconOpen (can be removed by passing icon={null})\n   */\n  href?: string;\n  /**\n   * Icon on the left side.\n   */\n  icon?: React.ReactNode;\n  /**\n   * Triggered when the item is clicked\n   */\n  onClick?: (eventKey: any) => void;\n  /**\n   * Shows clickable IconClose on the right side.\n   */\n  onDismiss?: () => void;\n  /**\n   * Max width of the tag's text\n   */\n  textMaxWidth?: number;\n  /**\n   * Makes the tag clickable. Use for internal links handled by react router.\n   * If no icon is passed, it defaults to IconOpen (can be removed by passing icon={null})\n   */\n  to?: React.ComponentProps<typeof Link>['to'];\n  /**\n   * Text to show up on a hover.\n   */\n  tooltipText?: React.ComponentProps<typeof Tooltip>['title'];\n  /**\n   * Dictates color scheme of the tag.\n   */\n  type?: keyof Theme['tag'];\n};\n\nfunction Tag({\n  type = 'default',\n  icon,\n  tooltipText,\n  to,\n  onClick,\n  href,\n  onDismiss,\n  children,\n  textMaxWidth = 150,\n  ...props\n}: Props) {\n  const iconsProps = {\n    size: '11px',\n    color: theme.tag[type].iconColor as Color,\n  };\n\n  const tag = (\n    <Tooltip title={tooltipText} containerDisplayMode=\"inline-flex\">\n      <Background type={type}>\n        {tagIcon()}\n\n        <Text type={type} maxWidth={textMaxWidth}>\n          {children}\n        </Text>\n\n        {defined(onDismiss) && (\n          <DismissButton\n            onClick={handleDismiss}\n            size=\"zero\"\n            priority=\"link\"\n            aria-label={t('Dismiss')}\n          >\n            <IconClose isCircled {...iconsProps} />\n          </DismissButton>\n        )}\n      </Background>\n    </Tooltip>\n  );\n\n  function handleDismiss(event: React.MouseEvent) {\n    event.preventDefault();\n    onDismiss?.();\n  }\n\n  const trackClickEvent = () => {\n    trackAdvancedAnalyticsEvent('tag.clicked', {\n      is_clickable: defined(onClick) || defined(to) || defined(href),\n      organization: null,\n    });\n  };\n\n  function tagIcon() {\n    if (React.isValidElement(icon)) {\n      return <IconWrapper>{React.cloneElement(icon, {...iconsProps})}</IconWrapper>;\n    }\n\n    if ((defined(href) || defined(to)) && icon === undefined) {\n      return (\n        <IconWrapper>\n          <IconOpen {...iconsProps} />\n        </IconWrapper>\n      );\n    }\n\n    return null;\n  }\n\n  function tagWithParent() {\n    if (defined(href)) {\n      return <ExternalLink href={href}>{tag}</ExternalLink>;\n    }\n\n    if (defined(to) && defined(onClick)) {\n      return (\n        <Link to={to} onClick={onClick}>\n          {tag}\n        </Link>\n      );\n    }\n    if (defined(to)) {\n      return <Link to={to}>{tag}</Link>;\n    }\n\n    return tag;\n  }\n\n  return (\n    <TagWrapper {...props} onClick={trackClickEvent}>\n      {tagWithParent()}\n    </TagWrapper>\n  );\n}\n\nconst TagWrapper = styled('span')`\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nexport const Background = styled('div')<{type: keyof Theme['tag']}>`\n  display: inline-flex;\n  align-items: center;\n  height: ${TAG_HEIGHT};\n  border-radius: ${TAG_HEIGHT};\n  background-color: ${p => p.theme.tag[p.type].background};\n  border: solid 1px ${p => p.theme.tag[p.type].border};\n  padding: 0 ${space(1)};\n`;\n\nconst IconWrapper = styled('span')`\n  margin-right: ${space(0.5)};\n  display: inline-flex;\n`;\n\nconst Text = styled('span')<{maxWidth: number; type: keyof Theme['tag']}>`\n  color: ${p =>\n    ['black', 'white'].includes(p.type)\n      ? p.theme.tag[p.type].iconColor\n      : p.theme.textColor};\n  max-width: ${p => p.maxWidth}px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  line-height: ${TAG_HEIGHT};\n`;\n\nconst DismissButton = styled(Button)`\n  margin-left: ${space(0.5)};\n  border: none;\n`;\n\nexport default Tag;\n","import {PlatformKey} from 'sentry/data/platformCategories';\n\ntype SampleTransactionParam = {\n  platform?: PlatformKey;\n};\n\ntype PerformanceTourParams = {\n  duration: number;\n  step: number;\n};\n\nexport type PerformanceEventParameters = {\n  'performance_views.create_sample_transaction': SampleTransactionParam;\n  'performance_views.landingv2.transactions.sort': {\n    direction?: string;\n    field?: string;\n  };\n  'performance_views.landingv3.batch_queries': {\n    num_collected: number;\n    num_saved: number;\n    num_sent: number;\n  };\n  'performance_views.landingv3.display_change': {\n    change_to_display: string;\n    current_display: string;\n    default_display: string;\n    is_default: boolean;\n  };\n  'performance_views.landingv3.widget.interaction': {\n    widget_type?: string;\n  };\n  'performance_views.landingv3.widget.switch': {\n    from_default?: boolean;\n    from_widget?: string;\n    to_widget?: string;\n  };\n  'performance_views.overview.cellaction': {action?: string};\n  'performance_views.overview.navigate.summary': {};\n  'performance_views.overview.search': {};\n  'performance_views.overview.view': {\n    show_onboarding: boolean;\n  };\n  'performance_views.spans.change_op': {\n    operation_name?: string;\n  };\n  'performance_views.spans.change_sort': {\n    sort_column?: string;\n  };\n  'performance_views.tour.advance': PerformanceTourParams;\n  'performance_views.tour.close': PerformanceTourParams;\n  'performance_views.tour.start': {};\n};\n\nexport type PerformanceEventKey = keyof PerformanceEventParameters;\n\nexport const performanceEventMap: Record<PerformanceEventKey, string | null> = {\n  'performance_views.create_sample_transaction': 'Growth: Performance Sample Transaction',\n  'performance_views.tour.start': 'Performance Views: Tour Start',\n  'performance_views.tour.advance': 'Performance Views: Tour Advance',\n  'performance_views.tour.close': 'Performance Views: Tour Close',\n  'performance_views.landingv2.transactions.sort':\n    'Performance Views: Landing Transactions Sorted',\n  'performance_views.overview.navigate.summary':\n    'Performance Views: Overview view summary',\n  'performance_views.overview.cellaction': 'Performance Views: Cell Action Clicked',\n  'performance_views.landingv3.widget.interaction':\n    'Performance Views: Landing Widget Interaction',\n  'performance_views.landingv3.widget.switch':\n    'Performance Views: Landing Widget Switched',\n  'performance_views.landingv3.batch_queries':\n    'Performance Views: Landing Query Batching',\n  'performance_views.landingv3.display_change': 'Performance Views: Switch Landing Tabs',\n  'performance_views.spans.change_op': 'Performance Views: Change span operation name',\n  'performance_views.spans.change_sort': 'Performance Views: Change span sort column',\n  'performance_views.overview.view': 'Performance Views: Transaction overview view',\n  'performance_views.overview.search': 'Performance Views: Transaction overview search',\n};\n","import {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\nimport {searchEventMap, SearchEventParameters} from './searchAnalyticsEvents';\nimport {settingsEventMap, SettingsEventParameters} from './settingsAnalyticsEvents';\nimport {TeamInsightsEventParameters, workflowEventMap} from './workflowAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters &\n  TeamInsightsEventParameters &\n  SearchEventParameters &\n  SettingsEventParameters;\n\nconst allEventMap = {\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n  ...workflowEventMap,\n  ...searchEventMap,\n  ...settingsEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","import {PlatformKey} from 'sentry/data/platformCategories';\n\ntype MobilePromptBannerParams = {\n  matchedUserAgentString: string;\n};\n\ntype ShowParams = MobilePromptBannerParams & {\n  matchedUserAgentString: string;\n  mobileEventBrowserName: string;\n  mobileEventClientOsName: string;\n};\n\ntype PlatformParam = {\n  platform: PlatformKey;\n};\n\ntype PlatformCategory = {\n  category: string;\n  source?: string;\n};\n\ntype PlatformPickerParam = {\n  platform_id: string;\n  source?: string;\n};\n\ntype PlatformSearchParam = {\n  num_results: number;\n  search: string;\n  source?: string;\n};\n\ntype SampleEventParam = {\n  platform?: PlatformKey;\n};\n\ntype InviteRequestParam = {\n  invite_status: string;\n  member_id: number;\n};\n\ntype InviteModal = {\n  modal_session: string;\n};\n\n// define the event key to payload mappings\nexport type GrowthEventParameters = {\n  'growth.clicked_enter_sandbox': {\n    scenario: string;\n    source?: string;\n  };\n  'growth.clicked_mobile_prompt_ask_teammate': MobilePromptBannerParams;\n  'growth.clicked_mobile_prompt_setup_project': MobilePromptBannerParams;\n  'growth.demo_click_docs': {};\n  'growth.demo_click_get_started': {cta?: string};\n  'growth.demo_click_request_demo': {};\n  'growth.demo_modal_clicked_continue': {};\n  'growth.demo_modal_clicked_signup': {};\n  'growth.dismissed_mobile_prompt_banner': MobilePromptBannerParams;\n  'growth.issue_open_in_discover_btn_clicked': {};\n  'growth.onboarding_clicked_instrument_app': {source?: string};\n  'growth.onboarding_clicked_skip': {source?: string};\n  'growth.onboarding_load_choose_platform': {};\n  'growth.onboarding_set_up_your_project': PlatformParam;\n  'growth.onboarding_start_onboarding': {\n    source?: string;\n  };\n  'growth.onboarding_take_to_error': {};\n  'growth.onboarding_view_full_docs': {};\n  'growth.onboarding_view_sample_event': SampleEventParam;\n  'growth.opened_mobile_project_suggest_modal': MobilePromptBannerParams;\n  'growth.platformpicker_category': PlatformCategory;\n  'growth.platformpicker_search': PlatformSearchParam;\n  'growth.sample_error_onboarding_link_clicked': {\n    platform?: string;\n    project_id?: string;\n  };\n  'growth.sample_transaction_docs_link_clicked': {\n    project_id: string;\n  };\n  'growth.select_platform': PlatformPickerParam;\n  'growth.show_mobile_prompt_banner': ShowParams;\n  'growth.submitted_mobile_prompt_ask_teammate': MobilePromptBannerParams;\n  'invite_modal.add_more': InviteModal;\n  'invite_modal.closed': InviteModal;\n  'invite_modal.invites_sent': InviteModal;\n  'invite_modal.opened': InviteModal & {\n    can_invite: boolean;\n    source?: string;\n  };\n  'invite_modal.requests_sent': InviteModal;\n  'invite_request.approved': InviteRequestParam;\n  'invite_request.denied': InviteRequestParam;\n  'member_settings_page.loaded': {\n    num_invite_requests: number;\n    num_members: number;\n  };\n  'sdk_updates.clicked': {};\n  'sdk_updates.seen': {};\n  'sdk_updates.snoozed': {};\n};\n\ntype GrowthAnalyticsKey = keyof GrowthEventParameters;\n\nexport const growthEventMap: Record<GrowthAnalyticsKey, string> = {\n  'growth.show_mobile_prompt_banner': 'Growth: Show Mobile Prompt Banner',\n  'growth.dismissed_mobile_prompt_banner': 'Growth: Dismissed Mobile Prompt Banner',\n  'growth.opened_mobile_project_suggest_modal':\n    'Growth: Open Mobile Project Suggest Modal',\n  'growth.clicked_mobile_prompt_setup_project':\n    'Growth: Clicked Mobile Prompt Setup Project',\n  'growth.clicked_mobile_prompt_ask_teammate':\n    'Growth: Clicked Mobile Prompt Ask Teammate',\n  'growth.submitted_mobile_prompt_ask_teammate':\n    'Growth: Submitted Mobile Prompt Ask Teammate',\n  'growth.demo_click_get_started': 'Growth: Demo Click Get Started',\n  'growth.demo_click_docs': 'Growth: Demo Click Docs',\n  'growth.demo_click_request_demo': 'Growth: Demo Click Request Demo',\n  'growth.onboarding_load_choose_platform':\n    'Growth: Onboarding Load Choose Platform Page',\n  'growth.onboarding_set_up_your_project': 'Growth: Onboarding Click Set Up Your Project',\n  'growth.select_platform': 'Growth: Onboarding Choose Platform',\n  'growth.platformpicker_category': 'Growth: Onboarding Platform Category',\n  'growth.platformpicker_search': 'Growth: Onboarding Platform Search',\n  'growth.onboarding_start_onboarding': 'Growth: Onboarding Start Onboarding',\n  'growth.onboarding_clicked_skip': 'Growth: Onboarding Clicked Skip',\n  'growth.onboarding_take_to_error': 'Growth: Onboarding Take to Error',\n  'growth.onboarding_view_full_docs': 'Growth: Onboarding View Full Docs',\n  'growth.onboarding_view_sample_event': 'Growth: Onboarding View Sample Event',\n  'growth.onboarding_clicked_instrument_app': 'Growth: Onboarding Clicked Instrument App',\n  'invite_request.approved': 'Invite Request Approved',\n  'invite_request.denied': 'Invite Request Denied',\n  'growth.demo_modal_clicked_signup': 'Growth: Demo Modal Clicked Signup',\n  'growth.demo_modal_clicked_continue': 'Growth: Demo Modal Clicked Continue',\n  'growth.clicked_enter_sandbox': 'Growth: Clicked Enter Sandbox',\n  'growth.sample_transaction_docs_link_clicked':\n    'Growth: Sample Transaction Docs Link Clicked',\n  'growth.sample_error_onboarding_link_clicked':\n    'Growth: Sample Error Onboarding Link Clicked',\n  'growth.issue_open_in_discover_btn_clicked':\n    'Growth: Open in Discover Button in Issue Details clicked',\n  'member_settings_page.loaded': 'Member Settings Page Loaded',\n  'invite_modal.opened': 'Invite Modal: Opened',\n  'invite_modal.closed': 'Invite Modal: Closed',\n  'invite_modal.add_more': 'Invite Modal: Add More',\n  'invite_modal.invites_sent': 'Invite Modal: Invites Sent',\n  'invite_modal.requests_sent': 'Invite Modal: Requests Sent',\n  'sdk_updates.seen': 'SDK Updates: Seen',\n  'sdk_updates.snoozed': 'SDK Updates: Snoozed',\n  'sdk_updates.clicked': 'SDK Updates: Clicked',\n};\n","type IssueStream = {\n  group_id: string;\n  tab: string;\n  was_shown_suggestion: boolean;\n};\n\nexport type IssueEventParameters = {\n  'event_cause.dismissed': {};\n  'event_cause.docs_clicked': {};\n  'event_cause.snoozed': {};\n  'event_cause.viewed': {\n    platform?: string;\n    project_id?: string;\n  };\n  'inbox_tab.issue_clicked': {\n    group_id: string;\n  };\n  'issue.search_sidebar_clicked': {};\n  'issue.shared_publicly': {};\n  'issue_error_banner.viewed': {\n    error_message: string[];\n    error_type: string[];\n    group?: string;\n    platform?: string;\n  };\n  'issue_search.failed': {\n    error: string;\n    search_source: string;\n    search_type: string;\n  };\n  'issues_stream.issue_assigned': IssueStream & {\n    assigned_type: string;\n    did_assign_suggestion: boolean;\n    assigned_suggestion_reason?: string;\n  };\n  'issues_stream.issue_clicked': IssueStream;\n  'issues_tab.viewed': {\n    num_issues: number;\n    tab: string;\n  };\n  resolve_issue: {release: string};\n  'tag.clicked': {\n    is_clickable: boolean;\n  };\n};\n\nexport type IssueEventKey = keyof IssueEventParameters;\n\nexport const issueEventMap: Record<IssueEventKey, string | null> = {\n  'event_cause.viewed': null, // send to main event store only due to high event volume\n  'event_cause.docs_clicked': 'Event Cause Docs Clicked',\n  'event_cause.snoozed': 'Event Cause Snoozed',\n  'event_cause.dismissed': 'Event Cause Dismissed',\n  'issue_error_banner.viewed': 'Issue Error Banner Viewed',\n  'issues_tab.viewed': 'Viewed Issues Tab', // high volume but send to our secondary event store anyways\n  'issue_search.failed': 'Issue Search: Failed',\n  'issue.search_sidebar_clicked': 'Issue Search Sidebar Clicked',\n  'inbox_tab.issue_clicked': 'Clicked Issue from Inbox Tab',\n  'issues_stream.issue_clicked': 'Clicked Issue from Issues Stream',\n  'issues_stream.issue_assigned': 'Assigned Issue from Issues Stream',\n  'issue.shared_publicly': 'Issue Shared Publicly',\n  resolve_issue: 'Resolve Issue',\n  'tag.clicked': 'Tag: Clicked',\n};\n","// The add/edit widget modal is currently being ported to the widget builder full-page and\n// this will be removed once that is done.\ntype DashboardsEventParametersAddWidgetModal = {\n  'dashboards_views.add_widget_modal.change': {\n    field: string;\n    from: string;\n    value: string;\n    widget_type: string;\n  };\n  'dashboards_views.add_widget_modal.confirm': {\n    data_set: string;\n  };\n  'dashboards_views.add_widget_modal.opened': {};\n  'dashboards_views.add_widget_modal.save': {\n    data_set: string;\n  };\n  'dashboards_views.edit_widget_modal.confirm': {};\n  'dashboards_views.edit_widget_modal.opened': {};\n};\n\nconst dashboardsEventMapAddWidgetModal: Record<\n  keyof DashboardsEventParametersAddWidgetModal,\n  string | null\n> = {\n  'dashboards_views.edit_widget_modal.confirm':\n    'Dashboards2: Edit Dashboard Widget modal form submitted',\n  'dashboards_views.edit_widget_modal.opened': 'Dashboards2: Edit Widget Modal Opened',\n  'dashboards_views.add_widget_modal.opened': 'Dashboards2: Add Widget Modal opened',\n  'dashboards_views.add_widget_modal.change':\n    'Dashboards2: Field changed in Add Widget Modal',\n  'dashboards_views.add_widget_modal.confirm':\n    'Dashboards2: Add Widget to Dashboard modal form submitted',\n  'dashboards_views.add_widget_modal.save':\n    'Dashboards2: Widget saved directly to Dashboard from Add Widget to Dashboard modal',\n};\n\n// Used in the widget builder full-page\ntype DashboardsEventParametersAddWidgetInBuilder = {\n  'dashboards_views.add_widget_in_builder.change': {\n    field: string;\n    from: string;\n    value: string;\n    widget_type: string;\n  };\n  'dashboards_views.add_widget_in_builder.confirm': {\n    data_set: string;\n  };\n  'dashboards_views.add_widget_in_builder.opened': {};\n  // TODO(widget-builder-experience): Port the analytics code as soon as we can persist a widget from the widget library\n  'dashboards_views.add_widget_in_builder.save': {\n    data_set: string;\n  };\n  'dashboards_views.edit_widget_in_builder.confirm': {};\n  'dashboards_views.edit_widget_in_builder.opened': {};\n};\n\nconst dashboardsEventMapAddWidgetInBuilder: Record<\n  keyof DashboardsEventParametersAddWidgetInBuilder,\n  string | null\n> = {\n  'dashboards_views.edit_widget_in_builder.confirm':\n    'Dashboards2: Edit dashboard widget builder form submitted',\n  'dashboards_views.edit_widget_in_builder.opened':\n    'Dashboards2: Edit widget in builder opened',\n  'dashboards_views.add_widget_in_builder.opened':\n    'Dashboards2: Add widget in builder opened',\n  'dashboards_views.add_widget_in_builder.change':\n    'Dashboards2: Field changed in builder',\n  'dashboards_views.add_widget_in_builder.confirm':\n    'Dashboards2: Add widget to dashboard widget builder form submitted',\n  'dashboards_views.add_widget_in_builder.save':\n    'Dashboards2: Widget saved directly to dashboard from add widget to dashboard widget builder',\n};\n\nexport type DashboardsEventParameters = {\n  'dashboards_manage.change_sort': {\n    sort: string;\n  };\n  'dashboards_manage.create.start': {};\n  'dashboards_manage.search': {};\n  'dashboards_manage.templates.add': {\n    dashboard_id: string;\n    dashboard_title: string;\n    was_previewed: boolean;\n  };\n  'dashboards_manage.templates.preview': {\n    dashboard_id: string;\n  };\n  'dashboards_manage.templates.toggle': {\n    show_templates: boolean;\n  };\n  'dashboards_views.open_in_discover.opened': {\n    widget_type: string;\n  };\n  'dashboards_views.query_selector.opened': {\n    widget_type: string;\n  };\n  'dashboards_views.query_selector.selected': {\n    widget_type: string;\n  };\n  'dashboards_views.widget_library.add': {\n    num_widgets: number;\n  };\n  'dashboards_views.widget_library.add_widget': {\n    title: string;\n  };\n  'dashboards_views.widget_library.opened': {};\n  'dashboards_views.widget_library.switch_tab': {\n    to: string;\n  };\n} & DashboardsEventParametersAddWidgetModal &\n  DashboardsEventParametersAddWidgetInBuilder;\n\nexport type DashboardsEventKey = keyof DashboardsEventParameters;\n\nexport const dashboardsEventMap: Record<DashboardsEventKey, string | null> = {\n  'dashboards_views.query_selector.opened':\n    'Dashboards2: Query Selector opened for Widget',\n  'dashboards_views.query_selector.selected':\n    'Dashboards2: Query selected in Query Selector',\n  'dashboards_views.open_in_discover.opened': 'Dashboards2: Widget Opened In Discover',\n  'dashboards_views.widget_library.add': 'Dashboards2: Number of prebuilt widgets added',\n  'dashboards_views.widget_library.add_widget':\n    'Dashboards2: Title of prebuilt widget added',\n  'dashboards_views.widget_library.switch_tab':\n    'Dashboards2: Widget Library tab switched',\n  'dashboards_views.widget_library.opened': 'Dashboards2: Add Widget Library opened',\n  'dashboards_manage.search': 'Dashboards Manager: Search',\n  'dashboards_manage.change_sort': 'Dashboards Manager: Sort By Changed',\n  'dashboards_manage.create.start': 'Dashboards Manager: Dashboard Create Started',\n  'dashboards_manage.templates.toggle': 'Dashboards Manager: Template Toggle Changed',\n  'dashboards_manage.templates.add': 'Dashboards Manager: Template Added',\n  'dashboards_manage.templates.preview': 'Dashboards Manager: Template Previewed',\n  ...dashboardsEventMapAddWidgetModal,\n  ...dashboardsEventMapAddWidgetInBuilder,\n};\n","export type DiscoverEventParameters = {\n  'discover_views.add_to_dashboard.confirm': {};\n  'discover_views.add_to_dashboard.modal_open': {saved_query: boolean};\n};\n\nexport type DiscoverEventKey = keyof DiscoverEventParameters;\n\nexport const discoverEventMap: Record<DiscoverEventKey, string | null> = {\n  'discover_views.add_to_dashboard.modal_open':\n    'Discover2: Add to Dashboard modal opened',\n  'discover_views.add_to_dashboard.confirm':\n    'Discover2: Add to Dashboard modal form submitted',\n};\n","type RuleViewed = {\n  alert_type: 'issue' | 'metric';\n  project_id: string;\n};\n\nexport type TeamInsightsEventParameters = {\n  'alert_builder.filter': {query: string; session_id?: string};\n  'alert_details.viewed': {alert_id: number};\n  'alert_rule_details.viewed': {alert: string; rule_id: number};\n  'alert_rules.viewed': {sort: string};\n  'alert_stream.viewed': {};\n  'alert_wizard.option_selected': {alert_type: string};\n  'alert_wizard.option_viewed': {alert_type: string};\n  'edit_alert_rule.add_row': {\n    name: string;\n    project_id: string;\n    type: string;\n  };\n  'edit_alert_rule.viewed': RuleViewed;\n  'issue_alert_rule_details.edit_clicked': {rule_id: number};\n  'issue_alert_rule_details.viewed': {rule_id: number};\n  'new_alert_rule.viewed': RuleViewed & {\n    session_id: string;\n  };\n  'team_insights.viewed': {};\n};\n\nexport type TeamInsightsEventKey = keyof TeamInsightsEventParameters;\n\nexport const workflowEventMap: Record<TeamInsightsEventKey, string | null> = {\n  'alert_builder.filter': 'Alert Builder: Filter',\n  'alert_details.viewed': 'Alert Details: Viewed',\n  'alert_rule_details.viewed': 'Alert Rule Details: Viewed',\n  'alert_rules.viewed': 'Alert Rules: Viewed',\n  'alert_stream.viewed': 'Alert Stream: Viewed',\n  'alert_wizard.option_selected': 'Alert Wizard: Option Selected',\n  'alert_wizard.option_viewed': 'Alert Wizard: Option Viewed',\n  'edit_alert_rule.add_row': 'Edit Alert Rule: Add Row',\n  'edit_alert_rule.viewed': 'Edit Alert Rule: Viewed',\n  'issue_alert_rule_details.edit_clicked': 'Issue Alert Rule Details: Edit Clicked',\n  'issue_alert_rule_details.viewed': 'Issue Alert Rule Details: Viewed',\n  'new_alert_rule.viewed': 'New Alert Rule: Viewed',\n  'team_insights.viewed': 'Team Insights: Viewed',\n};\n","type SearchEventBase = {\n  query: string;\n  search_type: string;\n  search_source?: string;\n};\n\ntype OpenEvent = {};\ntype SelectEvent = {result_type: string; source_type: string; query?: string};\ntype QueryEvent = {query: string};\ntype ProjectSelectorEvent = {path: string};\n\nexport type SearchEventParameters = {\n  'command_palette.open': OpenEvent;\n  'command_palette.query': QueryEvent;\n  'command_palette.select': SelectEvent;\n  'organization_saved_search.selected': {\n    id: number;\n    search_type: string;\n  };\n  'projectselector.clear': ProjectSelectorEvent;\n  'projectselector.direct_selection': ProjectSelectorEvent;\n  'projectselector.multi_button_clicked': ProjectSelectorEvent & {\n    button_type: 'all' | 'my';\n  };\n  'projectselector.toggle': ProjectSelectorEvent & {\n    action: 'added' | 'removed';\n  };\n  'projectselector.update': ProjectSelectorEvent & {\n    count: number;\n    multi: boolean;\n  };\n  'search.operator_autocompleted': SearchEventBase & {search_operator: string};\n  'search.searched': SearchEventBase & {search_source?: string};\n  'settings_search.open': OpenEvent;\n  'settings_search.query': QueryEvent;\n  'settings_search.select': SelectEvent;\n  'sidebar_help.open': OpenEvent;\n  'sidebar_help.query': QueryEvent;\n  'sidebar_help.select': SelectEvent;\n};\n\nexport type SearchEventKey = keyof SearchEventParameters;\n\nexport const searchEventMap: Record<SearchEventKey, string | null> = {\n  'search.searched': 'Search: Performed search',\n  'search.operator_autocompleted': 'Search: Operator Autocompleted',\n  'organization_saved_search.selected':\n    'Organization Saved Search: Selected saved search',\n  'settings_search.open': 'settings_search Open',\n  'command_palette.open': 'command_palette Open',\n  'sidebar_help.open': 'sidebar_help Open',\n  'settings_search.select': 'settings_search Select',\n  'command_palette.select': 'command_palette Select',\n  'sidebar_help.select': 'sidebar_help Select',\n  'settings_search.query': 'settings_search Query',\n  'command_palette.query': 'command_palette Query',\n  'sidebar_help.query': 'sidebar_help Query',\n  'projectselector.direct_selection': 'Project Selector: Direct Selection',\n  'projectselector.update': 'Project Selector: Update',\n  'projectselector.clear': 'Project Selector: Clear',\n  'projectselector.toggle': 'Project Selector: Toggle',\n  'projectselector.multi_button_clicked': 'Project Selector: Multi Button Clicked',\n};\n","export type SettingsEventParameters = {\n  'notification_settings.index_page_viewed': {};\n  'notification_settings.tuning_page_viewed': {\n    notification_type: string;\n  };\n  'notification_settings.updated_tuning_setting': {\n    notification_type: string;\n    tuning_field_type: string;\n  };\n};\n\nexport type SettingsEventKey = keyof SettingsEventParameters;\n\nexport const settingsEventMap: Record<SettingsEventKey, string | null> = {\n  'notification_settings.index_page_viewed': 'Notification Settings: Index Page Viewed',\n  'notification_settings.tuning_page_viewed': 'Notification Settings: Tuning Page Viewed',\n  'notification_settings.updated_tuning_setting':\n    'Notification Settings: Updated Tuning Setting',\n};\n","import {useEffect, useRef} from 'react';\n\nimport {Client} from 'sentry/api';\n\ntype Options = {\n  /**\n   * An existing API client may be provided.\n   *\n   * This is a continent way to re-use clients and still inherit the\n   * persistInFlight configuration.\n   */\n  api?: Client;\n  /**\n   * Enabling this option will disable clearing in-flight requests when the\n   * component is unmounted.\n   *\n   * This may be useful in situations where your component needs to finish up\n   * somewhere the client was passed into some type of action creator and the\n   * component is unmounted.\n   */\n  persistInFlight?: boolean;\n};\n\n/**\n * Returns an API client that will have it's requests canceled when the owning\n * React component is unmounted (may be disabled via options).\n */\nfunction useApi({persistInFlight, api: providedApi}: Options = {}) {\n  const localApi = useRef<Client>();\n\n  // Lazily construct the client if we weren't provided with one\n  if (localApi.current === undefined && providedApi === undefined) {\n    localApi.current = new Client();\n  }\n\n  // Use the provided client if available\n  const api = providedApi ?? localApi.current!;\n\n  function handleCleanup() {\n    !persistInFlight && api.clear();\n  }\n\n  useEffect(() => handleCleanup, []);\n\n  return api;\n}\n\nexport default useApi;\n","import {Client} from 'sentry/api';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport useApi from 'sentry/utils/useApi';\n\ntype InjectedApiProps = {\n  api: Client;\n};\n\ntype WrappedProps<P> = Omit<P, keyof InjectedApiProps> & Partial<InjectedApiProps>;\n\n/**\n * XXX: Prefer useApi if you are wrapping a Function Component!\n *\n * React Higher-Order Component (HoC) that provides \"api\" client when mounted,\n * and clears API requests when component is unmounted.\n *\n * If an `api` prop is provided when the component is invoked it will be passed\n * through.\n */\nconst withApi = <P extends InjectedApiProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Parameters<typeof useApi>[0] = {}\n) => {\n  const WithApi: React.FC<WrappedProps<P>> = ({api: propsApi, ...props}) => {\n    const api = useApi({api: propsApi, ...options});\n\n    return <WrappedComponent {...(props as P)} api={api} />;\n  };\n\n  WithApi.displayName = `withApi(${getDisplayName(WrappedComponent)})`;\n\n  return WithApi;\n};\n\nexport default withApi;\n"],"names":["TAG_HEIGHT","Tag","type","icon","tooltipText","to","onClick","href","onDismiss","children","textMaxWidth","props","iconsProps","size","color","theme","iconColor","tag","title","containerDisplayMode","Background","React","IconWrapper","defined","undefined","Text","maxWidth","DismissButton","event","preventDefault","priority","t","isCircled","TagWrapper","trackAdvancedAnalyticsEvent","is_clickable","organization","p","fontSizeSmall","background","border","space","includes","textColor","Button","allEventMap","resolve_issue","makeAnalyticsFunction","persistInFlight","api","providedApi","localApi","useRef","current","Client","handleCleanup","clear","useEffect","WrappedComponent","options","WithApi","propsApi","useApi","displayName","getDisplayName"],"sourceRoot":""}