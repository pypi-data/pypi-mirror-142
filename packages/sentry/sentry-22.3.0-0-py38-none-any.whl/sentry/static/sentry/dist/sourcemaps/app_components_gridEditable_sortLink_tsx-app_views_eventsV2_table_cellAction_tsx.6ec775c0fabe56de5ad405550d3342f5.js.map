{"version":3,"file":"chunks/app_components_gridEditable_sortLink_tsx-app_views_eventsV2_table_cellAction_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"wjBAqBA,MAAMA,UAAiBC,EAAAA,UACrBC,cACE,MAAM,UAACC,GAAaC,KAAKC,MACzB,OAAKF,EAIa,SAAdA,GACK,QAACG,EAAD,CAAiBC,KAAK,KAAKJ,UAAU,UAEvC,QAACG,EAAD,CAAiBC,KAAK,KAAKJ,UAAU,OANnC,KASXK,SACE,MAAM,MAACC,EAAD,MAAQC,EAAR,QAAeC,EAAf,iBAAwBC,EAAxB,QAA0CC,GAAWT,KAAKC,MAE1DS,EAASF,IAEf,OAAKE,GAAWH,GAKd,QAACI,EAAD,CAAYN,MAAOA,EAAOO,GAAIF,EAAQD,QAASA,EAA/C,UACGH,EADH,IACWN,KAAKF,kBALT,QAACe,EAAD,CAAeR,MAAOA,EAAtB,SAA8BC,KAnBrCV,EAAAA,YAAAA,WAiCN,MAAMe,GAAa,QAAQV,IACzB,MAAMa,EAAeC,GAAAA,CAAKd,EAAO,CAAC,UAClC,OAAO,QAAC,IAAD,IAAUa,MAFA,sBAAH,gHAgBXE,GAAwBA,EAAEX,MAAS,eAAcW,EAAEX,SAAW,IAhBnD,KAmBVQ,GAAgB,OAAO,MAAP,sBAAH,gDAIdG,GAA4BA,EAAEX,MAAS,eAAcW,EAAEX,SAAW,IAJpD,KAObH,GAAkB,OAAOe,EAAAA,GAAP,sBAAH,6CAIrB,K,y3BC9DO,IAAKC,EAWL,SAASC,EACdC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAMF,EAAOG,KAenB,OAboB,aAAhBH,EAAOI,MAAwC,iBAAVH,IAEvCA,GAAQI,EAAAA,EAAAA,IAAYJ,EAAQ,IAAM,GAAG,IAInCK,MAAMC,QAAQN,IAEK,KADrBA,EAAQ,IAAI,IAAIO,IAAIP,KACVQ,SACRR,EAAQA,EAAM,IAIVF,GACN,KAAKH,EAAQc,IAEX,GAAIT,MAAAA,EAGFH,EAAQa,kBAAkB,MAAOT,GACjCJ,EAAQc,gBAAgB,OAAQ,CAACV,QAC5B,CAIL,GAFAJ,EAAQe,aAAc,IAAGX,KAErBI,MAAMC,QAAQN,GAAQ,CAExB,MAAMa,EAAiBhB,EAAQiB,gBAAgBb,GAC/CD,EAAQ,IAAI,IAAIO,IAAI,IAAIM,KAAmBb,UAE3CA,EAAQ,CAACe,OAAOf,IAGlBH,EAAQmB,gBAAgBf,EAAKD,GAE/B,MACF,KAAKL,EAAQsB,QACX,GAAIjB,MAAAA,EAGFH,EAAQa,kBAAkB,OAAQT,GAClCJ,EAAQc,gBAAgB,MAAO,CAACV,QAC3B,CAELJ,EAAQe,aAAaX,GAErB,MAAMiB,EAAY,IAAGjB,IACrBD,EAAQK,MAAMC,QAAQN,GAASA,EAAQ,CAACe,OAAOf,IAC/C,MAAMmB,EAAmBtB,EAAQiB,gBAAgBI,GACjDlB,EAAQ,IAAI,IAAIO,IAAI,IAAIY,KAAqBnB,KAC7CH,EAAQmB,gBAAgBE,EAAUlB,GAEpC,MACF,KAAKL,EAAQyB,kBAEXvB,EAAQmB,gBAAgBf,EAAK,CAAE,IAAGD,MAClC,MAEF,KAAKL,EAAQ0B,eAEXxB,EAAQmB,gBAAgBf,EAAK,CAAE,IAAGD,MAClC,MAIF,KAAKL,EAAQ2B,YACb,KAAK3B,EAAQ4B,QACb,KAAK5B,EAAQ6B,UACX,MACF,QACE,MAAM,IAAIC,MAAO,wBAAuB3B,O,SAzFlCH,GAAAA,EAAAA,IAAAA,MAAAA,EAAAA,QAAAA,UAAAA,EAAAA,kBAAAA,oBAAAA,EAAAA,eAAAA,iBAAAA,EAAAA,YAAAA,cAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,YAAAA,EAAAA,eAAAA,iB,CAAAA,IAAAA,EAAAA,KA4GZ,MAAM+B,UAAmBpD,EAAAA,UACvBqD,YAAYjD,GACVkD,MAAMlD,IADkB,oBAYX,CACbmD,YAAY,EACZC,QAAQ,KAdgB,gGAiCJC,IACftD,KAAKuD,QAGJD,EAAM5C,kBAAkB8C,UAG1BxD,KAAKuD,OAAOE,SAASH,EAAM5C,SAG/BV,KAAK0D,SAAS,CAACL,QAAQ,EAAOD,YAAY,SA3ClB,gCA8CP,KACjBpD,KAAK0D,SAAS,CAACN,YAAY,QA/CH,gCAkDP,KACjBpD,KAAK0D,UAASC,GAERA,EAAMN,OACDM,EAEF,IAAIA,EAAOP,YAAY,SAxDR,gCA4DNE,IAClBA,EAAMM,iBACN5D,KAAK0D,SAAS,CAACL,QAASrD,KAAK2D,MAAMN,YA5DnC,IAAIQ,EAASC,SAASC,eAAe,sBAChCF,IACHA,EAASC,SAASE,cAAc,OAChCH,EAAOI,aAAa,KAAM,sBAC1BH,SAASI,KAAKC,YAAYN,IAE5B7D,KAAKoE,SAAWP,EAChB7D,KAAKuD,OAAS,KAQhBc,mBAAmBC,EAAeC,GAC5BvE,KAAK2D,MAAMN,SAA+B,IAArBkB,EAAUlB,QACjCS,SAASU,iBAAiB,QAASxE,KAAKyE,oBAAoB,IAEpC,IAAtBzE,KAAK2D,MAAMN,QAAoBkB,EAAUlB,QAC3CS,SAASY,oBAAoB,QAAS1E,KAAKyE,oBAAoB,GAInEE,uBACEb,SAASY,oBAAoB,QAAS1E,KAAKyE,oBAAoB,GAsCjEG,oBACE,MAAM,QAACC,EAAD,OAAUvD,EAAV,iBAAkBwD,EAAlB,aAAoCC,GAAgB/E,KAAKC,MAG/D,IAAI+E,EAAAA,EAAAA,IAAsC1D,EAAOG,MAC/C,OAAO,KAIT,IAAIwD,EAAAA,EAAAA,IAAgB3D,EAAOG,MACzB,OAAO,KAKT,IAAIF,EAAQsD,GAFOK,EAAAA,EAAAA,IAAkB5D,EAAOG,OAM1CG,MAAMC,QAAQN,IACD,OAAbA,EAAM,IACiB,UAAvBD,EAAOA,OAAO6D,MACU,kBAAxB7D,EAAOA,OAAO8D,QAEd7D,EAAQ,GAEV,MAAM8D,EAA6B,GAEnC,SAASC,EAAYjE,EAAiBkE,IAEjC3D,MAAMC,QAAQkD,IAAiBA,EAAaS,SAASnE,KACrD0D,IAEDM,EAAQI,KAAKF,GAyHjB,QApHG,CAAC,WAAY,SAAU,cAAcC,SAASlE,EAAOI,OAC3C,OAAVH,GAAyC,UAAvBD,EAAOA,OAAO6D,QAEjCG,EACEpE,EAAQc,KACR,QAAC0D,EAAD,CAEE,eAAa,gBACbjF,QAAS,IAAMqE,EAAiB5D,EAAQc,IAAKT,GAH/C,UAKGoE,EAAAA,EAAAA,GAAE,kBAJC,kBAQY,SAAhBrE,EAAOI,MACT4D,EACEpE,EAAQsB,SACR,QAACkD,EAAD,CAEE,eAAa,sBACbjF,QAAS,IAAMqE,EAAiB5D,EAAQsB,QAASjB,GAHnD,UAKGoE,EAAAA,EAAAA,GAAE,wBAJC,yBAWV,CAAC,OAAQ,WAAY,UAAW,SAAU,cAAcH,SAASlE,EAAOI,OAC9D,OAAVH,IAEA+D,EACEpE,EAAQyB,mBACR,QAAC+C,EAAD,CAEE,eAAa,2BACbjF,QAAS,IAAMqE,EAAiB5D,EAAQyB,kBAAmBpB,GAH7D,UAKGoE,EAAAA,EAAAA,GAAE,6BAJC,6BAQRL,EACEpE,EAAQ0B,gBACR,QAAC8C,EAAD,CAEE,eAAa,wBACbjF,QAAS,IAAMqE,EAAiB5D,EAAQ0B,eAAgBrB,GAH1D,UAKGoE,EAAAA,EAAAA,GAAE,0BAJC,2BASiB,UAAvBrE,EAAOA,OAAO6D,MAA4C,gBAAxB7D,EAAOA,OAAO8D,OAClDE,EACEpE,EAAQ2B,aACR,QAAC6C,EAAD,CAEE,eAAa,sBACbjF,QAAS,IAAMqE,EAAiB5D,EAAQ2B,YAAatB,GAHvD,UAKGoE,EAAAA,EAAAA,GAAE,kBAJC,wBASiB,UAAvBrE,EAAOA,OAAO6D,MAA4C,YAAxB7D,EAAOA,OAAO8D,OAAuB7D,GACzE+D,EACEpE,EAAQ4B,SACR,QAAC4C,EAAD,CAEE,eAAa,UACbjF,QAAS,IAAMqE,EAAiB5D,EAAQ4B,QAASvB,GAHnD,UAKGoE,EAAAA,EAAAA,GAAE,kBAJC,YAUe,aAAvBrE,EAAOA,OAAO6D,MACgB,iBAA9B7D,EAAOA,OAAOsE,SAAS,IAEvBN,EACEpE,EAAQ6B,WACR,QAAC2C,EAAD,CAEE,eAAa,qBACbjF,QAAS,IAAMqE,EAAiB5D,EAAQ6B,UAAWxB,GAHrD,UAKGoE,EAAAA,EAAAA,GAAE,gBAJC,cAUe,aAAvBrE,EAAOA,OAAO6D,MACgB,gBAA9B7D,EAAOA,OAAOsE,SAAS,KACvBC,EAAAA,EAAAA,IAAQhB,EAAQiB,2BAEhBR,EACEpE,EAAQ6E,gBACR,QAACL,EAAD,CAEE,eAAa,iBACbjF,QAAS,IAAMqE,EAAiB5D,EAAQ6E,eAAgBxE,GAH1D,UAKGyE,EAAAA,EAAAA,IAAI,iCAAkC,CACrCC,UAAWpB,EAAQiB,yBAAyB,MAL1C,mBAWa,IAAnBT,EAAQtD,OACH,MAIP,QAACmE,EAAD,CACEzF,QAAS6C,IAEPA,EAAM6C,mBAHV,SAMGd,IAKPe,aACE,MAAM,OAAC/C,GAAUrD,KAAK2D,MAEhB0C,EAAcrG,KAAK4E,oBAEzB,GAAoB,OAAhByB,EAEF,OAAO,KAaT,IAAIC,EAAiC,KA0BrC,OAxBIjD,IACFiD,EAAOC,EAAAA,cACL,QAAC,KAAD,CAAQC,UAAU,MAAMC,UAdU,CACpCC,KAAM,CACJC,SAAS,GAEXC,gBAAiB,CACfC,QAAS,GACTF,SAAS,EACTG,kBAAmB,aAOnB,SACG,QAAEC,IAAKC,EAAN,MAAiBC,EAAjB,UAAwBT,EAAxB,WAAmCU,GAApC,SACC,QAACC,EAAD,CACEJ,IAAKA,IACFC,EAAuBD,GACxB/G,KAAKuD,OAASwD,GAEhBE,MAAOA,EALT,WAOE,QAACG,EAAD,CACEL,IAAKG,EAAWH,IAChB,iBAAgBP,EAChBS,MAAOC,EAAWD,QAEnBZ,QAIPrG,KAAKoE,YAKP,QAACiD,EAAD,WACE,QAAC,KAAD,YACE,QAAC,IAAD,UACG,QAAC,IAACN,GAAF,SACC,QAACO,EAAD,CAAYP,IAAKA,EAAKtG,QAAST,KAAKuH,iBAApC,UACE,QAAC,KAAD,CAAcpH,KAAK,KAAK,eAAa,cAAcqH,MAAM,iBAI9DlB,OAMTlG,SACE,MAAM,SAACqH,GAAYzH,KAAKC,OAClB,WAACmD,GAAcpD,KAAK2D,MAE1B,OACE,QAAC+D,EAAD,CACEC,aAAc3H,KAAK4H,iBACnBC,aAAc7H,KAAK8H,iBAFrB,UAIGL,EACArE,GAAcpD,KAAKoG,iBApTtBnD,EAAAA,YAAAA,aA0TN,UAEMyE,GAAY,OAAO,MAAP,sBAAH,6HASTL,GAAW,OAAO,MAAP,sBAAH,2DAMRF,GAAO,OAAO,MAAP,sBAAH,WACEY,EAAAA,EAAAA,GAAM,GADR,eAGG/G,GAAKA,EAAEgH,MAAMC,OAAOC,SAHvB,KAMJhC,GAAc,OAAO,MAAP,sBAAH,eACDlF,GAAKA,EAAEgH,MAAMG,YADZ,sBAEKnH,GAAKA,EAAEgH,MAAMI,QAFlB,mBAGEpH,GAAKA,EAAEgH,MAAMK,cAHf,gBAIDrH,GAAKA,EAAEgH,MAAMM,iBAJZ,qBAQXlB,GAAY,OAAO,OAAP,sBAAH,kKAU+BpG,GAAKA,EAAEgH,MAAMI,QAV5C,4GAgB+BpH,GAAKA,EAAEgH,MAAMG,YAhB5C,0HAwBOnH,GAAKA,EAAEgH,MAAMI,QAxBpB,+GA8BOpH,GAAKA,EAAEgH,MAAMG,YA9BpB,8IA6CTzC,GAAa,OAAO,SAAP,sBAAH,qCAGHqC,EAAAA,EAAAA,GAAM,GAHH,KAGSA,EAAAA,EAAAA,GAAM,GAHf,0EAQa/G,GAAKA,EAAEgH,MAAMO,aAR1B,eAUDvH,GAAKA,EAAEgH,MAAMQ,gBAVZ,wDAeExH,GAAKA,EAAEgH,MAAMS,qBAff,oCAuBVnB,GAAa,OAAO,SAAP,sBAAH,uGAQAtG,GAAKwG,GAAAA,CAAMxG,EAAEgH,MAAMG,YAAYO,MAAM,KAAMC,UAR3C,mBASG3H,GAAKA,EAAEgH,MAAMK,cAThB,sBAUMrH,GAAKA,EAAEgH,MAAMI,QAVnB","sources":["webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/views/eventsV2/table/cellAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport omit from 'lodash/omit';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nclass SortLink extends React.Component<Props> {\n  renderArrow() {\n    const {direction} = this.props;\n    if (!direction) {\n      return null;\n    }\n\n    if (direction === 'desc') {\n      return <StyledIconArrow size=\"xs\" direction=\"down\" />;\n    }\n    return <StyledIconArrow size=\"xs\" direction=\"up\" />;\n  }\n\n  render() {\n    const {align, title, canSort, generateSortLink, onClick} = this.props;\n\n    const target = generateSortLink();\n\n    if (!target || !canSort) {\n      return <StyledNonLink align={align}>{title}</StyledNonLink>;\n    }\n\n    return (\n      <StyledLink align={align} to={target} onClick={onClick}>\n        {title} {this.renderArrow()}\n      </StyledLink>\n    );\n  }\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  const forwardProps = omit(props, ['align']);\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Manager, Popper, Reference} from 'react-popper';\nimport styled from '@emotion/styled';\nimport color from 'color';\nimport * as PopperJS from 'popper.js';\n\nimport {IconEllipsis} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport {TableDataRow} from 'sentry/utils/discover/discoverQuery';\nimport {\n  getAggregateAlias,\n  isEquationAlias,\n  isRelativeSpanOperationBreakdownField,\n} from 'sentry/utils/discover/fields';\nimport {getDuration} from 'sentry/utils/formatters';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {TableColumn} from './types';\n\nexport enum Actions {\n  ADD = 'add',\n  EXCLUDE = 'exclude',\n  SHOW_GREATER_THAN = 'show_greater_than',\n  SHOW_LESS_THAN = 'show_less_than',\n  TRANSACTION = 'transaction',\n  RELEASE = 'release',\n  DRILLDOWN = 'drilldown',\n  EDIT_THRESHOLD = 'edit_threshold',\n}\n\nexport function updateQuery(\n  results: MutableSearch,\n  action: Actions,\n  column: TableColumn<keyof TableDataRow>,\n  value: React.ReactText | string[]\n) {\n  const key = column.name;\n\n  if (column.type === 'duration' && typeof value === 'number') {\n    // values are assumed to be in milliseconds\n    value = getDuration(value / 1000, 2, true);\n  }\n\n  // De-duplicate array values\n  if (Array.isArray(value)) {\n    value = [...new Set(value)];\n    if (value.length === 1) {\n      value = value[0];\n    }\n  }\n\n  switch (action) {\n    case Actions.ADD:\n      // If the value is null/undefined create a has !has condition.\n      if (value === null || value === undefined) {\n        // Adding a null value is the same as excluding truthy values.\n        // Remove inclusion if it exists.\n        results.removeFilterValue('has', key);\n        results.addFilterValues('!has', [key]);\n      } else {\n        // Remove exclusion if it exists.\n        results.removeFilter(`!${key}`);\n\n        if (Array.isArray(value)) {\n          // For array values, add to existing filters\n          const currentFilters = results.getFilterValues(key);\n          value = [...new Set([...currentFilters, ...value])];\n        } else {\n          value = [String(value)];\n        }\n\n        results.setFilterValues(key, value);\n      }\n      break;\n    case Actions.EXCLUDE:\n      if (value === null || value === undefined) {\n        // Excluding a null value is the same as including truthy values.\n        // Remove exclusion if it exists.\n        results.removeFilterValue('!has', key);\n        results.addFilterValues('has', [key]);\n      } else {\n        // Remove positive if it exists.\n        results.removeFilter(key);\n        // Negations should stack up.\n        const negation = `!${key}`;\n        value = Array.isArray(value) ? value : [String(value)];\n        const currentNegations = results.getFilterValues(negation);\n        value = [...new Set([...currentNegations, ...value])];\n        results.setFilterValues(negation, value);\n      }\n      break;\n    case Actions.SHOW_GREATER_THAN: {\n      // Remove query token if it already exists\n      results.setFilterValues(key, [`>${value}`]);\n      break;\n    }\n    case Actions.SHOW_LESS_THAN: {\n      // Remove query token if it already exists\n      results.setFilterValues(key, [`<${value}`]);\n      break;\n    }\n    // these actions do not modify the query in any way,\n    // instead they have side effects\n    case Actions.TRANSACTION:\n    case Actions.RELEASE:\n    case Actions.DRILLDOWN:\n      break;\n    default:\n      throw new Error(`Unknown action type. ${action}`);\n  }\n}\n\ntype Props = {\n  children: React.ReactNode;\n  column: TableColumn<keyof TableDataRow>;\n  dataRow: TableDataRow;\n  handleCellAction: (action: Actions, value: React.ReactText) => void;\n\n  // allow list of actions to display on the context menu\n  allowActions?: Actions[];\n};\n\ntype State = {\n  isHovering: boolean;\n  isOpen: boolean;\n};\n\nclass CellAction extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    let portal = document.getElementById('cell-action-portal');\n    if (!portal) {\n      portal = document.createElement('div');\n      portal.setAttribute('id', 'cell-action-portal');\n      document.body.appendChild(portal);\n    }\n    this.portalEl = portal;\n    this.menuEl = null;\n  }\n\n  state: State = {\n    isHovering: false,\n    isOpen: false,\n  };\n\n  componentDidUpdate(_props: Props, prevState: State) {\n    if (this.state.isOpen && prevState.isOpen === false) {\n      document.addEventListener('click', this.handleClickOutside, true);\n    }\n    if (this.state.isOpen === false && prevState.isOpen) {\n      document.removeEventListener('click', this.handleClickOutside, true);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside, true);\n  }\n\n  private portalEl: Element;\n  private menuEl: Element | null;\n\n  handleClickOutside = (event: MouseEvent) => {\n    if (!this.menuEl) {\n      return;\n    }\n    if (!(event.target instanceof Element)) {\n      return;\n    }\n    if (this.menuEl.contains(event.target)) {\n      return;\n    }\n    this.setState({isOpen: false, isHovering: false});\n  };\n\n  handleMouseEnter = () => {\n    this.setState({isHovering: true});\n  };\n\n  handleMouseLeave = () => {\n    this.setState(state => {\n      // Don't hide the button if the menu is open.\n      if (state.isOpen) {\n        return state;\n      }\n      return {...state, isHovering: false};\n    });\n  };\n\n  handleMenuToggle = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    this.setState({isOpen: !this.state.isOpen});\n  };\n\n  renderMenuButtons() {\n    const {dataRow, column, handleCellAction, allowActions} = this.props;\n\n    // Do not render context menu buttons for the span op breakdown field.\n    if (isRelativeSpanOperationBreakdownField(column.name)) {\n      return null;\n    }\n\n    // Do not render context menu buttons for the equation fields until we can query on them\n    if (isEquationAlias(column.name)) {\n      return null;\n    }\n\n    const fieldAlias = getAggregateAlias(column.name);\n\n    let value = dataRow[fieldAlias];\n\n    // error.handled is a strange field where null = true.\n    if (\n      Array.isArray(value) &&\n      value[0] === null &&\n      column.column.kind === 'field' &&\n      column.column.field === 'error.handled'\n    ) {\n      value = 1;\n    }\n    const actions: React.ReactNode[] = [];\n\n    function addMenuItem(action: Actions, menuItem: React.ReactNode) {\n      if (\n        (Array.isArray(allowActions) && allowActions.includes(action)) ||\n        !allowActions\n      ) {\n        actions.push(menuItem);\n      }\n    }\n\n    if (\n      !['duration', 'number', 'percentage'].includes(column.type) ||\n      (value === null && column.column.kind === 'field')\n    ) {\n      addMenuItem(\n        Actions.ADD,\n        <ActionItem\n          key=\"add-to-filter\"\n          data-test-id=\"add-to-filter\"\n          onClick={() => handleCellAction(Actions.ADD, value)}\n        >\n          {t('Add to filter')}\n        </ActionItem>\n      );\n\n      if (column.type !== 'date') {\n        addMenuItem(\n          Actions.EXCLUDE,\n          <ActionItem\n            key=\"exclude-from-filter\"\n            data-test-id=\"exclude-from-filter\"\n            onClick={() => handleCellAction(Actions.EXCLUDE, value)}\n          >\n            {t('Exclude from filter')}\n          </ActionItem>\n        );\n      }\n    }\n\n    if (\n      ['date', 'duration', 'integer', 'number', 'percentage'].includes(column.type) &&\n      value !== null\n    ) {\n      addMenuItem(\n        Actions.SHOW_GREATER_THAN,\n        <ActionItem\n          key=\"show-values-greater-than\"\n          data-test-id=\"show-values-greater-than\"\n          onClick={() => handleCellAction(Actions.SHOW_GREATER_THAN, value)}\n        >\n          {t('Show values greater than')}\n        </ActionItem>\n      );\n\n      addMenuItem(\n        Actions.SHOW_LESS_THAN,\n        <ActionItem\n          key=\"show-values-less-than\"\n          data-test-id=\"show-values-less-than\"\n          onClick={() => handleCellAction(Actions.SHOW_LESS_THAN, value)}\n        >\n          {t('Show values less than')}\n        </ActionItem>\n      );\n    }\n\n    if (column.column.kind === 'field' && column.column.field === 'transaction') {\n      addMenuItem(\n        Actions.TRANSACTION,\n        <ActionItem\n          key=\"transaction-summary\"\n          data-test-id=\"transaction-summary\"\n          onClick={() => handleCellAction(Actions.TRANSACTION, value)}\n        >\n          {t('Go to summary')}\n        </ActionItem>\n      );\n    }\n\n    if (column.column.kind === 'field' && column.column.field === 'release' && value) {\n      addMenuItem(\n        Actions.RELEASE,\n        <ActionItem\n          key=\"release\"\n          data-test-id=\"release\"\n          onClick={() => handleCellAction(Actions.RELEASE, value)}\n        >\n          {t('Go to release')}\n        </ActionItem>\n      );\n    }\n\n    if (\n      column.column.kind === 'function' &&\n      column.column.function[0] === 'count_unique'\n    ) {\n      addMenuItem(\n        Actions.DRILLDOWN,\n        <ActionItem\n          key=\"drilldown\"\n          data-test-id=\"per-cell-drilldown\"\n          onClick={() => handleCellAction(Actions.DRILLDOWN, value)}\n        >\n          {t('View Stacks')}\n        </ActionItem>\n      );\n    }\n\n    if (\n      column.column.kind === 'function' &&\n      column.column.function[0] === 'user_misery' &&\n      defined(dataRow.project_threshold_config)\n    ) {\n      addMenuItem(\n        Actions.EDIT_THRESHOLD,\n        <ActionItem\n          key=\"edit_threshold\"\n          data-test-id=\"edit-threshold\"\n          onClick={() => handleCellAction(Actions.EDIT_THRESHOLD, value)}\n        >\n          {tct('Edit threshold ([threshold]ms)', {\n            threshold: dataRow.project_threshold_config[1],\n          })}\n        </ActionItem>\n      );\n    }\n\n    if (actions.length === 0) {\n      return null;\n    }\n\n    return (\n      <MenuButtons\n        onClick={event => {\n          // prevent clicks from propagating further\n          event.stopPropagation();\n        }}\n      >\n        {actions}\n      </MenuButtons>\n    );\n  }\n\n  renderMenu() {\n    const {isOpen} = this.state;\n\n    const menuButtons = this.renderMenuButtons();\n\n    if (menuButtons === null) {\n      // do not render the menu if there are no per cell actions\n      return null;\n    }\n\n    const modifiers: PopperJS.Modifiers = {\n      hide: {\n        enabled: false,\n      },\n      preventOverflow: {\n        padding: 10,\n        enabled: true,\n        boundariesElement: 'viewport',\n      },\n    };\n    let menu: React.ReactPortal | null = null;\n\n    if (isOpen) {\n      menu = ReactDOM.createPortal(\n        <Popper placement=\"top\" modifiers={modifiers}>\n          {({ref: popperRef, style, placement, arrowProps}) => (\n            <Menu\n              ref={ref => {\n                (popperRef as Function)(ref);\n                this.menuEl = ref;\n              }}\n              style={style}\n            >\n              <MenuArrow\n                ref={arrowProps.ref}\n                data-placement={placement}\n                style={arrowProps.style}\n              />\n              {menuButtons}\n            </Menu>\n          )}\n        </Popper>,\n        this.portalEl\n      );\n    }\n\n    return (\n      <MenuRoot>\n        <Manager>\n          <Reference>\n            {({ref}) => (\n              <MenuButton ref={ref} onClick={this.handleMenuToggle}>\n                <IconEllipsis size=\"sm\" data-test-id=\"cell-action\" color=\"blue300\" />\n              </MenuButton>\n            )}\n          </Reference>\n          {menu}\n        </Manager>\n      </MenuRoot>\n    );\n  }\n\n  render() {\n    const {children} = this.props;\n    const {isHovering} = this.state;\n\n    return (\n      <Container\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {children}\n        {isHovering && this.renderMenu()}\n      </Container>\n    );\n  }\n}\n\nexport default CellAction;\n\nconst Container = styled('div')`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst MenuRoot = styled('div')`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst Menu = styled('div')`\n  margin: ${space(1)} 0;\n\n  z-index: ${p => p.theme.zIndex.tooltip};\n`;\n\nconst MenuButtons = styled('div')`\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: ${p => p.theme.dropShadowHeavy};\n  overflow: hidden;\n`;\n\nconst MenuArrow = styled('span')`\n  position: absolute;\n  width: 18px;\n  height: 9px;\n  /* left and top set by popper */\n\n  &[data-placement*='bottom'] {\n    margin-top: -9px;\n    &::before {\n      border-width: 0 9px 9px 9px;\n      border-color: transparent transparent ${p => p.theme.border} transparent;\n    }\n    &::after {\n      top: 1px;\n      left: 1px;\n      border-width: 0 8px 8px 8px;\n      border-color: transparent transparent ${p => p.theme.background} transparent;\n    }\n  }\n  &[data-placement*='top'] {\n    margin-bottom: -8px;\n    bottom: 0;\n    &::before {\n      border-width: 9px 9px 0 9px;\n      border-color: ${p => p.theme.border} transparent transparent transparent;\n    }\n    &::after {\n      bottom: 1px;\n      left: 1px;\n      border-width: 8px 8px 0 8px;\n      border-color: ${p => p.theme.background} transparent transparent transparent;\n    }\n  }\n\n  &::before,\n  &::after {\n    width: 0;\n    height: 0;\n    content: '';\n    display: block;\n    position: absolute;\n    border-style: solid;\n  }\n`;\n\nconst ActionItem = styled('button')`\n  display: block;\n  width: 100%;\n  padding: ${space(1)} ${space(2)};\n  background: transparent;\n\n  outline: none;\n  border: 0;\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-align: left;\n  line-height: 1.2;\n\n  &:hover {\n    background: ${p => p.theme.backgroundSecondary};\n  }\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst MenuButton = styled('button')`\n  display: flex;\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  justify-content: center;\n  align-items: center;\n\n  background: ${p => color(p.theme.background).alpha(0.85).string()};\n  border-radius: ${p => p.theme.borderRadius};\n  border: 1px solid ${p => p.theme.border};\n  cursor: pointer;\n  outline: none;\n`;\n"],"names":["SortLink","React","renderArrow","direction","this","props","StyledIconArrow","size","render","align","title","canSort","generateSortLink","onClick","target","StyledLink","to","StyledNonLink","forwardProps","omit","p","IconArrow","Actions","updateQuery","results","action","column","value","key","name","type","getDuration","Array","isArray","Set","length","ADD","removeFilterValue","addFilterValues","removeFilter","currentFilters","getFilterValues","String","setFilterValues","EXCLUDE","negation","currentNegations","SHOW_GREATER_THAN","SHOW_LESS_THAN","TRANSACTION","RELEASE","DRILLDOWN","Error","CellAction","constructor","super","isHovering","isOpen","event","menuEl","Element","contains","setState","state","preventDefault","portal","document","getElementById","createElement","setAttribute","body","appendChild","portalEl","componentDidUpdate","_props","prevState","addEventListener","handleClickOutside","removeEventListener","componentWillUnmount","renderMenuButtons","dataRow","handleCellAction","allowActions","isRelativeSpanOperationBreakdownField","isEquationAlias","getAggregateAlias","kind","field","actions","addMenuItem","menuItem","includes","push","ActionItem","t","function","defined","project_threshold_config","EDIT_THRESHOLD","tct","threshold","MenuButtons","stopPropagation","renderMenu","menuButtons","menu","ReactDOM","placement","modifiers","hide","enabled","preventOverflow","padding","boundariesElement","ref","popperRef","style","arrowProps","Menu","MenuArrow","MenuRoot","MenuButton","handleMenuToggle","color","children","Container","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","space","theme","zIndex","tooltip","background","border","borderRadius","dropShadowHeavy","innerBorder","fontSizeMedium","backgroundSecondary","alpha","string"],"sourceRoot":""}