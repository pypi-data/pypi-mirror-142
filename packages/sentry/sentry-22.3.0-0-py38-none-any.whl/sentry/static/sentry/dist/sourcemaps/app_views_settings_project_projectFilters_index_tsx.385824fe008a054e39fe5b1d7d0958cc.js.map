{"version":3,"file":"chunks/app_views_settings_project_projectFilters_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/data/forms/inboundFilters.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectFilters/groupTombstones.tsx","webpack:///./app/views/settings/project/projectFilters/projectFiltersChart.tsx","webpack:///./app/views/settings/project/projectFilters/projectFiltersSettings.tsx","webpack:///./app/views/settings/project/projectFilters/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\n\nimport {ButtonProps} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\n\ntype Props = {\n  message: React.ReactNode;\n  onConfirm: () => void;\n  title: string;\n  className?: string;\n  disabled?: boolean;\n  priority?: ButtonProps['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nclass LinkWithConfirmation extends React.PureComponent<Props> {\n  render() {\n    const {className, disabled, title, children, ...otherProps} = this.props;\n    return (\n      <Confirm {...otherProps} disabled={disabled}>\n        <a href=\"#\" className={classNames(className || '', {disabled})} title={title}>\n          {children}\n        </a>\n      </Confirm>\n    );\n  }\n}\n\nexport default LinkWithConfirmation;\n","import {Fragment} from 'react';\n\nimport {Field, JsonFormObject} from 'sentry/components/forms/type';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/filters/';\n\nconst newLineHelpText = t('Separate multiple entries with a newline.');\nconst globHelpText = tct('Allows [link:glob pattern matching].', {\n  link: <ExternalLink href=\"https://en.wikipedia.org/wiki/Glob_(programming)\" />,\n});\n\nconst getOptionsData = (data: object) => ({options: data});\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Custom Filters'),\n    fields: [\n      {\n        name: 'filters:blacklisted_ips',\n        type: 'string',\n        multiline: true,\n        autosize: true,\n        rows: 1,\n        maxRows: 10,\n\n        placeholder: 'e.g. 127.0.0.1 or 10.0.0.0/8',\n        label: t('IP Addresses'),\n        help: (\n          <Fragment>\n            {t('Filter events from these IP addresses. ')}\n            {newLineHelpText}\n          </Fragment>\n        ),\n        getData: getOptionsData,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n\n// These require a feature flag\nexport const customFilterFields: Field[] = [\n  {\n    name: 'filters:releases',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    rows: 1,\n\n    placeholder: 'e.g. 1.* or [!3].[0-9].*',\n    label: t('Releases'),\n    help: (\n      <Fragment>\n        {t('Filter events from these releases. ')}\n        {newLineHelpText} {globHelpText}\n      </Fragment>\n    ),\n    getData: getOptionsData,\n  },\n\n  {\n    name: 'filters:error_messages',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    rows: 1,\n\n    placeholder: 'e.g. TypeError* or *: integer division or modulo by zero',\n    label: t('Error Message'),\n    help: (\n      <Fragment>\n        {t('Filter events by error messages. ')}\n        {newLineHelpText} {globHelpText}\n      </Fragment>\n    ),\n    getData: getOptionsData,\n  },\n];\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport {RouteWithName} from 'sentry/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: RouteWithName[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import * as React from 'react';\n\nimport Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Avatar from 'sentry/components/avatar';\nimport EventOrGroupHeader from 'sentry/components/eventOrGroupHeader';\nimport LinkWithConfirmation from 'sentry/components/links/linkWithConfirmation';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelItem} from 'sentry/components/panels';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {GroupTombstone} from 'sentry/types';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\ntype RowProps = {\n  data: GroupTombstone;\n  onUndiscard: (id: string) => void;\n};\n\nfunction GroupTombstoneRow({data, onUndiscard}: RowProps) {\n  const actor = data.actor;\n\n  return (\n    <PanelItem center>\n      <StyledBox>\n        <EventOrGroupHeader\n          includeLink={false}\n          hideIcons\n          className=\"truncate\"\n          size=\"normal\"\n          data={data}\n        />\n      </StyledBox>\n      <AvatarContainer>\n        {actor && (\n          <Avatar\n            user={actor}\n            hasTooltip\n            tooltip={t('Discarded by %s', actor.name || actor.email)}\n          />\n        )}\n      </AvatarContainer>\n      <ActionContainer>\n        <Tooltip title={t('Undiscard')}>\n          <LinkWithConfirmation\n            title={t('Undiscard')}\n            className=\"group-remove btn btn-default btn-sm\"\n            message={t(\n              'Undiscarding this issue means that ' +\n                'incoming events that match this will no longer be discarded. ' +\n                'New incoming events will count toward your event quota ' +\n                'and will display on your issues dashboard. ' +\n                'Are you sure you wish to continue?'\n            )}\n            onConfirm={() => {\n              onUndiscard(data.id);\n            }}\n          >\n            <IconDelete className=\"undiscard\" />\n          </LinkWithConfirmation>\n        </Tooltip>\n      </ActionContainer>\n    </PanelItem>\n  );\n}\n\ntype Props = AsyncComponent['props'] & {\n  orgId: string;\n  projectId: string;\n};\n\ntype State = {\n  tombstones: GroupTombstone[];\n  tombstonesPageLinks: null | string;\n} & AsyncComponent['state'];\n\nclass GroupTombstones extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props;\n    return [\n      ['tombstones', `/projects/${orgId}/${projectId}/tombstones/`, {}, {paginate: true}],\n    ];\n  }\n\n  handleUndiscard = (tombstoneId: GroupTombstone['id']) => {\n    const {orgId, projectId} = this.props;\n    const path = `/projects/${orgId}/${projectId}/tombstones/${tombstoneId}/`;\n    this.api\n      .requestPromise(path, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        addSuccessMessage(t('Events similar to these will no longer be filtered'));\n        this.fetchData();\n      })\n      .catch(() => {\n        addErrorMessage(t('We were unable to undiscard this issue'));\n        this.fetchData();\n      });\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage>{t('You have no discarded issues')}</EmptyMessage>\n      </Panel>\n    );\n  }\n\n  renderBody() {\n    const {tombstones, tombstonesPageLinks} = this.state;\n\n    return tombstones.length ? (\n      <Fragment>\n        <Panel>\n          {tombstones.map(data => (\n            <GroupTombstoneRow\n              key={data.id}\n              data={data}\n              onUndiscard={this.handleUndiscard}\n            />\n          ))}\n        </Panel>\n        {tombstonesPageLinks && <Pagination pageLinks={tombstonesPageLinks} />}\n      </Fragment>\n    ) : (\n      this.renderEmpty()\n    );\n  }\n}\n\nconst StyledBox = styled('div')`\n  flex: 1;\n  align-items: center;\n  min-width: 0; /* keep child content from stretching flex item */\n`;\n\nconst AvatarContainer = styled('div')`\n  margin: 0 ${space(4)};\n  width: ${space(3)};\n`;\n\nconst ActionContainer = styled('div')`\n  width: ${space(4)};\n`;\n\nexport default GroupTombstones;\n","import {Component} from 'react';\n\nimport {Client} from 'sentry/api';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport theme from 'sentry/utils/theme';\nimport withApi from 'sentry/utils/withApi';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\ntype Props = {\n  api: Client;\n  params: {orgId: string; projectId: string};\n  project: Project;\n};\n\ntype State = {\n  blankStats: boolean;\n  error: boolean;\n  formattedData: Series[];\n  loading: boolean;\n  statsError: boolean;\n};\n\ntype RawStats = Record<string, [timestamp: number, value: number][]>;\n\nconst STAT_OPS = {\n  'browser-extensions': {title: t('Browser Extension'), color: theme.gray200},\n  cors: {title: 'CORS', color: theme.yellow300},\n  'error-message': {title: t('Error Message'), color: theme.purple300},\n  'discarded-hash': {title: t('Discarded Issue'), color: theme.gray200},\n  'invalid-csp': {title: t('Invalid CSP'), color: theme.blue300},\n  'ip-address': {title: t('IP Address'), color: theme.red200},\n  'legacy-browsers': {title: t('Legacy Browser'), color: theme.gray200},\n  localhost: {title: t('Localhost'), color: theme.blue300},\n  'release-version': {title: t('Release'), color: theme.purple200},\n  'web-crawlers': {title: t('Web Crawler'), color: theme.red300},\n};\n\nclass ProjectFiltersChart extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    statsError: false,\n    formattedData: [],\n    blankStats: true,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.project !== this.props.project) {\n      this.fetchData();\n    }\n  }\n\n  formatData(rawData: RawStats) {\n    const seriesWithData: Set<string> = new Set();\n    const transformed = Object.keys(STAT_OPS).map(stat => ({\n      data: rawData[stat].map(([timestamp, value]) => {\n        if (value > 0) {\n          seriesWithData.add(STAT_OPS[stat].title);\n          this.setState({blankStats: false});\n        }\n        return {name: timestamp * 1000, value};\n      }),\n      seriesName: STAT_OPS[stat].title,\n      color: STAT_OPS[stat].color,\n    }));\n\n    return transformed.filter((series: Series) => seriesWithData.has(series.seriesName));\n  }\n\n  getFilterStats() {\n    const statOptions = Object.keys(STAT_OPS);\n    const {project} = this.props;\n    const {orgId} = this.props.params;\n\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    const statEndpoint = `/projects/${orgId}/${project.slug}/stats/`;\n    const query = {\n      since,\n      until,\n      resolution: '1d',\n    };\n    const requests = statOptions.map(stat =>\n      this.props.api.requestPromise(statEndpoint, {\n        query: Object.assign({stat}, query),\n      })\n    );\n    Promise.all(requests)\n      .then(results => {\n        const rawStatsData: RawStats = {};\n        for (let i = 0; i < statOptions.length; i++) {\n          rawStatsData[statOptions[i]] = results[i];\n        }\n\n        this.setState({\n          formattedData: this.formatData(rawStatsData),\n          error: false,\n          loading: false,\n        });\n      })\n      .catch(() => {\n        this.setState({error: true, loading: false});\n      });\n  }\n\n  fetchData = () => {\n    this.getFilterStats();\n  };\n\n  render() {\n    const {loading, error, formattedData} = this.state;\n    const isLoading = loading || !formattedData;\n    const hasError = !isLoading && error;\n    const hasLoaded = !isLoading && !error;\n    const colors = formattedData\n      ? formattedData.map(series => series.color || theme.gray200)\n      : undefined;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Errors filtered in the last 30 days (by day)')}</PanelHeader>\n\n        <PanelBody withPadding>\n          {isLoading && <Placeholder height=\"100px\" />}\n          {hasError && <LoadingError onRetry={this.fetchData} />}\n          {hasLoaded && !this.state.blankStats && (\n            <MiniBarChart\n              series={formattedData}\n              colors={colors}\n              height={100}\n              isGroupedByDate\n              stacked\n              labelYAxisExtents\n            />\n          )}\n          {hasLoaded && this.state.blankStats && (\n            <EmptyMessage\n              title={t('Nothing filtered in the last 30 days.')}\n              description={t(\n                'Issues filtered as a result of your settings below will be shown here.'\n              )}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport {ProjectFiltersChart};\n\nexport default withApi(ProjectFiltersChart);\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport ProjectActions from 'sentry/actions/projectActions';\nimport Access from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport Form from 'sentry/components/forms/form';\nimport FormField from 'sentry/components/forms/formField';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport Switch from 'sentry/components/switchButton';\nimport filterGroups, {customFilterFields} from 'sentry/data/forms/inboundFilters';\nimport {t} from 'sentry/locale';\nimport HookStore from 'sentry/stores/hookStore';\nimport {Project} from 'sentry/types';\n\nconst LEGACY_BROWSER_SUBFILTERS = {\n  ie_pre_9: {\n    icon: 'internet-explorer',\n    helpText: 'Version 8 and lower',\n    title: 'Internet Explorer',\n  },\n  ie9: {\n    icon: 'internet-explorer',\n    helpText: 'Version 9',\n    title: 'Internet Explorer',\n  },\n  ie10: {\n    icon: 'internet-explorer',\n    helpText: 'Version 10',\n    title: 'Internet Explorer',\n  },\n  ie11: {\n    icon: 'internet-explorer',\n    helpText: 'Version 11',\n    title: 'Internet Explorer',\n  },\n  safari_pre_6: {\n    icon: 'safari',\n    helpText: 'Version 5 and lower',\n    title: 'Safari',\n  },\n  opera_pre_15: {\n    icon: 'opera',\n    helpText: 'Version 14 and lower',\n    title: 'Opera',\n  },\n  opera_mini_pre_8: {\n    icon: 'opera',\n    helpText: 'Version 8 and lower',\n    title: 'Opera Mini',\n  },\n  android_pre_4: {\n    icon: 'android',\n    helpText: 'Version 3 and lower',\n    title: 'Android',\n  },\n};\n\nconst LEGACY_BROWSER_KEYS = Object.keys(LEGACY_BROWSER_SUBFILTERS);\n\ntype FormFieldProps = React.ComponentProps<typeof FormField>;\n\ntype RowProps = {\n  data: {\n    active: string[] | boolean;\n  };\n  onToggle: (\n    data: RowProps['data'],\n    filters: RowState['subfilters'],\n    event: React.MouseEvent\n  ) => void;\n  disabled?: boolean;\n};\n\ntype RowState = {\n  error: boolean | Error;\n  loading: boolean;\n  subfilters: Set<string>;\n};\n\nclass LegacyBrowserFilterRow extends React.Component<RowProps, RowState> {\n  constructor(props) {\n    super(props);\n    let initialSubfilters;\n    if (props.data.active === true) {\n      initialSubfilters = new Set(LEGACY_BROWSER_KEYS);\n    } else if (props.data.active === false) {\n      initialSubfilters = new Set();\n    } else {\n      initialSubfilters = new Set(props.data.active);\n    }\n\n    this.state = {\n      loading: false,\n      error: false,\n      subfilters: initialSubfilters,\n    };\n  }\n\n  handleToggleSubfilters = (subfilter, e) => {\n    let {subfilters} = this.state;\n\n    if (subfilter === true) {\n      subfilters = new Set(LEGACY_BROWSER_KEYS);\n    } else if (subfilter === false) {\n      subfilters = new Set();\n    } else if (subfilters.has(subfilter)) {\n      subfilters.delete(subfilter);\n    } else {\n      subfilters.add(subfilter);\n    }\n\n    this.setState(\n      {\n        subfilters: new Set(subfilters),\n      },\n      () => {\n        this.props.onToggle(this.props.data, subfilters, e);\n      }\n    );\n  };\n\n  render() {\n    const {disabled} = this.props;\n    return (\n      <div>\n        {!disabled && (\n          <BulkFilter>\n            <BulkFilterLabel>{t('Filter')}:</BulkFilterLabel>\n            <BulkFilterItem onClick={this.handleToggleSubfilters.bind(this, true)}>\n              {t('All')}\n            </BulkFilterItem>\n            <BulkFilterItem onClick={this.handleToggleSubfilters.bind(this, false)}>\n              {t('None')}\n            </BulkFilterItem>\n          </BulkFilter>\n        )}\n\n        <FilterGrid>\n          {LEGACY_BROWSER_KEYS.map(key => {\n            const subfilter = LEGACY_BROWSER_SUBFILTERS[key];\n            return (\n              <FilterGridItemWrapper key={key}>\n                <FilterGridItem>\n                  <FilterItem>\n                    <FilterGridIcon className={`icon-${subfilter.icon}`} />\n                    <div>\n                      <FilterTitle>{subfilter.title}</FilterTitle>\n                      <FilterDescription>{subfilter.helpText}</FilterDescription>\n                    </div>\n                  </FilterItem>\n\n                  <Switch\n                    isActive={this.state.subfilters.has(key)}\n                    isDisabled={disabled}\n                    css={{flexShrink: 0, marginLeft: 6}}\n                    toggle={this.handleToggleSubfilters.bind(this, key)}\n                    size=\"lg\"\n                  />\n                </FilterGridItem>\n              </FilterGridItemWrapper>\n            );\n          })}\n        </FilterGrid>\n      </div>\n    );\n  }\n}\n\ntype Props = {\n  features: Set<string>;\n  params: {\n    orgId: string;\n    projectId: string;\n  };\n  project: Project;\n};\n\ntype State = {\n  hooksDisabled: ReturnType<typeof HookStore['get']>;\n} & AsyncComponent['state'];\n\nclass ProjectFiltersSettings extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      hooksDisabled: HookStore.get('feature-disabled:custom-inbound-filters'),\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['filterList', `/projects/${orgId}/${projectId}/filters/`]];\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.project.slug !== this.props.project.slug) {\n      this.reloadData();\n    }\n    super.componentDidUpdate(prevProps, prevState);\n  }\n\n  handleLegacyChange = (\n    onChange: FormFieldProps['onChange'],\n    onBlur: FormFieldProps['onBlur'],\n    _filter,\n    subfilters: RowState['subfilters'],\n    e: React.MouseEvent\n  ) => {\n    onChange?.(subfilters, e);\n    onBlur?.(subfilters, e);\n  };\n\n  handleSubmit = (response: Project) => {\n    // This will update our project context\n    ProjectActions.updateSuccess(response);\n  };\n\n  renderDisabledCustomFilters = p => (\n    <FeatureDisabled\n      featureName={t('Custom Inbound Filters')}\n      features={p.features}\n      alert={PanelAlert}\n      message={t(\n        'Release and Error Message filtering are not enabled on your Sentry installation'\n      )}\n    />\n  );\n\n  renderCustomFilters = (disabled: boolean) => () =>\n    (\n      <Feature\n        features={['projects:custom-inbound-filters']}\n        hookName=\"feature-disabled:custom-inbound-filters\"\n        renderDisabled={({children, ...props}) => {\n          if (typeof children === 'function') {\n            return children({...props, renderDisabled: this.renderDisabledCustomFilters});\n          }\n          return null;\n        }}\n      >\n        {({hasFeature, organization, renderDisabled, ...featureProps}) => (\n          <React.Fragment>\n            {!hasFeature &&\n              typeof renderDisabled === 'function' &&\n              // XXX: children is set to null as we're doing tricksy things\n              // in the renderDisabled prop a few lines higher.\n              renderDisabled({organization, hasFeature, children: null, ...featureProps})}\n\n            {customFilterFields.map(field => (\n              <FieldFromConfig\n                key={field.name}\n                field={field}\n                disabled={disabled || !hasFeature}\n              />\n            ))}\n\n            {hasFeature && this.props.project.options?.['filters:error_messages'] && (\n              <PanelAlert type=\"warning\" data-test-id=\"error-message-disclaimer\">\n                {t(\n                  \"Minidumps, errors in the minified production build of React, and Internet Explorer's i18n errors cannot be filtered by message.\"\n                )}\n              </PanelAlert>\n            )}\n          </React.Fragment>\n        )}\n      </Feature>\n    );\n\n  renderBody() {\n    const {features, params, project} = this.props;\n    const {orgId, projectId} = params;\n\n    const projectEndpoint = `/projects/${orgId}/${projectId}/`;\n    const filtersEndpoint = `${projectEndpoint}filters/`;\n\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <React.Fragment>\n            <Panel>\n              <PanelHeader>{t('Filters')}</PanelHeader>\n              <PanelBody>\n                {this.state.filterList.map(filter => {\n                  const fieldProps = {\n                    name: filter.id,\n                    label: filter.name,\n                    help: filter.description,\n                    disabled: !hasAccess,\n                  };\n\n                  // Note by default, forms generate data in the format of:\n                  // { [fieldName]: [value] }\n                  // Endpoints for these filters expect data to be:\n                  // { 'active': [value] }\n                  return (\n                    <PanelItem key={filter.id} noPadding>\n                      <NestedForm\n                        apiMethod=\"PUT\"\n                        apiEndpoint={`${filtersEndpoint}${filter.id}/`}\n                        initialData={{[filter.id]: filter.active}}\n                        saveOnBlur\n                      >\n                        {filter.id !== 'legacy-browsers' ? (\n                          <FieldFromConfig\n                            key={filter.id}\n                            getData={data => ({active: data[filter.id]})}\n                            field={{\n                              type: 'boolean',\n                              ...fieldProps,\n                            }}\n                          />\n                        ) : (\n                          <FormField\n                            inline={false}\n                            {...fieldProps}\n                            getData={data => ({subfilters: [...data[filter.id]]})}\n                          >\n                            {({onChange, onBlur}) => (\n                              <LegacyBrowserFilterRow\n                                key={filter.id}\n                                data={filter}\n                                disabled={!hasAccess}\n                                onToggle={this.handleLegacyChange.bind(\n                                  this,\n                                  onChange,\n                                  onBlur\n                                )}\n                              />\n                            )}\n                          </FormField>\n                        )}\n                      </NestedForm>\n                    </PanelItem>\n                  );\n                })}\n              </PanelBody>\n            </Panel>\n\n            <Form\n              apiMethod=\"PUT\"\n              apiEndpoint={projectEndpoint}\n              initialData={project.options}\n              saveOnBlur\n              onSubmitSuccess={this.handleSubmit}\n            >\n              <JsonForm\n                features={features}\n                forms={filterGroups}\n                disabled={!hasAccess}\n                renderFooter={this.renderCustomFilters(!hasAccess)}\n              />\n            </Form>\n          </React.Fragment>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default ProjectFiltersSettings;\n\n// TODO(ts): Understand why styled is not correctly inheriting props here\nconst NestedForm = styled(Form)<Form['props']>`\n  flex: 1;\n`;\n\nconst FilterGrid = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst FilterGridItem = styled('div')`\n  display: flex;\n  align-items: center;\n  background: ${p => p.theme.backgroundSecondary};\n  border-radius: 3px;\n  flex: 1;\n  padding: 12px;\n  height: 100%;\n`;\n\n// We want this wrapper to maining 30% width\nconst FilterGridItemWrapper = styled('div')`\n  padding: 12px;\n  width: 50%;\n`;\n\nconst FilterItem = styled('div')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n`;\n\nconst FilterGridIcon = styled('div')`\n  width: 38px;\n  height: 38px;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 38px 38px;\n  margin-right: 6px;\n  flex-shrink: 0;\n`;\n\nconst FilterTitle = styled('div')`\n  font-size: 14px;\n  font-weight: bold;\n  line-height: 1;\n  white-space: nowrap;\n`;\n\nconst FilterDescription = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: 12px;\n  line-height: 1;\n  white-space: nowrap;\n`;\n\nconst BulkFilter = styled('div')`\n  text-align: right;\n  padding: 0 12px;\n`;\n\nconst BulkFilterLabel = styled('span')`\n  font-weight: bold;\n  margin-right: 6px;\n`;\n\nconst BulkFilterItem = styled('a')`\n  border-right: 1px solid #f1f2f3;\n  margin-right: 6px;\n  padding-right: 6px;\n\n  &:last-child {\n    border-right: none;\n    margin-right: 0;\n  }\n`;\n","import {Component, Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport Link from 'sentry/components/links/link';\nimport NavTabs from 'sentry/components/navTabs';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport GroupTombstones from 'sentry/views/settings/project/projectFilters/groupTombstones';\nimport ProjectFiltersChart from 'sentry/views/settings/project/projectFilters/projectFiltersChart';\nimport ProjectFiltersSettings from 'sentry/views/settings/project/projectFilters/projectFiltersSettings';\n\ntype Props = {\n  project: Project;\n} & RouteComponentProps<{filterType: string; orgId: string; projectId: string}, {}>;\n\nclass ProjectFilters extends Component<Props> {\n  render() {\n    const {project, params, location} = this.props;\n    const {orgId, projectId, filterType} = params;\n    if (!project) {\n      return null;\n    }\n\n    const features = new Set(project.features);\n\n    return (\n      <Fragment>\n        <SentryDocumentTitle title={t('Inbound Filters')} projectSlug={projectId} />\n        <SettingsPageHeader title={t('Inbound Data Filters')} />\n        <PermissionAlert />\n\n        <TextBlock>\n          {t(\n            'Filters allow you to prevent Sentry from storing events in certain situations. Filtered events are tracked separately from rate limits, and do not apply to any project quotas.'\n          )}\n        </TextBlock>\n\n        <div>\n          <ProjectFiltersChart project={project} params={this.props.params} />\n\n          {features.has('discard-groups') && (\n            <NavTabs underlined style={{paddingTop: '30px'}}>\n              <li className={filterType === 'data-filters' ? 'active' : ''}>\n                <Link to={recreateRoute('data-filters/', {...this.props, stepBack: -1})}>\n                  {t('Data Filters')}\n                </Link>\n              </li>\n              <li className={filterType === 'discarded-groups' ? 'active' : ''}>\n                <Link\n                  to={recreateRoute('discarded-groups/', {...this.props, stepBack: -1})}\n                >\n                  {t('Discarded Issues')}\n                </Link>\n              </li>\n            </NavTabs>\n          )}\n\n          {filterType === 'discarded-groups' ? (\n            <GroupTombstones orgId={orgId} projectId={project.slug} location={location} />\n          ) : (\n            <ProjectFiltersSettings\n              project={project}\n              params={this.props.params}\n              features={features}\n            />\n          )}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default ProjectFilters;\n"],"names":["LinkWithConfirmation","React","render","className","disabled","title","children","otherProps","this","props","href","classNames","route","newLineHelpText","t","globHelpText","tct","link","getOptionsData","data","options","fields","name","type","multiline","autosize","rows","maxRows","placeholder","label","help","Fragment","getData","customFilterFields","recreateRoute","to","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","PermissionAlert","access","hasAccess","icon","size","GroupTombstoneRow","onUndiscard","actor","center","StyledBox","includeLink","hideIcons","AvatarContainer","user","hasTooltip","tooltip","email","ActionContainer","message","onConfirm","id","GroupTombstones","AsyncComponent","tombstoneId","orgId","projectId","api","requestPromise","method","then","addSuccessMessage","fetchData","catch","addErrorMessage","getEndpoints","paginate","renderEmpty","renderBody","tombstones","tombstonesPageLinks","state","length","handleUndiscard","pageLinks","space","STAT_OPS","color","theme","cors","localhost","ProjectFiltersChart","Component","loading","error","statsError","formattedData","blankStats","getFilterStats","componentDidMount","componentDidUpdate","prevProps","project","formatData","rawData","seriesWithData","Set","Object","keys","stat","timestamp","value","add","setState","seriesName","filter","series","has","statOptions","until","Math","floor","Date","getTime","since","statEndpoint","slug","query","resolution","requests","assign","Promise","all","results","rawStatsData","i","isLoading","hasError","hasLoaded","colors","undefined","withPadding","height","onRetry","isGroupedByDate","stacked","labelYAxisExtents","description","withApi","LEGACY_BROWSER_SUBFILTERS","ie_pre_9","helpText","ie9","ie10","ie11","safari_pre_6","opera_pre_15","opera_mini_pre_8","android_pre_4","LEGACY_BROWSER_KEYS","LegacyBrowserFilterRow","constructor","initialSubfilters","super","subfilter","e","subfilters","delete","onToggle","active","BulkFilter","BulkFilterLabel","BulkFilterItem","onClick","handleToggleSubfilters","bind","FilterGrid","key","FilterGridItemWrapper","FilterGridItem","FilterItem","FilterGridIcon","FilterTitle","FilterDescription","isActive","isDisabled","css","toggle","ProjectFiltersSettings","onChange","onBlur","_filter","response","ProjectActions","p","featureName","features","alert","PanelAlert","hookName","renderDisabled","renderDisabledCustomFilters","hasFeature","organization","featureProps","field","getDefaultState","hooksDisabled","HookStore","prevState","reloadData","projectEndpoint","filtersEndpoint","filterList","fieldProps","noPadding","NestedForm","apiMethod","apiEndpoint","initialData","saveOnBlur","inline","handleLegacyChange","onSubmitSuccess","handleSubmit","forms","filterGroups","renderFooter","renderCustomFilters","Form","backgroundSecondary","subText","ProjectFilters","filterType","projectSlug","underlined","style","paddingTop"],"sourceRoot":""}