{"version":3,"file":"chunks/app_views_settings_project_projectOwnership_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectOwnership/addCodeOwnerModal.tsx","webpack:///./app/views/settings/project/projectOwnership/rulesPanel.tsx","webpack:///./app/views/settings/project/projectOwnership/codeowners.tsx","webpack:///./app/views/settings/project/projectOwnership/index.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import * as React from 'react';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\n\nimport Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon={<IconWarning size=\"xs\" />} {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport Form from 'sentry/components/forms/form';\nimport SelectField from 'sentry/components/forms/selectField';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {IconCheckmark, IconNot} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  CodeOwner,\n  CodeownersFile,\n  Integration,\n  Organization,\n  Project,\n  RepositoryProjectPathConfig,\n} from 'sentry/types';\nimport {getIntegrationIcon} from 'sentry/utils/integrationUtil';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  codeMappings: RepositoryProjectPathConfig[];\n  integrations: Integration[];\n  onSave: (data: CodeOwner) => void;\n  organization: Organization;\n  project: Project;\n} & ModalRenderProps;\n\ntype State = {\n  codeMappingId: string | null;\n  codeownersFile: CodeownersFile | null;\n  error: boolean;\n  errorJSON: {raw?: string} | null;\n  isLoading: boolean;\n};\n\nclass AddCodeOwnerModal extends Component<Props, State> {\n  state: State = {\n    codeownersFile: null,\n    codeMappingId: null,\n    isLoading: false,\n    error: false,\n    errorJSON: null,\n  };\n\n  fetchFile = async (codeMappingId: string) => {\n    const {organization} = this.props;\n    this.setState({\n      codeMappingId,\n      codeownersFile: null,\n      error: false,\n      errorJSON: null,\n      isLoading: true,\n    });\n    try {\n      const data: CodeownersFile = await this.props.api.requestPromise(\n        `/organizations/${organization.slug}/code-mappings/${codeMappingId}/codeowners/`,\n        {\n          method: 'GET',\n        }\n      );\n      this.setState({codeownersFile: data, isLoading: false});\n    } catch (_err) {\n      this.setState({isLoading: false});\n    }\n  };\n\n  addFile = async () => {\n    const {organization, project, codeMappings} = this.props;\n    const {codeownersFile, codeMappingId} = this.state;\n\n    if (codeownersFile) {\n      const postData: {\n        codeMappingId: string | null;\n        raw: string;\n      } = {\n        codeMappingId,\n        raw: codeownersFile.raw,\n      };\n\n      try {\n        const data = await this.props.api.requestPromise(\n          `/projects/${organization.slug}/${project.slug}/codeowners/`,\n          {\n            method: 'POST',\n            data: postData,\n          }\n        );\n        const codeMapping = codeMappings.find(\n          mapping => mapping.id === codeMappingId?.toString()\n        );\n        this.handleAddedFile({...data, codeMapping});\n      } catch (err) {\n        if (err.responseJSON.raw) {\n          this.setState({error: true, errorJSON: err.responseJSON, isLoading: false});\n        } else {\n          addErrorMessage(t(Object.values(err.responseJSON).flat().join(' ')));\n        }\n      }\n    }\n  };\n\n  handleAddedFile(data: CodeOwner) {\n    this.props.onSave(data);\n    this.props.closeModal();\n  }\n\n  sourceFile(codeownersFile: CodeownersFile) {\n    return (\n      <Panel>\n        <SourceFileBody>\n          <IconCheckmark size=\"md\" isCircled color=\"green200\" />\n          {codeownersFile.filepath}\n          <Button size=\"small\" href={codeownersFile.html_url} target=\"_blank\">\n            {t('Preview File')}\n          </Button>\n        </SourceFileBody>\n      </Panel>\n    );\n  }\n\n  errorMessage(baseUrl) {\n    const {errorJSON, codeMappingId} = this.state;\n    const {codeMappings} = this.props;\n    const codeMapping = codeMappings.find(mapping => mapping.id === codeMappingId);\n    const {integrationId, provider} = codeMapping as RepositoryProjectPathConfig;\n    const errActors = errorJSON?.raw?.[0].split('\\n').map((el, i) => <p key={i}>{el}</p>);\n    return (\n      <Alert type=\"error\" icon={<IconNot size=\"md\" />}>\n        {errActors}\n        {codeMapping && (\n          <p>\n            {tct(\n              'Configure [userMappingsLink:User Mappings] or [teamMappingsLink:Team Mappings] for any missing associations.',\n              {\n                userMappingsLink: (\n                  <Link\n                    to={`${baseUrl}/${provider?.key}/${integrationId}/?tab=userMappings&referrer=add-codeowners`}\n                  />\n                ),\n                teamMappingsLink: (\n                  <Link\n                    to={`${baseUrl}/${provider?.key}/${integrationId}/?tab=teamMappings&referrer=add-codeowners`}\n                  />\n                ),\n              }\n            )}\n          </p>\n        )}\n        {tct(\n          '[addAndSkip:Add and Skip Missing Associations] will add your codeowner file and skip any rules that having missing associations. You can add associations later for any skipped rules.',\n          {addAndSkip: <strong>Add and Skip Missing Associations</strong>}\n        )}\n      </Alert>\n    );\n  }\n\n  noSourceFile() {\n    const {codeMappingId, isLoading} = this.state;\n    if (isLoading) {\n      return (\n        <Container>\n          <LoadingIndicator mini />\n        </Container>\n      );\n    }\n    if (!codeMappingId) {\n      return null;\n    }\n    return (\n      <Panel>\n        <NoSourceFileBody>\n          {codeMappingId ? (\n            <Fragment>\n              <IconNot size=\"md\" color=\"red200\" />\n              {t('No codeowner file found.')}\n            </Fragment>\n          ) : null}\n        </NoSourceFileBody>\n      </Panel>\n    );\n  }\n\n  render() {\n    const {Header, Body, Footer} = this.props;\n    const {codeownersFile, error, errorJSON} = this.state;\n    const {codeMappings, integrations, organization} = this.props;\n    const baseUrl = `/settings/${organization.slug}/integrations`;\n\n    return (\n      <Fragment>\n        <Header closeButton>{t('Add Code Owner File')}</Header>\n        <Body>\n          {!codeMappings.length && (\n            <Fragment>\n              <div>\n                {t(\n                  \"Configure code mapping to add your CODEOWNERS file. Select the integration you'd like to use for mapping:\"\n                )}\n              </div>\n              <IntegrationsList>\n                {integrations.map(integration => (\n                  <Button\n                    key={integration.id}\n                    type=\"button\"\n                    to={`${baseUrl}/${integration.provider.key}/${integration.id}/?tab=codeMappings&referrer=add-codeowners`}\n                  >\n                    {getIntegrationIcon(integration.provider.key)}\n                    <IntegrationName>{integration.name}</IntegrationName>\n                  </Button>\n                ))}\n              </IntegrationsList>\n            </Fragment>\n          )}\n          {codeMappings.length > 0 && (\n            <Form\n              apiMethod=\"POST\"\n              apiEndpoint=\"/code-mappings/\"\n              hideFooter\n              initialData={{}}\n            >\n              <StyledSelectField\n                name=\"codeMappingId\"\n                label={t('Apply an existing code mapping')}\n                options={codeMappings.map((cm: RepositoryProjectPathConfig) => ({\n                  value: cm.id,\n                  label: cm.repoName,\n                }))}\n                onChange={this.fetchFile}\n                required\n                inline={false}\n                flexibleControlStateSize\n                stacked\n              />\n\n              <FileResult>\n                {codeownersFile ? this.sourceFile(codeownersFile) : this.noSourceFile()}\n                {error && errorJSON && this.errorMessage(baseUrl)}\n              </FileResult>\n            </Form>\n          )}\n        </Body>\n        <Footer>\n          <Button\n            disabled={codeownersFile ? false : true}\n            aria-label={t('Add File')}\n            priority=\"primary\"\n            onClick={this.addFile}\n          >\n            {t('Add File')}\n          </Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default withApi(AddCodeOwnerModal);\nexport {AddCodeOwnerModal};\n\nconst StyledSelectField = styled(SelectField)`\n  border-bottom: None;\n  padding-right: 16px;\n`;\nconst FileResult = styled('div')`\n  width: inherit;\n`;\nconst NoSourceFileBody = styled(PanelBody)`\n  display: grid;\n  padding: 12px;\n  grid-template-columns: 30px 1fr;\n  align-items: center;\n`;\nconst SourceFileBody = styled(PanelBody)`\n  display: grid;\n  padding: 12px;\n  grid-template-columns: 30px 1fr 100px;\n  align-items: center;\n`;\n\nconst IntegrationsList = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  justify-items: center;\n  margin-top: ${space(2)};\n`;\n\nconst IntegrationName = styled('p')`\n  padding-left: 10px;\n`;\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: center;\n`;\n","import * as React from 'react';\nimport TextareaAutosize from 'react-autosize-textarea';\nimport styled from '@emotion/styled';\nimport moment from 'moment';\n\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconGithub, IconGitlab, IconSentry} from 'sentry/icons';\nimport {inputStyles} from 'sentry/styles/input';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  'data-test-id': string;\n  dateUpdated: string | null;\n  raw: string;\n  type: 'codeowners' | 'issueowners';\n  controls?: React.ReactNode[];\n  placeholder?: string;\n  provider?: string;\n  repoName?: string;\n};\n\nfunction RulesPanel({\n  raw,\n  dateUpdated,\n  provider,\n  repoName,\n  type,\n  placeholder,\n  controls,\n  ['data-test-id']: dataTestId,\n}: Props) {\n  function renderIcon() {\n    switch (provider ?? '') {\n      case 'github':\n        return <IconGithub size=\"md\" />;\n      case 'gitlab':\n        return <IconGitlab size=\"md\" />;\n      default:\n        return <IconSentry size=\"md\" />;\n    }\n  }\n\n  function renderTitle() {\n    switch (type) {\n      case 'codeowners':\n        return 'CODEOWNERS';\n      case 'issueowners':\n        return 'Ownership Rules';\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <Panel data-test-id={dataTestId}>\n      <PanelHeader>\n        {[\n          <Container key=\"title\">\n            {renderIcon()}\n            <Title>{renderTitle()}</Title>\n            {repoName && <Repository>{`- ${repoName}`}</Repository>}\n            <FeatureBadge type=\"new\" />\n          </Container>,\n          <Container key=\"control\">\n            <SyncDate>\n              {dateUpdated && `Last synced ${moment(dateUpdated).fromNow()}`}\n            </SyncDate>\n            <Controls>\n              {(controls || []).map((c, n) => (\n                <span key={n}> {c}</span>\n              ))}\n            </Controls>\n          </Container>,\n        ]}\n      </PanelHeader>\n\n      <PanelBody>\n        <InnerPanelBody>\n          <StyledTextArea\n            value={raw}\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            placeholder={placeholder}\n          />\n        </InnerPanelBody>\n      </PanelBody>\n    </Panel>\n  );\n}\n\nexport default RulesPanel;\n\nconst Container = styled('div')`\n  display: flex;\n  align-items: center;\n  text-transform: none;\n`;\n\nconst Title = styled('div')`\n  padding: 0 ${space(0.5)} 0 ${space(1)};\n  font-size: initial;\n`;\n\nconst Repository = styled('div')``;\n\nconst InnerPanelBody = styled(PanelBody)`\n  height: auto;\n`;\n\nconst StyledTextArea = styled(TextareaAutosize)`\n  ${p => inputStyles(p)};\n  height: 350px !important;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  font-family: ${p => p.theme.text.familyMono};\n  word-break: break-all;\n  white-space: pre-wrap;\n  line-height: ${space(3)};\n  border: none;\n  box-shadow: none;\n  padding: ${space(2)};\n  color: transparent;\n  text-shadow: 0 0 0 #9386a0;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: none;\n    box-shadow: none;\n  }\n`;\n\nconst SyncDate = styled('div')`\n  padding: 0 ${space(1)};\n  font-weight: normal;\n`;\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n`;\n","import {Component, Fragment} from 'react';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport {IconDelete, IconSync} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {CodeOwner, CodeownersFile, Organization, Project} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport RulesPanel from 'sentry/views/settings/project/projectOwnership/rulesPanel';\n\ntype Props = {\n  api: Client;\n  codeowners: CodeOwner[];\n  disabled: boolean;\n  onDelete: (data: CodeOwner) => void;\n  onUpdate: (data: CodeOwner) => void;\n  organization: Organization;\n  project: Project;\n};\n\nclass CodeOwnersPanel extends Component<Props> {\n  handleDelete = async (codeowner: CodeOwner) => {\n    const {api, organization, project, onDelete} = this.props;\n    const endpoint = `/api/0/projects/${organization.slug}/${project.slug}/codeowners/${codeowner.id}/`;\n    try {\n      await api.requestPromise(endpoint, {\n        method: 'DELETE',\n      });\n      onDelete(codeowner);\n      addSuccessMessage(t('Deletion successful'));\n    } catch {\n      // no 4xx errors should happen on delete\n      addErrorMessage(t('An error occurred'));\n    }\n  };\n\n  handleSync = async (codeowner: CodeOwner) => {\n    const {api, organization, project, onUpdate} = this.props;\n    try {\n      const codeownerFile: CodeownersFile = await api.requestPromise(\n        `/organizations/${organization.slug}/code-mappings/${codeowner.codeMappingId}/codeowners/`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/codeowners/${codeowner.id}/`,\n        {\n          method: 'PUT',\n          data: {raw: codeownerFile.raw},\n        }\n      );\n      onUpdate({...codeowner, ...data});\n      addSuccessMessage(t('CODEOWNERS file sync successful.'));\n    } catch (_err) {\n      addErrorMessage(t('An error occurred trying to sync CODEOWNERS file.'));\n    }\n  };\n  render() {\n    const {codeowners, disabled} = this.props;\n    return codeowners.map(codeowner => {\n      const {dateUpdated, provider, codeMapping, ownershipSyntax} = codeowner;\n      return (\n        <Fragment key={codeowner.id}>\n          <RulesPanel\n            data-test-id=\"codeowners-panel\"\n            type=\"codeowners\"\n            raw={ownershipSyntax || ''}\n            dateUpdated={dateUpdated}\n            provider={provider}\n            repoName={codeMapping?.repoName}\n            controls={[\n              <Button\n                key=\"sync\"\n                icon={<IconSync size=\"xs\" />}\n                size=\"xsmall\"\n                onClick={() => this.handleSync(codeowner)}\n                disabled={disabled}\n                aria-label={t('Sync')}\n              />,\n              <Confirm\n                onConfirm={() => this.handleDelete(codeowner)}\n                message={t('Are you sure you want to remove this CODEOWNERS file?')}\n                key=\"confirm-delete\"\n                disabled={disabled}\n              >\n                <Button\n                  key=\"delete\"\n                  icon={<IconDelete size=\"xs\" />}\n                  aria-label={t('Delete')}\n                  size=\"xsmall\"\n                />\n              </Confirm>,\n            ]}\n          />\n        </Fragment>\n      );\n    });\n  }\n}\n\nexport default withApi(CodeOwnersPanel);\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {openEditOwnershipRules, openModal} from 'sentry/actionCreators/modal';\nimport Access from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconWarning} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  CodeOwner,\n  Integration,\n  Organization,\n  Project,\n  RepositoryProjectPathConfig,\n} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport FeedbackAlert from 'sentry/views/settings/account/notifications/feedbackAlert';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport AddCodeOwnerModal from 'sentry/views/settings/project/projectOwnership/addCodeOwnerModal';\nimport CodeOwnersPanel from 'sentry/views/settings/project/projectOwnership/codeowners';\nimport RulesPanel from 'sentry/views/settings/project/projectOwnership/rulesPanel';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  codeMappings: RepositoryProjectPathConfig[];\n  integrations: Integration[];\n  ownership: null | any;\n  codeowners?: CodeOwner[];\n} & AsyncView['state'];\n\nconst CodeOwnersHeader = HookOrDefault({\n  hookName: 'component:codeowners-header',\n  defaultComponent: () => <Fragment />,\n});\n\nclass ProjectOwnership extends AsyncView<Props, State> {\n  getTitle() {\n    const {project} = this.props;\n    return routeTitleGen(t('Issue Owners'), project.slug, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, project} = this.props;\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      ['ownership', `/projects/${organization.slug}/${project.slug}/ownership/`],\n      [\n        'codeMappings',\n        `/organizations/${organization.slug}/code-mappings/`,\n        {query: {project: project.id}},\n      ],\n      [\n        'integrations',\n        `/organizations/${organization.slug}/integrations/`,\n        {query: {features: ['codeowners']}},\n      ],\n    ];\n    if (organization.features.includes('integrations-codeowners')) {\n      endpoints.push([\n        'codeowners',\n        `/projects/${organization.slug}/${project.slug}/codeowners/`,\n        {query: {expand: ['codeMapping', 'ownershipSyntax']}},\n      ]);\n    }\n    return endpoints;\n  }\n\n  handleAddCodeOwner = () => {\n    const {codeMappings, integrations} = this.state;\n    openModal(modalProps => (\n      <AddCodeOwnerModal\n        {...modalProps}\n        organization={this.props.organization}\n        project={this.props.project}\n        codeMappings={codeMappings}\n        integrations={integrations}\n        onSave={this.handleCodeOwnerAdded}\n      />\n    ));\n  };\n\n  getPlaceholder() {\n    return `#example usage\npath:src/example/pipeline/* person@sentry.io #infra\nurl:http://example.com/settings/* #product\ntags.sku_class:enterprise #enterprise`;\n  }\n\n  getDetail() {\n    return tct(\n      `Automatically assign issues and send alerts to the right people based on issue properties. [link:Learn more].`,\n      {\n        link: (\n          <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/issue-owners/\" />\n        ),\n      }\n    );\n  }\n\n  handleOwnershipSave = (text: string | null) => {\n    this.setState(prevState => ({\n      ownership: {\n        ...prevState.ownership,\n        raw: text,\n      },\n    }));\n  };\n\n  handleCodeOwnerAdded = (data: CodeOwner) => {\n    const {codeowners} = this.state;\n    const newCodeowners = [data, ...(codeowners || [])];\n    this.setState({codeowners: newCodeowners});\n  };\n\n  handleCodeOwnerDeleted = (data: CodeOwner) => {\n    const {codeowners} = this.state;\n    const newCodeowners = (codeowners || []).filter(\n      codeowner => codeowner.id !== data.id\n    );\n    this.setState({codeowners: newCodeowners});\n  };\n\n  handleCodeOwnerUpdated = (data: CodeOwner) => {\n    const codeowners = this.state.codeowners || [];\n    const index = codeowners.findIndex(item => item.id === data.id);\n    this.setState({\n      codeowners: [...codeowners.slice(0, index), data, ...codeowners.slice(index + 1)],\n    });\n  };\n\n  handleAddCodeOwnerRequest = async () => {\n    const {organization, project} = this.props;\n    try {\n      addLoadingMessage(t('Requesting\\u2026'));\n      await this.api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/codeowners-request/`,\n        {\n          method: 'POST',\n          data: {},\n        }\n      );\n\n      addSuccessMessage(t('Request Sent'));\n    } catch (err) {\n      addErrorMessage(t('Unable to send request'));\n      Sentry.captureException(err);\n    }\n  };\n\n  renderCodeOwnerErrors = () => {\n    const {project, organization} = this.props;\n    const {codeowners} = this.state;\n\n    const errMessageComponent = (message, values, link, linkValue) => (\n      <Fragment>\n        <ErrorMessageContainer>\n          <span>{message}</span>\n          <b>{values.join(', ')}</b>\n        </ErrorMessageContainer>\n        <ErrorCtaContainer>\n          <ExternalLink href={link}>{linkValue}</ExternalLink>\n        </ErrorCtaContainer>\n      </Fragment>\n    );\n\n    const errMessageListComponent = (\n      message: string,\n      values: string[],\n      linkFunction: (s: string) => string,\n      linkValueFunction: (s: string) => string\n    ) => {\n      return (\n        <Fragment>\n          <ErrorMessageContainer>\n            <span>{message}</span>\n          </ErrorMessageContainer>\n          <ErrorMessageListContainer>\n            {values.map((value, index) => (\n              <ErrorInlineContainer key={index}>\n                <b>{value}</b>\n                <ErrorCtaContainer>\n                  <ExternalLink href={linkFunction(value)} key={index}>\n                    {linkValueFunction(value)}\n                  </ExternalLink>\n                </ErrorCtaContainer>\n              </ErrorInlineContainer>\n            ))}\n          </ErrorMessageListContainer>\n        </Fragment>\n      );\n    };\n\n    return (codeowners || [])\n      .filter(({errors}) => Object.values(errors).flat().length)\n      .map(({id, codeMapping, errors}) => {\n        const errMessage = (type, values) => {\n          switch (type) {\n            case 'missing_external_teams':\n              return errMessageComponent(\n                `The following teams do not have an association in the organization: ${organization.slug}`,\n                values,\n                `/settings/${organization.slug}/integrations/${codeMapping?.provider?.slug}/${codeMapping?.integrationId}/?tab=teamMappings`,\n                'Configure Team Mappings'\n              );\n\n            case 'missing_external_users':\n              return errMessageComponent(\n                `The following usernames do not have an association in the organization: ${organization.slug}`,\n                values,\n                `/settings/${organization.slug}/integrations/${codeMapping?.provider?.slug}/${codeMapping?.integrationId}/?tab=userMappings`,\n                'Configure User Mappings'\n              );\n\n            case 'missing_user_emails':\n              return errMessageComponent(\n                `The following emails do not have an Sentry user in the organization: ${organization.slug}`,\n                values,\n                `/settings/${organization.slug}/members/`,\n                'Invite Users'\n              );\n\n            case 'teams_without_access':\n              return errMessageListComponent(\n                `The following team do not have access to the project: ${project.slug}`,\n                values,\n                value =>\n                  `/settings/${organization.slug}/teams/${value.slice(1)}/projects/`,\n                value => `Configure ${value} Permissions`\n              );\n\n            case 'users_without_access':\n              return errMessageListComponent(\n                `The following users are not on a team that has access to the project: ${project.slug}`,\n                values,\n                email => `/settings/${organization.slug}/members/?query=${email}`,\n                _ => `Configure Member Settings`\n              );\n            default:\n              return null;\n          }\n        };\n        return (\n          <Alert\n            key={id}\n            type=\"error\"\n            icon={<IconWarning size=\"md\" />}\n            expand={[\n              <AlertContentContainer key=\"container\">\n                {Object.entries(errors)\n                  .filter(([_, values]) => values.length)\n                  .map(([type, values]) => (\n                    <ErrorContainer key={`${id}-${type}`}>\n                      {errMessage(type, values)}\n                    </ErrorContainer>\n                  ))}\n              </AlertContentContainer>,\n            ]}\n          >\n            {`There were ${\n              Object.values(errors).flat().length\n            } ownership issues within Sentry on the latest sync with the CODEOWNERS file`}\n          </Alert>\n        );\n      });\n  };\n  renderBody() {\n    const {project, organization} = this.props;\n    const {ownership, codeowners} = this.state;\n\n    const disabled = !organization.access.includes('project:write');\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Issue Owners')}\n          action={\n            <Fragment>\n              <Button\n                to={{\n                  pathname: `/organizations/${organization.slug}/issues/`,\n                  query: {project: project.id},\n                }}\n                size=\"small\"\n              >\n                {t('View Issues')}\n              </Button>\n              <Feature features={['integrations-codeowners']}>\n                <Access access={['org:integrations']}>\n                  {({hasAccess}) =>\n                    hasAccess ? (\n                      <CodeOwnerButton\n                        onClick={this.handleAddCodeOwner}\n                        size=\"small\"\n                        priority=\"primary\"\n                        data-test-id=\"add-codeowner-button\"\n                      >\n                        {t('Add CODEOWNERS File')}\n                      </CodeOwnerButton>\n                    ) : (\n                      <CodeOwnerButton\n                        onClick={this.handleAddCodeOwnerRequest}\n                        size=\"small\"\n                        priority=\"primary\"\n                        data-test-id=\"add-codeowner-request-button\"\n                      >\n                        {t('Request to Add CODEOWNERS File')}\n                      </CodeOwnerButton>\n                    )\n                  }\n                </Access>\n              </Feature>\n            </Fragment>\n          }\n        />\n        <IssueOwnerDetails>{this.getDetail()}</IssueOwnerDetails>\n        <CodeOwnersHeader\n          addCodeOwner={this.handleAddCodeOwner}\n          handleRequest={this.handleAddCodeOwnerRequest}\n        />\n\n        <PermissionAlert />\n        <FeedbackAlert />\n        {this.renderCodeOwnerErrors()}\n        <RulesPanel\n          data-test-id=\"issueowners-panel\"\n          type=\"issueowners\"\n          raw={ownership.raw || ''}\n          dateUpdated={ownership.lastUpdated}\n          placeholder={this.getPlaceholder()}\n          controls={[\n            <Button\n              key=\"edit\"\n              size=\"xsmall\"\n              onClick={() =>\n                openEditOwnershipRules({\n                  organization,\n                  project,\n                  ownership,\n                  onSave: this.handleOwnershipSave,\n                })\n              }\n              disabled={disabled}\n            >\n              {t('Edit')}\n            </Button>,\n          ]}\n        />\n        <Feature features={['integrations-codeowners']}>\n          <CodeOwnersPanel\n            codeowners={codeowners || []}\n            onDelete={this.handleCodeOwnerDeleted}\n            onUpdate={this.handleCodeOwnerUpdated}\n            disabled={disabled}\n            {...this.props}\n          />\n        </Feature>\n        <Form\n          apiEndpoint={`/projects/${organization.slug}/${project.slug}/ownership/`}\n          apiMethod=\"PUT\"\n          saveOnBlur\n          initialData={{\n            fallthrough: ownership.fallthrough,\n            autoAssignment: ownership.autoAssignment,\n            codeownersAutoSync: ownership.codeownersAutoSync,\n          }}\n          hideFooter\n        >\n          <JsonForm\n            forms={[\n              {\n                title: t('Issue Owners'),\n                fields: [\n                  {\n                    name: 'autoAssignment',\n                    type: 'boolean',\n                    label: t('Automatically assign issues'),\n                    help: t('Assign issues when a new event matches the rules above.'),\n                    disabled,\n                  },\n                  {\n                    name: 'fallthrough',\n                    type: 'boolean',\n                    label: t(\n                      'Send alert to project members if there’s no assigned owner'\n                    ),\n                    help: t(\n                      'Alerts will be sent to all users who have access to this project.'\n                    ),\n                    disabled,\n                  },\n                  {\n                    name: 'codeownersAutoSync',\n                    type: 'boolean',\n                    label: tct(\n                      `Automatically sync changes from CODEOWNERS file to Code Owners [badge]`,\n                      {\n                        badge: (\n                          <FeatureBadge\n                            type=\"new\"\n                            title={\n                              !(this.state.codeowners || []).length\n                                ? 'Setup Code Owners to use this feature.'\n                                : undefined\n                            }\n                          />\n                        ),\n                      }\n                    ),\n                    help: t(\n                      'Sentry will watch for CODEOWNERS file changes during a Release and then update Code Owners.'\n                    ),\n                    disabled: disabled || !(this.state.codeowners || []).length,\n                  },\n                ],\n              },\n            ]}\n          />\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nexport default ProjectOwnership;\n\nconst CodeOwnerButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst AlertContentContainer = styled('div')`\n  overflow-y: auto;\n  max-height: 350px;\n`;\n\nconst ErrorContainer = styled('div')`\n  display: grid;\n  grid-template-areas: 'message cta';\n  grid-template-columns: 2fr 1fr;\n  gap: ${space(2)};\n  padding: ${space(1.5)} 0;\n`;\n\nconst ErrorInlineContainer = styled(ErrorContainer)`\n  gap: ${space(1.5)};\n  grid-template-columns: 1fr 2fr;\n  align-items: center;\n  padding: 0;\n`;\n\nconst ErrorMessageContainer = styled('div')`\n  grid-area: message;\n  display: grid;\n  gap: ${space(1.5)};\n`;\n\nconst ErrorMessageListContainer = styled('div')`\n  grid-column: message / cta-end;\n  gap: ${space(1.5)};\n`;\n\nconst ErrorCtaContainer = styled('div')`\n  grid-area: cta;\n  justify-self: flex-end;\n  text-align: right;\n  line-height: 1.5;\n`;\n\nconst IssueOwnerDetails = styled('div')`\n  padding-bottom: ${space(3)};\n`;\n"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","PermissionAlert","access","props","hasAccess","type","icon","size","t","AddCodeOwnerModal","Component","codeownersFile","codeMappingId","isLoading","error","errorJSON","async","organization","setState","data","api","requestPromise","slug","method","_err","project","codeMappings","state","postData","raw","codeMapping","find","mapping","id","toString","handleAddedFile","err","responseJSON","addErrorMessage","Object","values","flat","join","onSave","closeModal","sourceFile","SourceFileBody","isCircled","color","filepath","href","html_url","target","errorMessage","baseUrl","integrationId","provider","errActors","split","map","el","i","tct","userMappingsLink","to","key","teamMappingsLink","addAndSkip","noSourceFile","Container","mini","NoSourceFileBody","Fragment","Header","Body","Footer","integrations","closeButton","length","IntegrationsList","integration","getIntegrationIcon","IntegrationName","name","apiMethod","apiEndpoint","hideFooter","initialData","StyledSelectField","label","options","cm","value","repoName","onChange","fetchFile","required","inline","flexibleControlStateSize","stacked","FileResult","disabled","priority","onClick","addFile","withApi","SelectField","PanelBody","space","RulesPanel","dateUpdated","placeholder","controls","dataTestId","renderIcon","Title","renderTitle","Repository","SyncDate","moment","fromNow","Controls","c","n","InnerPanelBody","StyledTextArea","spellCheck","autoComplete","autoCorrect","autoCapitalize","TextareaAutosize","p","inputStyles","theme","text","familyMono","CodeOwnersPanel","onDelete","endpoint","codeowner","addSuccessMessage","onUpdate","codeownerFile","codeowners","ownershipSyntax","handleSync","onConfirm","handleDelete","message","CodeOwnersHeader","HookOrDefault","hookName","defaultComponent","ProjectOwnership","openModal","modalProps","handleCodeOwnerAdded","prevState","ownership","newCodeowners","filter","index","findIndex","item","slice","addLoadingMessage","Sentry","errMessageComponent","link","linkValue","ErrorMessageContainer","ErrorCtaContainer","errMessageListComponent","linkFunction","linkValueFunction","ErrorMessageListContainer","ErrorInlineContainer","errors","errMessage","email","_","expand","AlertContentContainer","entries","ErrorContainer","routeTitleGen","getEndpoints","endpoints","query","features","includes","push","getPlaceholder","getDetail","renderBody","action","pathname","CodeOwnerButton","handleAddCodeOwner","handleAddCodeOwnerRequest","IssueOwnerDetails","addCodeOwner","handleRequest","renderCodeOwnerErrors","lastUpdated","openEditOwnershipRules","handleOwnershipSave","handleCodeOwnerDeleted","handleCodeOwnerUpdated","saveOnBlur","fallthrough","autoAssignment","codeownersAutoSync","forms","fields","help","badge","undefined","Button"],"sourceRoot":""}