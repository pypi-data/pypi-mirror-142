{"version":3,"file":"chunks/app_components_alertLink_tsx-app_data_forms_accountEmails_tsx-app_views_asyncView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"8nBAmCA,SAASA,EAAT,GAWU,IAXS,KACjBC,EAAO,SADU,SAEjBC,EAAW,UAFM,KAGjBC,EAHiB,SAIjBC,EAJiB,QAKjBC,EALiB,oBAMjBC,GAAsB,EANL,aAOjBC,GAAe,EAPE,GAQjBC,EARiB,KASjBC,EACA,eAAkBC,GACV,EACR,OACE,QAACC,EAAD,CACE,eAAcD,EACdF,GAAIA,EACJC,KAAMA,EACNJ,QAASA,EACTJ,KAAMA,EACNC,SAAUA,EACVI,oBAAqBA,EACrBC,aAAcA,EARhB,UAUGJ,IAAQ,QAACS,EAAD,UAAcT,KACvB,QAACU,EAAD,UAAgBT,KAChB,QAACU,EAAD,WACE,QAAC,KAAD,CAAaC,UAAU,eA1BtBf,EAAAA,YAAAA,YAgCT,UAEMW,GAAa,QAAO,IAAyD,IAAxD,aAACJ,EAAD,GAAeC,EAAf,KAAmBC,KAASO,GAA4B,EACjF,MAAMC,EAAYC,GAAAA,CAAKF,EAAO,CAAC,sBAAuB,WAAY,SAClE,OAAIP,GACK,QAAC,IAAD,IAAkBQ,EAAWR,KAAMA,EAAMF,aAAcA,KAGzD,QAAC,IAAD,IAAUU,EAAWT,GAAIA,GAAM,OANrB,qBAAH,kCASMW,GAAKA,EAAEC,MAAMC,MAAMF,EAAEjB,UAAUoB,iBATrC,WAULH,GAAKA,EAAEC,MAAMG,WAVR,uBAWOJ,GAAKA,EAAEC,MAAMC,MAAMF,EAAEjB,UAAUsB,QAXtC,aAYHL,GAAiB,UAAXA,EAAElB,KAAoB,IAAEwB,EAAAA,EAAAA,GAAM,OAAMA,EAAAA,EAAAA,GAAM,QAASA,EAAAA,EAAAA,GAAM,IAZ5D,mBAaGN,GAAMA,EAAEb,oBAAsB,GAAImB,EAAAA,EAAAA,GAAM,IAb3C,+FAmBEN,GAAKA,EAAEC,MAAMC,MAAMF,EAAEjB,UAAUsB,QAnBjC,kBAuBVZ,GAAc,OAAO,OAAP,qBAAH,wBAELa,EAAAA,EAAAA,GAAM,IAFD,KAESA,EAAAA,EAAAA,GAAM,KAFf,KAEuBA,EAAAA,EAAAA,GAAM,IAF7B,OAKXX,GAAW,OAAOF,EAAP,qBAAH,WACFa,EAAAA,EAAAA,GAAM,IADJ,OAIRZ,GAAgB,OAAO,MAAP,qBAAH,wD,yFClGZ,MAAMa,EAAQ,4BAqBrB,EAnBqC,CACnC,CAEEC,MAAO,uBACPC,OAAQ,CACN,CACEC,KAAM,QACNC,KAAM,SAGNC,MAAO,mBACPC,YAAa,6BACbC,KAAM,kDACNC,kBAAkB,O,0RCVX,MAAMC,UAGXC,EAAAA,EACRC,WACE,MAAO,GAGTC,SACE,OACE,QAAC,IAAD,CAAqBX,MAAOY,KAAKF,WAAjC,SACGE,KAAKC,qBAXOL,EAAAA,YAAAA","sources":["webpack:///./app/components/alertLink.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\nimport omit from 'lodash/omit';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {IconChevron} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  children?: React.ReactNode;\n  ['data-test-id']?: string;\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  openInNewTab: boolean;\n  priority: Priority;\n  size: Size;\n  withoutMarginBottom: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & Partial<DefaultProps> & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nfunction AlertLink({\n  size = 'normal',\n  priority = 'warning',\n  icon,\n  children,\n  onClick,\n  withoutMarginBottom = false,\n  openInNewTab = false,\n  to,\n  href,\n  ['data-test-id']: dataTestId,\n}: Props) {\n  return (\n    <StyledLink\n      data-test-id={dataTestId}\n      to={to}\n      href={href}\n      onClick={onClick}\n      size={size}\n      priority={priority}\n      withoutMarginBottom={withoutMarginBottom}\n      openInNewTab={openInNewTab}\n    >\n      {icon && <IconWrapper>{icon}</IconWrapper>}\n      <AlertLinkText>{children}</AlertLinkText>\n      <IconLink>\n        <IconChevron direction=\"right\" />\n      </IconLink>\n    </StyledLink>\n  );\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.textColor};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import {JsonFormObject} from 'sentry/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Add Secondary Emails',\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Additional Email',\n        placeholder: 'e.g. secondary@example.com',\n        help: 'Designate an alternative email for this account',\n        showReturnButton: true,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import * as React from 'react';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["AlertLink","size","priority","icon","children","onClick","withoutMarginBottom","openInNewTab","to","href","dataTestId","StyledLink","IconWrapper","AlertLinkText","IconLink","direction","props","linkProps","omit","p","theme","alert","backgroundLight","textColor","border","space","route","title","fields","name","type","label","placeholder","help","showReturnButton","AsyncView","AsyncComponent","getTitle","render","this","renderComponent"],"sourceRoot":""}