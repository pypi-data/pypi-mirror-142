{"version":3,"file":"chunks/app_views_sentryAppExternalInstallation_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/sentryAppInstallations.tsx","webpack:///./app/components/narrowLayout.tsx","webpack:///./app/components/sentryAppIcon.tsx","webpack:///./app/utils/consolidatedScopes.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/components/modals/sentryAppDetailsModal.tsx","webpack:///./app/views/sentryAppExternalInstallation.tsx","webpack:///../node_modules/lodash/invertBy.js"],"sourcesContent":["import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {SentryApp, SentryAppInstallation} from 'sentry/types';\n\n/**\n * Install a sentry application\n *\n * @param {Object} client ApiClient\n * @param {String} orgId Organization Slug\n * @param {Object} app SentryApp\n */\nexport function installSentryApp(\n  client: Client,\n  orgId: string,\n  app: SentryApp\n): Promise<SentryAppInstallation> {\n  addLoadingMessage();\n  const promise = client.requestPromise(\n    `/organizations/${orgId}/sentry-app-installations/`,\n    {\n      method: 'POST',\n      data: {slug: app.slug},\n    }\n  );\n  promise.then(\n    () => clearIndicators(),\n    () => addErrorMessage(t(`Unable to install ${app.name}`))\n  );\n  return promise;\n}\n\n/**\n * Uninstall a sentry application\n *\n * @param {Object} client ApiClient\n * @param {Object} install SentryAppInstallation\n */\nexport function uninstallSentryApp(\n  client: Client,\n  install: SentryAppInstallation\n): Promise<void> {\n  addLoadingMessage();\n  const promise = client.requestPromise(`/sentry-app-installations/${install.uuid}/`, {\n    method: 'DELETE',\n  });\n  promise.then(\n    () => {\n      addSuccessMessage(t(`${install.app.slug} successfully uninstalled.`));\n    },\n    () => clearIndicators()\n  );\n  return promise;\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {Client} from 'sentry/api';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\ntype Props = {\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nclass NarrowLayout extends Component<Props> {\n  UNSAFE_componentWillMount() {\n    document.body.classList.add('narrow');\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    document.body.classList.remove('narrow');\n  }\n\n  private api = new Client();\n\n  handleLogout = () => {\n    logout(this.api).then(() => window.location.assign('/auth/login'));\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"pattern-bg\" />\n        <div className=\"container\" style={{maxWidth: this.props.maxWidth}}>\n          <div className=\"box box-modal\">\n            <div className=\"box-header\">\n              <a href=\"/\">\n                <IconSentry size=\"lg\" />\n              </a>\n              {this.props.showLogout && (\n                <a className=\"logout pull-right\" onClick={this.handleLogout}>\n                  <Logout>{t('Sign out')}</Logout>\n                </a>\n              )}\n            </div>\n            <div className=\"box-content with-padding\">{this.props.children}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Logout = styled('span')`\n  font-size: 16px;\n`;\n\nexport default NarrowLayout;\n","import React from 'react';\n\nimport SentryAppAvatar from 'sentry/components/avatar/sentryAppAvatar';\nimport {AvatarSentryApp} from 'sentry/types';\n\ntype Props = {\n  sentryApp: AvatarSentryApp;\n  size: number;\n};\n\nconst SentryAppIcon = ({sentryApp, size}: Props) => {\n  return <SentryAppAvatar sentryApp={sentryApp} size={size} isColor />;\n};\n\nexport default SentryAppIcon;\n","import groupBy from 'lodash/groupBy';\nimport invertBy from 'lodash/invertBy';\nimport pick from 'lodash/pick';\n\nimport {Permissions} from 'sentry/types';\n\nconst PERMISSION_LEVELS = {\n  read: 0,\n  write: 1,\n  admin: 2,\n};\n\nconst HUMAN_RESOURCE_NAMES = {\n  project: 'Project',\n  team: 'Team',\n  release: 'Release',\n  event: 'Event',\n  org: 'Organization',\n  member: 'Member',\n};\n\nconst DEFAULT_RESOURCE_PERMISSIONS: Permissions = {\n  Project: 'no-access',\n  Team: 'no-access',\n  Release: 'no-access',\n  Event: 'no-access',\n  Organization: 'no-access',\n  Member: 'no-access',\n};\n\nconst PROJECT_RELEASES = 'project:releases';\n\ntype PermissionLevelResources = {\n  admin: string[];\n  read: string[];\n  write: string[];\n};\n/**\n * Numerical value of the scope where Admin is higher than Write,\n * which is higher than Read. Used to sort scopes by access.\n */\nconst permissionLevel = (scope: string): number => {\n  const permission = scope.split(':')[1];\n  return PERMISSION_LEVELS[permission];\n};\n\nconst compareScopes = (a: string, b: string) => permissionLevel(a) - permissionLevel(b);\n\n/**\n * Return the most permissive scope for each resource.\n *\n * Example:\n *    Given the full list of scopes:\n *      ['project:read', 'project:write', 'team:read', 'team:write', 'team:admin']\n *\n *    this would return:\n *      ['project:write', 'team:admin']\n */\nfunction topScopes(scopeList: string[]) {\n  return Object.values(groupBy(scopeList, scope => scope.split(':')[0]))\n    .map(scopes => scopes.sort(compareScopes))\n    .map(scopes => scopes.pop());\n}\n\n/**\n * Convert into a list of Permissions, grouped by resource.\n *\n * This is used in the new/edit Sentry App form. That page displays permissions\n * in a per-Resource manner, meaning one row for Project, one for Organization, etc.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      'Project': 'read',\n *      'Organization': 'write',\n *      'Team': 'no-access',\n *      ...\n *    }\n */\nfunction toResourcePermissions(scopes: string[]): Permissions {\n  const permissions = {...DEFAULT_RESOURCE_PERMISSIONS};\n  let filteredScopes = [...scopes];\n  // The scope for releases is `project:releases`, but instead of displaying\n  // it as a permission of Project, we want to separate it out into its own\n  // row for Releases.\n  if (scopes.includes(PROJECT_RELEASES)) {\n    permissions.Release = 'admin';\n    filteredScopes = scopes.filter((scope: string) => scope !== PROJECT_RELEASES); // remove project:releases\n  }\n\n  topScopes(filteredScopes).forEach((scope: string | undefined) => {\n    if (scope) {\n      const [resource, permission] = scope.split(':');\n      permissions[HUMAN_RESOURCE_NAMES[resource]] = permission;\n    }\n  });\n\n  return permissions;\n}\n\n/**\n * Convert into a list of Permissions, grouped by access and including a\n * list of resources per access level.\n *\n * This is used in the Permissions Modal when installing an App. It displays\n * scopes in a per-Permission way, meaning one row for Read, one for Write,\n * and one for Admin.\n *\n * This exposes scopes in a way that works for that UI.\n *\n * Example:\n *    {\n *      read:  ['Project', 'Organization'],\n *      write: ['Member'],\n *      admin: ['Release']\n *    }\n */\nfunction toPermissions(scopes: string[]): PermissionLevelResources {\n  const defaultPermissions = {read: [], write: [], admin: []};\n  const resourcePermissions = toResourcePermissions(scopes);\n\n  // Filter out the 'no-access' permissions\n  const permissions = pick(invertBy(resourcePermissions), ['read', 'write', 'admin']);\n  return {...defaultPermissions, ...permissions};\n}\n\nexport {toPermissions, toResourcePermissions};\n","import * as React from 'react';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport SentryAppIcon from 'sentry/components/sentryAppIcon';\nimport Tag from 'sentry/components/tag';\nimport {IconFlag} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {IntegrationFeature, Organization, SentryApp} from 'sentry/types';\nimport {toPermissions} from 'sentry/utils/consolidatedScopes';\nimport {\n  getIntegrationFeatureGate,\n  trackIntegrationAnalytics,\n} from 'sentry/utils/integrationUtil';\nimport marked, {singleLineRenderer} from 'sentry/utils/marked';\nimport {recordInteraction} from 'sentry/utils/recordSentryAppInteraction';\n\ntype Props = {\n  closeModal: () => void;\n  isInstalled: boolean;\n  onInstall: () => Promise<void>;\n  organization: Organization;\n  sentryApp: SentryApp;\n} & AsyncComponent['props'];\n\ntype State = {\n  featureData: IntegrationFeature[];\n} & AsyncComponent['state'];\n\n// No longer a modal anymore but yea :)\nexport default class SentryAppDetailsModal extends AsyncComponent<Props, State> {\n  componentDidUpdate(prevProps: Props) {\n    // if the user changes org, count this as a fresh event to track\n    if (this.props.organization.id !== prevProps.organization.id) {\n      this.trackOpened();\n    }\n  }\n\n  componentDidMount() {\n    this.trackOpened();\n  }\n\n  trackOpened() {\n    const {sentryApp, organization, isInstalled} = this.props;\n    recordInteraction(sentryApp.slug, 'sentry_app_viewed');\n\n    trackIntegrationAnalytics(\n      'integrations.install_modal_opened',\n      {\n        integration_type: 'sentry_app',\n        integration: sentryApp.slug,\n        already_installed: isInstalled,\n        view: 'external_install',\n        integration_status: sentryApp.status,\n        organization,\n      },\n      {startSession: true}\n    );\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {sentryApp} = this.props;\n    return [['featureData', `/sentry-apps/${sentryApp.slug}/features/`]];\n  }\n\n  featureTags(features: Pick<IntegrationFeature, 'featureGate'>[]) {\n    return features.map(feature => {\n      const feat = feature.featureGate.replace(/integrations/g, '');\n      return <StyledTag key={feat}>{feat.replace(/-/g, ' ')}</StyledTag>;\n    });\n  }\n\n  get permissions() {\n    return toPermissions(this.props.sentryApp.scopes);\n  }\n\n  async onInstall() {\n    const {onInstall} = this.props;\n    // we want to make sure install finishes before we close the modal\n    // and we should close the modal if there is an error as well\n    try {\n      await onInstall();\n    } catch (_err) {\n      /* stylelint-disable-next-line no-empty-block */\n    }\n  }\n\n  renderPermissions() {\n    const permissions = this.permissions;\n    if (\n      Object.keys(permissions).filter(scope => permissions[scope].length > 0).length === 0\n    ) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        <Title>Permissions</Title>\n        {permissions.read.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"read\">\n              {tct('[read] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                resources: permissions.read.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.write.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"write\">\n              {tct('[read] and [write] access to [resources] resources', {\n                read: <strong>Read</strong>,\n                write: <strong>Write</strong>,\n                resources: permissions.write.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n        {permissions.admin.length > 0 && (\n          <Permission>\n            <Indicator />\n            <Text key=\"admin\">\n              {tct('[admin] access to [resources] resources', {\n                admin: <strong>Admin</strong>,\n                resources: permissions.admin.join(', '),\n              })}\n            </Text>\n          </Permission>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  renderBody() {\n    const {sentryApp, closeModal, isInstalled, organization} = this.props;\n    const {featureData} = this.state;\n    // Prepare the features list\n    const features = (featureData || []).map(f => ({\n      featureGate: f.featureGate,\n      description: (\n        <span dangerouslySetInnerHTML={{__html: singleLineRenderer(f.description)}} />\n      ),\n    }));\n\n    const {FeatureList, IntegrationFeatures} = getIntegrationFeatureGate();\n\n    const overview = sentryApp.overview || '';\n    const featureProps = {organization, features};\n\n    return (\n      <React.Fragment>\n        <Heading>\n          <SentryAppIcon sentryApp={sentryApp} size={50} />\n          <HeadingInfo>\n            <Name>{sentryApp.name}</Name>\n            {!!features.length && <Features>{this.featureTags(features)}</Features>}\n          </HeadingInfo>\n        </Heading>\n        <Description dangerouslySetInnerHTML={{__html: marked(overview)}} />\n        <FeatureList {...featureProps} provider={{...sentryApp, key: sentryApp.slug}} />\n        <IntegrationFeatures {...featureProps}>\n          {({disabled, disabledReason}) => (\n            <React.Fragment>\n              {!disabled && this.renderPermissions()}\n              <Footer>\n                <Author>{t('Authored By %s', sentryApp.author)}</Author>\n                <div>\n                  {disabled && <DisabledNotice reason={disabledReason} />}\n                  <Button size=\"small\" onClick={closeModal}>\n                    {t('Cancel')}\n                  </Button>\n\n                  <Access organization={organization} access={['org:integrations']}>\n                    {({hasAccess}) =>\n                      hasAccess && (\n                        <Button\n                          size=\"small\"\n                          priority=\"primary\"\n                          disabled={isInstalled || disabled}\n                          onClick={() => this.onInstall()}\n                          style={{marginLeft: space(1)}}\n                          data-test-id=\"install\"\n                        >\n                          {t('Accept & Install')}\n                        </Button>\n                      )\n                    }\n                  </Access>\n                </div>\n              </Footer>\n            </React.Fragment>\n          )}\n        </IntegrationFeatures>\n      </React.Fragment>\n    );\n  }\n}\n\nconst Heading = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1)};\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nconst HeadingInfo = styled('div')`\n  display: grid;\n  grid-template-rows: max-content max-content;\n  align-items: start;\n`;\n\nconst Name = styled('div')`\n  font-weight: bold;\n  font-size: 1.4em;\n`;\n\nconst Description = styled('div')`\n  margin-bottom: ${space(2)};\n\n  li {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Author = styled('div')`\n  color: ${p => p.theme.gray300};\n`;\n\nconst DisabledNotice = styled(({reason, ...p}: {reason: React.ReactNode}) => (\n  <div {...p}>\n    <IconFlag color=\"red300\" size=\"1.5em\" />\n    {reason}\n  </div>\n))`\n  display: grid;\n  align-items: center;\n  flex: 1;\n  grid-template-columns: max-content 1fr;\n  color: ${p => p.theme.red300};\n  font-size: 0.9em;\n`;\n\nconst Text = styled('p')`\n  margin: 0px 6px;\n`;\n\nconst Permission = styled('div')`\n  display: flex;\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  padding: 20px 30px;\n  border-top: 1px solid #e2dee6;\n  margin: 20px -30px -30px;\n  justify-content: space-between;\n`;\n\nconst Title = styled('p')`\n  margin-bottom: ${space(1)};\n  font-weight: bold;\n`;\n\nconst Indicator = styled(p => <CircleIndicator size={7} {...p} />)`\n  margin-top: 7px;\n  color: ${p => p.theme.success};\n`;\n\nconst Features = styled('div')`\n  margin: -${space(0.5)};\n`;\n\nconst StyledTag = styled(Tag)`\n  padding: ${space(0.5)};\n`;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {installSentryApp} from 'sentry/actionCreators/sentryAppInstallations';\nimport Alert from 'sentry/components/alert';\nimport OrganizationAvatar from 'sentry/components/avatar/organizationAvatar';\nimport Field from 'sentry/components/forms/field';\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport SentryAppDetailsModal from 'sentry/components/modals/sentryAppDetailsModal';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport {IconFlag} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, SentryApp, SentryAppInstallation} from 'sentry/types';\nimport {trackIntegrationAnalytics} from 'sentry/utils/integrationUtil';\nimport {addQueryParamsToExistingUrl} from 'sentry/utils/queryString';\nimport AsyncView from 'sentry/views/asyncView';\n\ntype Props = RouteComponentProps<{sentryAppSlug: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  organization: Organization | null;\n  organizations: Organization[];\n  reloading: boolean;\n  selectedOrgSlug: string | null;\n  sentryApp: SentryApp;\n};\n\nexport default class SentryAppExternalInstallation extends AsyncView<Props, State> {\n  disableErrorReport = false;\n\n  getDefaultState() {\n    const state = super.getDefaultState();\n    return {\n      ...state,\n      selectedOrgSlug: null,\n      organization: null,\n      organizations: [],\n      reloading: false,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [\n      ['organizations', '/organizations/'],\n      ['sentryApp', `/sentry-apps/${this.sentryAppSlug}/`],\n    ];\n  }\n\n  getTitle() {\n    return t('Choose Installation Organization');\n  }\n\n  get sentryAppSlug() {\n    return this.props.params.sentryAppSlug;\n  }\n\n  get isSingleOrg() {\n    return this.state.organizations.length === 1;\n  }\n\n  get isSentryAppInternal() {\n    const {sentryApp} = this.state;\n    return sentryApp && sentryApp.status === 'internal';\n  }\n\n  get isSentryAppUnavailableForOrg() {\n    const {sentryApp, selectedOrgSlug} = this.state;\n    // if the app is unpublished for a different org\n    return (\n      selectedOrgSlug &&\n      sentryApp?.owner?.slug !== selectedOrgSlug &&\n      sentryApp.status === 'unpublished'\n    );\n  }\n\n  get disableInstall() {\n    const {reloading, isInstalled} = this.state;\n    return isInstalled || reloading || this.isSentryAppUnavailableForOrg;\n  }\n\n  hasAccess = (org: Organization) => org.access.includes('org:integrations');\n\n  onClose = () => {\n    // if we came from somewhere, go back there. Otherwise, back to the integrations page\n    const {selectedOrgSlug} = this.state;\n    const newUrl = document.referrer || `/settings/${selectedOrgSlug}/integrations/`;\n    window.location.assign(newUrl);\n  };\n\n  onInstall = async (): Promise<any | undefined> => {\n    const {organization, sentryApp} = this.state;\n    if (!organization || !sentryApp) {\n      return undefined;\n    }\n    trackIntegrationAnalytics('integrations.installation_start', {\n      integration_type: 'sentry_app',\n      integration: sentryApp.slug,\n      view: 'external_install',\n      integration_status: sentryApp.status,\n      organization,\n    });\n\n    const install = await installSentryApp(this.api, organization.slug, sentryApp);\n    // installation is complete if the status is installed\n    if (install.status === 'installed') {\n      trackIntegrationAnalytics('integrations.installation_complete', {\n        integration_type: 'sentry_app',\n        integration: sentryApp.slug,\n        view: 'external_install',\n        integration_status: sentryApp.status,\n        organization,\n      });\n    }\n\n    if (sentryApp.redirectUrl) {\n      const queryParams = {\n        installationId: install.uuid,\n        code: install.code,\n        orgSlug: organization.slug,\n      };\n      const redirectUrl = addQueryParamsToExistingUrl(sentryApp.redirectUrl, queryParams);\n      return window.location.assign(redirectUrl);\n    }\n    return this.onClose();\n  };\n\n  onSelectOrg = async (orgSlug: string) => {\n    this.setState({selectedOrgSlug: orgSlug, reloading: true});\n\n    try {\n      const [organization, installations]: [Organization, SentryAppInstallation[]] =\n        await Promise.all([\n          this.api.requestPromise(`/organizations/${orgSlug}/`),\n          this.api.requestPromise(`/organizations/${orgSlug}/sentry-app-installations/`),\n        ]);\n      const isInstalled = installations\n        .map(install => install.app.slug)\n        .includes(this.sentryAppSlug);\n      // all state fields should be set at the same time so analytics in SentryAppDetailsModal works properly\n      this.setState({organization, isInstalled, reloading: false});\n    } catch (err) {\n      addErrorMessage(t('Failed to retrieve organization or integration details'));\n      this.setState({reloading: false});\n    }\n  };\n\n  onRequestSuccess = ({stateKey, data}) => {\n    // if only one org, we can immediately update our selected org\n    if (stateKey === 'organizations' && data.length === 1) {\n      this.onSelectOrg(data[0].slug);\n    }\n  };\n\n  getOptions() {\n    return this.state.organizations.map(org => ({\n      value: org.slug,\n      label: (\n        <div key={org.slug}>\n          <OrganizationAvatar organization={org} />\n          <OrgNameHolder>{org.slug}</OrgNameHolder>\n        </div>\n      ),\n    }));\n  }\n\n  renderInternalAppError() {\n    const {sentryApp} = this.state;\n    return (\n      <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n        {tct(\n          'Integration [sentryAppName] is an internal integration. Internal integrations are automatically installed',\n          {\n            sentryAppName: <strong>{sentryApp.name}</strong>,\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  checkAndRenderError() {\n    const {organization, selectedOrgSlug, isInstalled, sentryApp} = this.state;\n    if (selectedOrgSlug && organization && !this.hasAccess(organization)) {\n      return (\n        <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n          <p>\n            {tct(\n              `You do not have permission to install integrations in\n          [organization]. Ask an organization owner or manager to\n          visit this page to finish installing this integration.`,\n              {organization: <strong>{organization.slug}</strong>}\n            )}\n          </p>\n          <InstallLink>{window.location.href}</InstallLink>\n        </Alert>\n      );\n    }\n    if (isInstalled && organization) {\n      return (\n        <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n          {tct('Integration [sentryAppName] already installed for [organization]', {\n            organization: <strong>{organization.name}</strong>,\n            sentryAppName: <strong>{sentryApp.name}</strong>,\n          })}\n        </Alert>\n      );\n    }\n\n    if (this.isSentryAppUnavailableForOrg) {\n      // use the slug of the owner if we have it, otherwise use 'another organization'\n      const ownerSlug = sentryApp?.owner?.slug ?? 'another organization';\n      return (\n        <Alert type=\"error\" icon={<IconFlag size=\"md\" />}>\n          {tct(\n            'Integration [sentryAppName] is an unpublished integration for [otherOrg]. An unpublished integration can only be installed on the organization which created it.',\n            {\n              sentryAppName: <strong>{sentryApp.name}</strong>,\n              otherOrg: <strong>{ownerSlug}</strong>,\n            }\n          )}\n        </Alert>\n      );\n    }\n\n    return null;\n  }\n\n  renderMultiOrgView() {\n    const {selectedOrgSlug, sentryApp} = this.state;\n    return (\n      <div>\n        <p>\n          {tct(\n            'Please pick a specific [organization:organization] to install [sentryAppName]',\n            {\n              organization: <strong />,\n              sentryAppName: <strong>{sentryApp.name}</strong>,\n            }\n          )}\n        </p>\n        <Field label={t('Organization')} inline={false} stacked required>\n          {() => (\n            <SelectControl\n              onChange={({value}) => this.onSelectOrg(value)}\n              value={selectedOrgSlug}\n              placeholder={t('Select an organization')}\n              options={this.getOptions()}\n            />\n          )}\n        </Field>\n      </div>\n    );\n  }\n\n  renderSingleOrgView() {\n    const {organizations, sentryApp} = this.state;\n    // pull the name out of organizations since state.organization won't be loaded initially\n    const organizationName = organizations[0].name;\n    return (\n      <div>\n        <p>\n          {tct('You are installing [sentryAppName] for organization [organization]', {\n            organization: <strong>{organizationName}</strong>,\n            sentryAppName: <strong>{sentryApp.name}</strong>,\n          })}\n        </p>\n      </div>\n    );\n  }\n\n  renderMainContent() {\n    const {organization, sentryApp} = this.state;\n    return (\n      <div>\n        <OrgViewHolder>\n          {this.isSingleOrg ? this.renderSingleOrgView() : this.renderMultiOrgView()}\n        </OrgViewHolder>\n        {this.checkAndRenderError()}\n        {organization && (\n          <SentryAppDetailsModal\n            sentryApp={sentryApp}\n            organization={organization}\n            onInstall={this.onInstall}\n            closeModal={this.onClose}\n            isInstalled={this.disableInstall}\n          />\n        )}\n      </div>\n    );\n  }\n\n  renderBody() {\n    return (\n      <NarrowLayout>\n        <Content>\n          <h3>{t('Finish integration installation')}</h3>\n          {this.isSentryAppInternal\n            ? this.renderInternalAppError()\n            : this.renderMainContent()}\n        </Content>\n      </NarrowLayout>\n    );\n  }\n}\n\nconst InstallLink = styled('pre')`\n  margin-bottom: 0;\n  background: #fbe3e1;\n`;\n\nconst OrgNameHolder = styled('span')`\n  margin-left: 5px;\n`;\n\nconst Content = styled('div')`\n  margin-bottom: 40px;\n`;\n\nconst OrgViewHolder = styled('div')`\n  margin-bottom: 20px;\n`;\n","var baseIteratee = require('./_baseIteratee'),\n    createInverter = require('./_createInverter');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * This method is like `_.invert` except that the inverted object is generated\n * from the results of running each element of `object` thru `iteratee`. The\n * corresponding inverted value of each inverted key is an array of keys\n * responsible for generating the inverted value. The iteratee is invoked\n * with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Object\n * @param {Object} object The object to invert.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invertBy(object);\n * // => { '1': ['a', 'c'], '2': ['b'] }\n *\n * _.invertBy(object, function(value) {\n *   return 'group' + value;\n * });\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n */\nvar invertBy = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  if (hasOwnProperty.call(result, value)) {\n    result[value].push(key);\n  } else {\n    result[value] = [key];\n  }\n}, baseIteratee);\n\nmodule.exports = invertBy;\n"],"names":["installSentryApp","client","orgId","app","addLoadingMessage","promise","requestPromise","method","data","slug","then","clearIndicators","addErrorMessage","t","name","uninstallSentryApp","install","uuid","addSuccessMessage","NarrowLayout","Component","Client","logout","this","api","window","location","assign","UNSAFE_componentWillMount","document","body","classList","add","componentWillUnmount","clear","remove","render","className","style","maxWidth","props","href","size","showLogout","onClick","handleLogout","Logout","children","SentryAppIcon","sentryApp","isColor","PERMISSION_LEVELS","read","write","admin","HUMAN_RESOURCE_NAMES","project","team","release","event","org","member","DEFAULT_RESOURCE_PERMISSIONS","Project","Team","Release","Event","Organization","Member","PROJECT_RELEASES","permissionLevel","scope","permission","split","compareScopes","a","b","toResourcePermissions","scopes","permissions","filteredScopes","scopeList","includes","filter","Object","values","groupBy","map","sort","pop","forEach","resource","toPermissions","resourcePermissions","pick","invertBy","AsyncView","AsyncComponent","getTitle","title","renderComponent","SentryAppDetailsModal","componentDidUpdate","prevProps","organization","id","trackOpened","componentDidMount","isInstalled","recordInteraction","trackIntegrationAnalytics","integration_type","integration","already_installed","view","integration_status","status","startSession","getEndpoints","featureTags","features","feature","feat","featureGate","replace","StyledTag","onInstall","_err","renderPermissions","keys","length","Title","Permission","Indicator","Text","tct","resources","join","renderBody","closeModal","featureData","state","f","description","dangerouslySetInnerHTML","__html","singleLineRenderer","FeatureList","IntegrationFeatures","getIntegrationFeatureGate","overview","featureProps","Heading","HeadingInfo","Name","Features","Description","marked","provider","key","disabled","disabledReason","Footer","Author","author","DisabledNotice","reason","access","hasAccess","priority","marginLeft","space","p","theme","gray300","color","red300","success","Tag","SentryAppExternalInstallation","selectedOrgSlug","newUrl","referrer","async","redirectUrl","queryParams","installationId","code","orgSlug","addQueryParamsToExistingUrl","onClose","setState","reloading","installations","Promise","all","sentryAppSlug","err","stateKey","onSelectOrg","getDefaultState","super","organizations","params","owner","isSentryAppUnavailableForOrg","getOptions","value","label","OrgNameHolder","renderInternalAppError","type","icon","sentryAppName","checkAndRenderError","InstallLink","ownerSlug","otherOrg","renderMultiOrgView","inline","stacked","required","onChange","placeholder","options","renderSingleOrgView","organizationName","renderMainContent","OrgViewHolder","isSingleOrg","disableInstall","Content","isSentryAppInternal","baseIteratee","createInverter","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","result","call","push","module","exports"],"sourceRoot":""}