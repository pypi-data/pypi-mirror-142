{"version":3,"file":"chunks/app_actionCreators_dashboards_tsx-app_views_dashboardsV2_addWidget_tsx-app_views_dashboardsV2-f8f3bf.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/dashboards.tsx","webpack:///./app/views/dashboardsV2/addWidget.tsx","webpack:///./app/views/dashboardsV2/layoutUtils.tsx","webpack:///./app/views/dashboardsV2/sortableWidget.tsx","webpack:///./app/views/dashboardsV2/widgetCard/widgetCardContextMenu.tsx","webpack:///./app/views/dashboardsV2/widgetCard/index.tsx","webpack:///./app/views/dashboardsV2/widgetWrapper.tsx"],"sourcesContent":["import omit from 'lodash/omit';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {t} from 'sentry/locale';\nimport {DashboardDetails, Widget} from 'sentry/views/dashboardsV2/types';\n\nexport function createDashboard(\n  api: Client,\n  orgId: string,\n  newDashboard: DashboardDetails,\n  duplicate?: boolean\n): Promise<DashboardDetails> {\n  const {title, widgets} = newDashboard;\n\n  const promise: Promise<DashboardDetails> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/`,\n    {\n      method: 'POST',\n      data: {title, widgets: widgets.map(widget => omit(widget, ['tempId'])), duplicate},\n    }\n  );\n\n  promise.catch(response => {\n    const errorResponse = response?.responseJSON ?? null;\n\n    if (errorResponse) {\n      addErrorMessage(errorResponse);\n    } else {\n      addErrorMessage(t('Unable to create dashboard'));\n    }\n  });\n\n  return promise;\n}\n\nexport function updateDashboardVisit(\n  api: Client,\n  orgId: string,\n  dashboardId: string | string[]\n): Promise<void> {\n  const promise = api.requestPromise(\n    `/organizations/${orgId}/dashboards/${dashboardId}/visit/`,\n    {\n      method: 'POST',\n    }\n  );\n\n  return promise;\n}\n\nexport function fetchDashboard(\n  api: Client,\n  orgId: string,\n  dashboardId: string\n): Promise<DashboardDetails> {\n  const promise: Promise<DashboardDetails> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/${dashboardId}/`,\n    {\n      method: 'GET',\n    }\n  );\n\n  promise.catch(response => {\n    const errorResponse = response?.responseJSON ?? null;\n\n    if (errorResponse) {\n      addErrorMessage(errorResponse);\n    } else {\n      addErrorMessage(t('Unable to load dashboard'));\n    }\n  });\n  return promise;\n}\n\nexport function updateDashboard(\n  api: Client,\n  orgId: string,\n  dashboard: DashboardDetails\n): Promise<DashboardDetails> {\n  const data = {\n    title: dashboard.title,\n    widgets: dashboard.widgets.map(widget => omit(widget, ['tempId'])),\n  };\n\n  const promise: Promise<DashboardDetails> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/${dashboard.id}/`,\n    {\n      method: 'PUT',\n      data,\n    }\n  );\n\n  promise.catch(response => {\n    const errorResponse = response?.responseJSON ?? null;\n\n    if (errorResponse) {\n      addErrorMessage(errorResponse);\n    } else {\n      addErrorMessage(t('Unable to update dashboard'));\n    }\n  });\n\n  return promise;\n}\n\nexport function deleteDashboard(\n  api: Client,\n  orgId: string,\n  dashboardId: string\n): Promise<undefined> {\n  const promise: Promise<undefined> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/${dashboardId}/`,\n    {\n      method: 'DELETE',\n    }\n  );\n\n  promise.catch(response => {\n    const errorResponse = response?.responseJSON ?? null;\n\n    if (errorResponse) {\n      addErrorMessage(errorResponse);\n    } else {\n      addErrorMessage(t('Unable to delete dashboard'));\n    }\n  });\n\n  return promise;\n}\n\nexport function validateWidget(\n  api: Client,\n  orgId: string,\n  widget: Widget\n): Promise<undefined> {\n  const promise: Promise<undefined> = api.requestPromise(\n    `/organizations/${orgId}/dashboards/widgets/`,\n    {\n      method: 'POST',\n      data: widget,\n    }\n  );\n  return promise;\n}\n","import {useSortable} from '@dnd-kit/sortable';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\nimport {DisplayType} from './types';\nimport WidgetWrapper from './widgetWrapper';\n\nexport const ADD_WIDGET_BUTTON_DRAG_ID = 'add-widget-button';\n\nconst initialStyles = {\n  x: 0,\n  y: 0,\n  scaleX: 1,\n  scaleY: 1,\n};\n\ntype Props = {\n  onAddWidget: () => void;\n};\n\nfunction AddWidget({onAddWidget}: Props) {\n  const {setNodeRef, transform} = useSortable({\n    disabled: true,\n    id: ADD_WIDGET_BUTTON_DRAG_ID,\n    transition: null,\n  });\n\n  return (\n    <WidgetWrapper\n      key=\"add\"\n      ref={setNodeRef}\n      displayType={DisplayType.BIG_NUMBER}\n      layoutId={ADD_WIDGET_BUTTON_DRAG_ID}\n      style={{originX: 0, originY: 0}}\n      animate={\n        transform\n          ? {\n              x: transform.x,\n              y: transform.y,\n              scaleX: transform?.scaleX && transform.scaleX <= 1 ? transform.scaleX : 1,\n              scaleY: transform?.scaleY && transform.scaleY <= 1 ? transform.scaleY : 1,\n            }\n          : initialStyles\n      }\n      transition={{\n        duration: 0.25,\n      }}\n    >\n      <InnerWrapper onClick={onAddWidget}>\n        <AddButton\n          data-test-id=\"widget-add\"\n          icon={<IconAdd size=\"lg\" isCircled color=\"inactive\" />}\n          aria-label={t('Add widget')}\n        />\n      </InnerWrapper>\n    </WidgetWrapper>\n  );\n}\n\nexport default AddWidget;\n\nconst AddButton = styled(Button)`\n  border: none;\n  &,\n  &:focus,\n  &:active,\n  &:hover {\n    background: transparent;\n    box-shadow: none;\n  }\n`;\n\nconst InnerWrapper = styled('div')<{onClick?: () => void}>`\n  width: 100%;\n  height: 110px;\n  border: 2px dashed ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: ${p => (p.onClick ? 'pointer' : '')};\n`;\n","import {Layout} from 'react-grid-layout';\nimport {compact} from 'react-grid-layout/build/utils';\nimport pickBy from 'lodash/pickBy';\nimport sortBy from 'lodash/sortBy';\nimport zip from 'lodash/zip';\n\nimport {defined} from 'sentry/utils';\nimport {uniqueId} from 'sentry/utils/guid';\n\nimport {NUM_DESKTOP_COLS} from './dashboard';\nimport {DisplayType, Widget, WidgetLayout} from './types';\n\nexport const DEFAULT_WIDGET_WIDTH = 2;\n\nconst WIDGET_PREFIX = 'grid-item';\n\n// Keys for grid layout values we track in the server\nconst STORE_KEYS = ['x', 'y', 'w', 'h', 'minW', 'maxW', 'minH', 'maxH'];\n\nexport type Position = Pick<Layout, 'x' | 'y'>;\n\ntype NextPosition = [position: Position, columnDepths: number[]];\n\nexport function generateWidgetId(widget: Widget, index: number) {\n  return widget.id ? `${widget.id}-index-${index}` : `index-${index}`;\n}\n\nexport function constructGridItemKey(widget: {id?: string; tempId?: string}) {\n  return `${WIDGET_PREFIX}-${widget.id ?? widget.tempId}`;\n}\n\nexport function assignTempId(widget: Widget) {\n  if (widget.id ?? widget.tempId) {\n    return widget;\n  }\n\n  return {...widget, tempId: uniqueId()};\n}\n\n/**\n * Naive positioning for widgets assuming no resizes.\n */\nexport function getDefaultPosition(index: number, displayType: DisplayType) {\n  return {\n    x: (DEFAULT_WIDGET_WIDTH * index) % NUM_DESKTOP_COLS,\n    y: Number.MAX_SAFE_INTEGER,\n    w: DEFAULT_WIDGET_WIDTH,\n    h: displayType === DisplayType.BIG_NUMBER ? 1 : 2,\n    minH: displayType === DisplayType.BIG_NUMBER ? 1 : 2,\n  };\n}\n\nexport function getMobileLayout(desktopLayout: Layout[], widgets: Widget[]) {\n  if (desktopLayout.length === 0) {\n    // Initial case where the user has no layout saved, but\n    // dashboard has widgets\n    return [];\n  }\n\n  const layoutWidgetPairs = zip(desktopLayout, widgets) as [Layout, Widget][];\n\n  // Sort by y and then subsort by x\n  const sorted = sortBy(layoutWidgetPairs, ['0.y', '0.x']);\n\n  const mobileLayout = sorted.map(([layout, widget], index) => ({\n    ...layout,\n    x: 0,\n    y: index * 2,\n    w: 2,\n    h: widget.displayType === DisplayType.BIG_NUMBER ? 1 : 2,\n  }));\n\n  return mobileLayout;\n}\n\n/**\n * Reads the layout from an array of widgets.\n */\nexport function getDashboardLayout(widgets: Widget[]): Layout[] {\n  type WidgetWithDefinedLayout = Omit<Widget, 'layout'> & {layout: WidgetLayout};\n  return widgets\n    .filter((widget): widget is WidgetWithDefinedLayout => defined(widget.layout))\n    .map(({layout, ...widget}) => ({\n      ...layout,\n      i: constructGridItemKey(widget),\n    }));\n}\n\nexport function pickDefinedStoreKeys(layout: Layout): WidgetLayout {\n  // TODO(nar): Fix the types here\n  return pickBy(\n    layout,\n    (value, key) => defined(value) && STORE_KEYS.includes(key)\n  ) as WidgetLayout;\n}\n\nexport function getDefaultWidgetHeight(displayType: DisplayType): number {\n  return displayType === DisplayType.BIG_NUMBER ? 1 : 2;\n}\n\nexport function getInitialColumnDepths() {\n  return Array(NUM_DESKTOP_COLS).fill(0);\n}\n\n/**\n * Creates an array from layouts where each column stores how deep it is.\n */\nexport function calculateColumnDepths(\n  layouts: Pick<Layout, 'h' | 'w' | 'x' | 'y'>[]\n): number[] {\n  const depths = getInitialColumnDepths();\n\n  // For each layout's x, record the max depth\n  layouts.forEach(({x, w, y, h}) => {\n    // Adjust the column depths for each column the widget takes up\n    for (let col = x; col < x + w; col++) {\n      depths[col] = Math.max(y + h, depths[col]);\n    }\n  });\n\n  return depths;\n}\n\n/**\n * Find the next place to place a widget and also returns the next\n * input when this operation needs to be called multiple times.\n *\n * @param columnDepths A profile of how deep the widgets in a column extend.\n * @param height The desired height of the next widget we want to place.\n * @returns An {x, y} positioning for the next available spot, as well as the\n * next columnDepths array if this position were used.\n */\nexport function getNextAvailablePosition(\n  initialColumnDepths: number[],\n  height: number\n): NextPosition {\n  const columnDepths = [...initialColumnDepths];\n  const maxColumnDepth = Math.max(...columnDepths);\n\n  // Look for an opening at each depth by scanning from 0, 0\n  // By scanning from 0 depth to the highest depth, we ensure\n  // we get the top-most available spot\n  for (let currDepth = 0; currDepth <= maxColumnDepth; currDepth++) {\n    for (let start = 0; start <= columnDepths.length - DEFAULT_WIDGET_WIDTH; start++) {\n      if (columnDepths[start] > currDepth) {\n        // There are potentially widgets in the way here, so skip\n        continue;\n      }\n\n      // If all of the columns from start to end (the size of the widget)\n      // have at most the current depth, then we've found a valid positioning\n      // No other widgets extend into the space we need\n      const end = start + DEFAULT_WIDGET_WIDTH;\n      if (columnDepths.slice(start, end).every(val => val <= currDepth)) {\n        for (let col = start; col < start + DEFAULT_WIDGET_WIDTH; col++) {\n          columnDepths[col] = currDepth + height;\n        }\n        return [{x: start, y: currDepth}, [...columnDepths]];\n      }\n    }\n  }\n\n  for (let col = 0; col < DEFAULT_WIDGET_WIDTH; col++) {\n    columnDepths[col] = maxColumnDepth;\n  }\n  return [{x: 0, y: maxColumnDepth}, [...columnDepths]];\n}\n\nexport function assignDefaultLayout<T extends Pick<Widget, 'displayType' | 'layout'>>(\n  widgets: T[],\n  initialColumnDepths: number[]\n): T[] {\n  let columnDepths = [...initialColumnDepths];\n  const newWidgets = widgets.map(widget => {\n    if (defined(widget.layout)) {\n      return widget;\n    }\n    const height = getDefaultWidgetHeight(widget.displayType);\n    const [nextPosition, nextColumnDepths] = getNextAvailablePosition(\n      columnDepths,\n      height\n    );\n    columnDepths = nextColumnDepths;\n\n    return {\n      ...widget,\n      layout: {...nextPosition, h: height, minH: height, w: DEFAULT_WIDGET_WIDTH},\n    };\n  });\n  return newWidgets;\n}\n\nexport function enforceWidgetHeightValues(widget: Widget): Widget {\n  const {displayType, layout} = widget;\n  const nextWidget = {\n    ...widget,\n  };\n  if (!defined(layout)) {\n    return nextWidget;\n  }\n\n  const minH = getDefaultWidgetHeight(displayType);\n  const nextLayout = {\n    ...layout,\n    h: Math.max(layout?.h ?? minH, minH),\n    minH,\n  };\n  return {...nextWidget, layout: nextLayout};\n}\n\nexport function generateWidgetsAfterCompaction(widgets: Widget[]) {\n  // Resolves any potential compactions that need to occur after a\n  // single widget change would affect other widget positions, e.g. deletion\n  const nextLayout = compact(getDashboardLayout(widgets), 'vertical', NUM_DESKTOP_COLS);\n  return widgets.map(widget => {\n    const layout = nextLayout.find(({i}) => i === constructGridItemKey(widget));\n    if (!layout) {\n      return widget;\n    }\n    return {...widget, layout};\n  });\n}\n","import {ComponentProps, useEffect} from 'react';\nimport {useSortable} from '@dnd-kit/sortable';\nimport styled from '@emotion/styled';\n\nimport {Organization} from 'sentry/types';\nimport theme from 'sentry/utils/theme';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport WidgetCard from 'sentry/views/dashboardsV2/widgetCard';\n\nimport {Widget} from './types';\nimport DnDKitWidgetWrapper from './widgetWrapper';\n\nconst TABLE_ITEM_LIMIT = 20;\n\ntype Props = {\n  dragId: string;\n  index: string;\n  isEditing: boolean;\n  onDelete: () => void;\n  onDuplicate: () => void;\n  onEdit: () => void;\n  organization: Organization;\n  widget: Widget;\n  widgetLimitReached: boolean;\n  isMobile?: boolean;\n  isPreview?: boolean;\n  windowWidth?: number;\n};\n\nfunction SortableWidget(props: Props) {\n  const {\n    organization,\n    widget,\n    dragId,\n    isEditing,\n    widgetLimitReached,\n    onDelete,\n    onEdit,\n    onDuplicate,\n    isPreview,\n    isMobile,\n    windowWidth,\n    index,\n  } = props;\n\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    isDragging: currentWidgetDragging,\n    isSorting,\n  } = useSortable({\n    id: dragId,\n    transition: null,\n  });\n\n  useEffect(() => {\n    if (!currentWidgetDragging) {\n      return undefined;\n    }\n\n    document.body.style.cursor = 'grabbing';\n\n    return function cleanup() {\n      document.body.style.cursor = '';\n    };\n  }, [currentWidgetDragging]);\n\n  let widgetProps: ComponentProps<typeof WidgetCard> = {\n    widget,\n    isEditing,\n    widgetLimitReached,\n    onDelete,\n    onEdit,\n    onDuplicate,\n    isSorting,\n    hideToolbar: isSorting,\n    currentWidgetDragging,\n    showContextMenu: true,\n    isPreview,\n    showWidgetViewerButton: organization.features.includes('widget-viewer-modal'),\n    index,\n  };\n\n  if (organization.features.includes('dashboard-grid-layout')) {\n    widgetProps = {\n      ...widgetProps,\n      isMobile,\n      windowWidth,\n      // TODO(nar): These aren't necessary for supporting RGL\n      isSorting: false,\n      currentWidgetDragging: false,\n      tableItemLimit: TABLE_ITEM_LIMIT,\n    };\n    return (\n      <GridWidgetWrapper>\n        <WidgetCard {...widgetProps} />\n      </GridWidgetWrapper>\n    );\n  }\n\n  const initialStyles: ComponentProps<typeof DnDKitWidgetWrapper>['animate'] = {\n    zIndex: 'auto',\n  };\n\n  widgetProps = {...widgetProps, draggableProps: {attributes, listeners}};\n  return (\n    <DnDKitWidgetWrapper\n      ref={setNodeRef}\n      displayType={widget.displayType}\n      layoutId={dragId}\n      style={{\n        // Origin is set to top right-hand corner where the drag handle is placed.\n        // Otherwise, set the origin to be the top left-hand corner when swapping widgets.\n        originX: currentWidgetDragging ? 1 : 0,\n        originY: 0,\n        boxShadow: currentWidgetDragging ? theme.dropShadowHeavy : 'none',\n        borderRadius: currentWidgetDragging ? theme.borderRadius : undefined,\n      }}\n      animate={\n        transform\n          ? {\n              x: transform.x,\n              y: transform.y,\n              scaleX: transform?.scaleX && transform.scaleX <= 1 ? transform.scaleX : 1,\n              scaleY: transform?.scaleY && transform.scaleY <= 1 ? transform.scaleY : 1,\n              zIndex: currentWidgetDragging ? theme.zIndex.modal : 'auto',\n            }\n          : initialStyles\n      }\n      transformTemplate={(___transform, generatedTransform) => {\n        if (isEditing && !!transform) {\n          return generatedTransform;\n        }\n        return 'none';\n      }}\n      transition={{\n        duration: !currentWidgetDragging ? 0.25 : 0,\n        easings: {\n          type: 'spring',\n        },\n      }}\n    >\n      <WidgetCard {...widgetProps} />\n    </DnDKitWidgetWrapper>\n  );\n}\n\nexport default withOrganization(SortableWidget);\n\nconst GridWidgetWrapper = styled('div')`\n  height: 100%;\n`;\n","import styled from '@emotion/styled';\n\nimport {openDashboardWidgetQuerySelectorModal} from 'sentry/actionCreators/modal';\nimport {openConfirmModal} from 'sentry/components/confirm';\nimport DropdownMenuControlV2 from 'sentry/components/dropdownMenuControlV2';\nimport {MenuItemProps} from 'sentry/components/dropdownMenuItemV2';\nimport {IconEllipsis} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {getWidgetDiscoverUrl, getWidgetIssueUrl} from 'sentry/views/dashboardsV2/utils';\n\nimport {Widget, WidgetType} from '../types';\n\ntype Props = {\n  organization: Organization;\n  selection: PageFilters;\n  widget: Widget;\n  widgetLimitReached: boolean;\n  isPreview?: boolean;\n  onDelete?: () => void;\n  onDuplicate?: () => void;\n  onEdit?: () => void;\n  showContextMenu?: boolean;\n};\n\nfunction WidgetCardContextMenu({\n  organization,\n  selection,\n  widget,\n  widgetLimitReached,\n  onDelete,\n  onDuplicate,\n  onEdit,\n  showContextMenu,\n  isPreview,\n}: Props) {\n  if (!showContextMenu) {\n    return null;\n  }\n\n  const menuOptions: MenuItemProps[] = [];\n  const disabledKeys: string[] = [];\n\n  if (isPreview) {\n    return (\n      <ContextWrapper>\n        <StyledDropdownMenuControlV2\n          items={[\n            {\n              key: 'preview',\n              label: t('This is a preview only. To edit, you must add this dashboard.'),\n            },\n          ]}\n          triggerProps={{\n            'aria-label': t('Widget actions'),\n            size: 'xsmall',\n            borderless: true,\n            showChevron: false,\n            icon: <IconEllipsis direction=\"down\" size=\"sm\" />,\n          }}\n          placement=\"bottom right\"\n          disabledKeys={['preview']}\n        />\n      </ContextWrapper>\n    );\n  }\n\n  if (\n    organization.features.includes('discover-basic') &&\n    widget.widgetType === WidgetType.DISCOVER\n  ) {\n    // Open Widget in Discover\n    if (widget.queries.length) {\n      const discoverPath = getWidgetDiscoverUrl(widget, selection, organization);\n      menuOptions.push({\n        key: 'open-in-discover',\n        label: t('Open in Discover'),\n        to: widget.queries.length === 1 ? discoverPath : undefined,\n        onAction: () => {\n          if (widget.queries.length === 1) {\n            trackAdvancedAnalyticsEvent('dashboards_views.open_in_discover.opened', {\n              organization,\n              widget_type: widget.displayType,\n            });\n            return;\n          }\n\n          trackAdvancedAnalyticsEvent('dashboards_views.query_selector.opened', {\n            organization,\n            widget_type: widget.displayType,\n          });\n          openDashboardWidgetQuerySelectorModal({organization, widget});\n        },\n      });\n    }\n  }\n\n  if (widget.widgetType === WidgetType.ISSUE) {\n    const issuesLocation = getWidgetIssueUrl(widget, selection, organization);\n\n    menuOptions.push({\n      key: 'open-in-issues',\n      label: t('Open in Issues'),\n      to: issuesLocation,\n    });\n  }\n\n  if (organization.features.includes('dashboards-edit')) {\n    menuOptions.push({\n      key: 'duplicate-widget',\n      label: t('Duplicate Widget'),\n      onAction: () => onDuplicate?.(),\n    });\n    widgetLimitReached && disabledKeys.push('duplicate-widget');\n\n    menuOptions.push({\n      key: 'edit-widget',\n      label: t('Edit Widget'),\n      onAction: () => onEdit?.(),\n    });\n\n    menuOptions.push({\n      key: 'delete-widget',\n      label: t('Delete Widget'),\n      priority: 'danger',\n      onAction: () => {\n        openConfirmModal({\n          message: t('Are you sure you want to delete this widget?'),\n          priority: 'danger',\n          onConfirm: () => onDelete?.(),\n        });\n      },\n    });\n  }\n\n  if (!menuOptions.length) {\n    return null;\n  }\n\n  return (\n    <ContextWrapper>\n      <StyledDropdownMenuControlV2\n        items={menuOptions}\n        triggerProps={{\n          'aria-label': t('Widget actions'),\n          size: 'xsmall',\n          borderless: true,\n          showChevron: false,\n          icon: <IconEllipsis direction=\"down\" size=\"sm\" />,\n        }}\n        placement=\"bottom right\"\n        disabledKeys={disabledKeys}\n      />\n    </ContextWrapper>\n  );\n}\n\nexport default WidgetCardContextMenu;\n\nconst ContextWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  height: ${space(3)};\n  margin-left: ${space(1)};\n`;\n\nconst StyledDropdownMenuControlV2 = styled(DropdownMenuControlV2)`\n  & > button {\n    z-index: auto;\n  }\n`;\n","import * as React from 'react';\nimport LazyLoad from 'react-lazyload';\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {useSortable} from '@dnd-kit/sortable';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport {HeaderTitle} from 'sentry/components/charts/styles';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport {isWidgetViewerPath} from 'sentry/components/modals/widgetViewerModal/utils';\nimport {Panel} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconCopy, IconDelete, IconEdit, IconExpand, IconGrabbable} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport overflowEllipsis from 'sentry/styles/overflowEllipsis';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport {DRAG_HANDLE_CLASS} from '../dashboard';\nimport {Widget} from '../types';\n\nimport WidgetCardChartContainer from './widgetCardChartContainer';\nimport WidgetCardContextMenu from './widgetCardContextMenu';\n\ntype DraggableProps = Pick<ReturnType<typeof useSortable>, 'attributes' | 'listeners'>;\n\ntype Props = WithRouterProps & {\n  api: Client;\n  currentWidgetDragging: boolean;\n  isEditing: boolean;\n  isSorting: boolean;\n  location: Location;\n  organization: Organization;\n  selection: PageFilters;\n  widget: Widget;\n  widgetLimitReached: boolean;\n  draggableProps?: DraggableProps;\n  hideToolbar?: boolean;\n  index?: string;\n  isMobile?: boolean;\n  isPreview?: boolean;\n  noLazyLoad?: boolean;\n  onDelete?: () => void;\n  onDuplicate?: () => void;\n  onEdit?: () => void;\n  renderErrorMessage?: (errorMessage?: string) => React.ReactNode;\n  showContextMenu?: boolean;\n  showWidgetViewerButton?: boolean;\n  tableItemLimit?: number;\n  windowWidth?: number;\n};\n\nclass WidgetCard extends React.Component<Props> {\n  renderToolbar() {\n    const {\n      onEdit,\n      onDelete,\n      onDuplicate,\n      draggableProps,\n      hideToolbar,\n      isEditing,\n      isMobile,\n    } = this.props;\n\n    if (!isEditing) {\n      return null;\n    }\n\n    return (\n      <ToolbarPanel>\n        <IconContainer style={{visibility: hideToolbar ? 'hidden' : 'visible'}}>\n          {!isMobile && (\n            <IconClick>\n              <StyledIconGrabbable\n                color=\"textColor\"\n                className={DRAG_HANDLE_CLASS}\n                {...draggableProps?.listeners}\n                {...draggableProps?.attributes}\n              />\n            </IconClick>\n          )}\n          <IconClick data-test-id=\"widget-edit\" onClick={onEdit}>\n            <IconEdit color=\"textColor\" />\n          </IconClick>\n          <IconClick aria-label={t('Duplicate Widget')} onClick={onDuplicate}>\n            <IconCopy color=\"textColor\" />\n          </IconClick>\n          <IconClick data-test-id=\"widget-delete\" onClick={onDelete}>\n            <IconDelete color=\"textColor\" />\n          </IconClick>\n        </IconContainer>\n      </ToolbarPanel>\n    );\n  }\n\n  renderContextMenu() {\n    const {\n      widget,\n      selection,\n      organization,\n      showContextMenu,\n      isPreview,\n      widgetLimitReached,\n      onEdit,\n      onDuplicate,\n      onDelete,\n      isEditing,\n    } = this.props;\n\n    if (isEditing) {\n      return null;\n    }\n\n    return (\n      <WidgetCardContextMenu\n        organization={organization}\n        widget={widget}\n        selection={selection}\n        showContextMenu={showContextMenu}\n        isPreview={isPreview}\n        widgetLimitReached={widgetLimitReached}\n        onDuplicate={onDuplicate}\n        onEdit={onEdit}\n        onDelete={onDelete}\n      />\n    );\n  }\n\n  render() {\n    const {\n      api,\n      organization,\n      selection,\n      widget,\n      isMobile,\n      renderErrorMessage,\n      tableItemLimit,\n      windowWidth,\n      noLazyLoad,\n      location,\n      showWidgetViewerButton,\n      router,\n      isEditing,\n      index,\n    } = this.props;\n    const id = widget.id ?? index;\n    return (\n      <ErrorBoundary\n        customComponent={<ErrorCard>{t('Error loading widget data')}</ErrorCard>}\n      >\n        <StyledPanel isDragging={false}>\n          <WidgetHeader>\n            <Tooltip title={widget.title} containerDisplayMode=\"grid\" showOnlyOnOverflow>\n              <WidgetTitle>{widget.title}</WidgetTitle>\n            </Tooltip>\n            {showWidgetViewerButton && !isEditing && id && (\n              <OpenWidgetViewerButton\n                aria-label={t('Open Widget Viewer')}\n                priority=\"link\"\n                size=\"zero\"\n                icon={<IconExpand size=\"xs\" />}\n                onClick={() => {\n                  if (!isWidgetViewerPath(location.pathname)) {\n                    router.push({\n                      pathname: `${location.pathname}${\n                        location.pathname.endsWith('/') ? '' : '/'\n                      }widget/${id}/`,\n                      query: location.query,\n                    });\n                  }\n                }}\n              />\n            )}\n            {this.renderContextMenu()}\n          </WidgetHeader>\n          {noLazyLoad ? (\n            <WidgetCardChartContainer\n              api={api}\n              organization={organization}\n              selection={selection}\n              widget={widget}\n              isMobile={isMobile}\n              renderErrorMessage={renderErrorMessage}\n              tableItemLimit={tableItemLimit}\n              windowWidth={windowWidth}\n            />\n          ) : (\n            <LazyLoad once resize height={200}>\n              <WidgetCardChartContainer\n                api={api}\n                organization={organization}\n                selection={selection}\n                widget={widget}\n                isMobile={isMobile}\n                renderErrorMessage={renderErrorMessage}\n                tableItemLimit={tableItemLimit}\n                windowWidth={windowWidth}\n              />\n            </LazyLoad>\n          )}\n          {this.renderToolbar()}\n        </StyledPanel>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default withApi(withOrganization(withPageFilters(withRouter(WidgetCard))));\n\nconst ErrorCard = styled(Placeholder)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${p => p.theme.alert.error.backgroundLight};\n  border: 1px solid ${p => p.theme.alert.error.border};\n  color: ${p => p.theme.alert.error.textLight};\n  border-radius: ${p => p.theme.borderRadius};\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPanel = styled(Panel, {\n  shouldForwardProp: prop => prop !== 'isDragging',\n})<{\n  isDragging: boolean;\n}>`\n  margin: 0;\n  visibility: ${p => (p.isDragging ? 'hidden' : 'visible')};\n  /* If a panel overflows due to a long title stretch its grid sibling */\n  height: 100%;\n  min-height: 96px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ToolbarPanel = styled('div')`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 2;\n\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-start;\n\n  background-color: ${p => p.theme.overlayBackgroundAlpha};\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst IconContainer = styled('div')`\n  display: flex;\n  margin: 10px ${space(2)};\n  touch-action: none;\n`;\n\nconst IconClick = styled('div')`\n  padding: ${space(1)};\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst StyledIconGrabbable = styled(IconGrabbable)`\n  &:hover {\n    cursor: grab;\n  }\n`;\n\nconst WidgetTitle = styled(HeaderTitle)`\n  ${overflowEllipsis};\n  font-weight: normal;\n`;\n\nconst WidgetHeader = styled('div')`\n  padding: ${space(2)} ${space(3)} 0 ${space(3)};\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst OpenWidgetViewerButton = styled(Button)`\n  margin-left: ${space(0.5)};\n  margin-right: auto;\n  color: ${p => p.theme.textColor};\n`;\n","import styled from '@emotion/styled';\nimport {motion} from 'framer-motion';\n\nimport {Widget} from './types';\n\nconst WidgetWrapper = styled(motion.div)<{displayType: Widget['displayType']}>`\n  position: relative;\n  touch-action: manipulation;\n\n  ${p => {\n    switch (p.displayType) {\n      case 'big_number':\n        return `\n          /* 2 cols */\n          grid-area: span 1 / span 2;\n\n          @media (min-width: ${p.theme.breakpoints[0]}) {\n            /* 4 cols */\n            grid-area: span 1 / span 1;\n          }\n\n          @media (min-width: ${p.theme.breakpoints[3]}) {\n            /* 6 and 8 cols */\n            grid-area: span 1 / span 2;\n          }\n        `;\n      default:\n        return `\n          /* 2, 4, 6 and 8 cols */\n          grid-area: span 2 / span 2;\n        `;\n    }\n  }};\n`;\n\nexport default WidgetWrapper;\n"],"names":["createDashboard","api","orgId","newDashboard","duplicate","title","widgets","promise","requestPromise","method","data","map","widget","omit","catch","response","errorResponse","responseJSON","addErrorMessage","t","updateDashboardVisit","dashboardId","fetchDashboard","updateDashboard","dashboard","id","deleteDashboard","validateWidget","ADD_WIDGET_BUTTON_DRAG_ID","initialStyles","x","y","scaleX","scaleY","AddWidget","onAddWidget","setNodeRef","transform","useSortable","disabled","transition","ref","displayType","DisplayType","layoutId","style","originX","originY","animate","duration","InnerWrapper","onClick","AddButton","icon","size","isCircled","color","Button","p","theme","border","borderRadius","DEFAULT_WIDGET_WIDTH","STORE_KEYS","generateWidgetId","index","constructGridItemKey","tempId","assignTempId","uniqueId","getMobileLayout","desktopLayout","length","layoutWidgetPairs","zip","sortBy","layout","w","h","getDashboardLayout","filter","defined","i","pickDefinedStoreKeys","pickBy","value","key","includes","getDefaultWidgetHeight","getInitialColumnDepths","Array","NUM_DESKTOP_COLS","fill","calculateColumnDepths","layouts","depths","forEach","col","Math","max","getNextAvailablePosition","initialColumnDepths","height","columnDepths","maxColumnDepth","currDepth","start","end","slice","every","val","assignDefaultLayout","nextPosition","nextColumnDepths","minH","enforceWidgetHeightValues","nextWidget","nextLayout","generateWidgetsAfterCompaction","compact","find","SortableWidget","props","organization","dragId","isEditing","widgetLimitReached","onDelete","onEdit","onDuplicate","isPreview","isMobile","windowWidth","attributes","listeners","isDragging","currentWidgetDragging","isSorting","useEffect","document","body","cursor","widgetProps","hideToolbar","showContextMenu","showWidgetViewerButton","features","tableItemLimit","GridWidgetWrapper","draggableProps","boxShadow","undefined","zIndex","transformTemplate","___transform","generatedTransform","easings","type","withOrganization","WidgetCardContextMenu","selection","menuOptions","disabledKeys","ContextWrapper","StyledDropdownMenuControlV2","items","label","triggerProps","borderless","showChevron","direction","placement","widgetType","WidgetType","queries","discoverPath","getWidgetDiscoverUrl","push","to","onAction","trackAdvancedAnalyticsEvent","widget_type","openDashboardWidgetQuerySelectorModal","issuesLocation","getWidgetIssueUrl","priority","openConfirmModal","message","onConfirm","space","DropdownMenuControlV2","WidgetCard","React","renderToolbar","this","ToolbarPanel","IconContainer","visibility","IconClick","StyledIconGrabbable","className","DRAG_HANDLE_CLASS","renderContextMenu","render","renderErrorMessage","noLazyLoad","location","router","customComponent","ErrorCard","StyledPanel","WidgetHeader","containerDisplayMode","showOnlyOnOverflow","WidgetTitle","OpenWidgetViewerButton","isWidgetViewerPath","pathname","endsWith","query","once","resize","withApi","withPageFilters","withRouter","Placeholder","alert","error","backgroundLight","textLight","Panel","shouldForwardProp","prop","overlayBackgroundAlpha","IconGrabbable","HeaderTitle","overflowEllipsis","textColor","motion","breakpoints"],"sourceRoot":""}